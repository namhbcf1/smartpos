{
  "version": 3,
  "sources": ["../bundle-5T0opL/checked-fetch.js", "../bundle-5T0opL/strip-cf-connecting-ip-header.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/cookie.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/utils/stream.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../src/middleware/security.ts", "../../../src/db/migrations.ts", "../../../src/durable_objects/NotificationObject.ts", "../../../src/durable_objects/InventorySyncObject.ts", "../../../src/durable_objects/POSSyncObject.ts", "../../../node_modules/hono/dist/utils/jwt/jwt.js", "../../../node_modules/hono/dist/utils/encode.js", "../../../node_modules/hono/dist/utils/jwt/types.js", "../../../node_modules/hono/dist/middleware/jwt/index.js", "../../../src/middleware/validate.ts", "../../../src/middleware/auth.ts", "../../../node_modules/zod/v3/external.js", "../../../node_modules/zod/v3/helpers/util.js", "../../../node_modules/zod/v3/ZodError.js", "../../../node_modules/zod/v3/locales/en.js", "../../../node_modules/zod/v3/errors.js", "../../../node_modules/zod/v3/helpers/parseUtil.js", "../../../node_modules/zod/v3/helpers/errorUtil.js", "../../../node_modules/zod/v3/types.js", "../../../src/schemas/index.ts", "../../../src/utils/crypto.ts", "../../../src/routes/auth.ts", "../../../src/utils/cache.ts", "../../../src/routes/products.ts", "../../../src/routes/categories.ts", "../../../src/routes/sales.ts", "../../../src/routes/users.ts", "../../../src/routes/reports.ts", "../../../src/routes/settings.ts", "../../../src/routes/stores.ts", "../../../src/routes/inventory.ts", "../../../src/routes/returns.ts", "../../../src/routes/customers.ts", "../../../src/middleware/validation.ts", "../../../src/routes/suppliers.ts", "../../../src/routes/promotions.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-5T0opL/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-5T0opL/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\Administrator\\Desktop\\pos\\.wrangler\\tmp\\dev-zPRhne",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    if (!patternCache[label]) {\n      if (match[2]) {\n        patternCache[label] = [label, match[1], new RegExp(\"^\" + match[2] + \"$\")];\n      } else {\n        patternCache[label] = [label, match[1], true];\n      }\n    }\n    return patternCache[label];\n  }\n  return null;\n};\nvar getPath = (request) => {\n  const match = request.url.match(/^https?:\\/\\/[^/]+(\\/[^?]*)/);\n  return match ? match[1] : \"\";\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result[result.length - 1] === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (...paths) => {\n  let p = \"\";\n  let endsWithSlash = false;\n  for (let path of paths) {\n    if (p[p.length - 1] === \"/\") {\n      p = p.slice(0, -1);\n      endsWithSlash = true;\n    }\n    if (path[0] !== \"/\") {\n      path = `/${path}`;\n    }\n    if (path === \"/\" && endsWithSlash) {\n      p = `${p}/`;\n    } else if (path !== \"/\") {\n      p = `${p}${path}`;\n    }\n    if (path === \"/\" && p === \"\") {\n      p = \"/\";\n    }\n  }\n  return p;\n};\nvar checkOptionalParameter = (path) => {\n  if (!path.match(/\\:.+\\?$/)) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return /%/.test(value) ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ?? (encoded = /[%+]/.test(url));\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ?? (results[name] = value);\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_ } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0; i < signatureBinStr.length; i++) {\n      signature[i] = signatureBinStr.charCodeAt(i);\n    }\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch (e) {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  const pairs = cookie.trim().split(\";\");\n  return pairs.reduce((parsedCookie, pairStr) => {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1) {\n      return parsedCookie;\n    }\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\n      return parsedCookie;\n    }\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\n      cookieValue = cookieValue.slice(1, -1);\n    }\n    if (validCookieValueRegEx.test(cookieValue)) {\n      parsedCookie[cookieName] = decodeURIComponent_(cookieValue);\n    }\n    return parsedCookie;\n  }, {});\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1) {\n      continue;\n    }\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\n      continue;\n    }\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    cookie += `; Max-Age=${Math.floor(opt.maxAge)}`;\n  }\n  if (opt.domain) {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite}`;\n  }\n  if (opt.partitioned) {\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt = {}) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer) => {\n  let str = \"\";\n  const callbacks = [];\n  for (let i = buffer.length - 1; ; i--) {\n    str += buffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = await buffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  stringBufferToString\n};\n", "// src/utils/stream.ts\nvar StreamingApi = class {\n  constructor(writable, _readable) {\n    this.abortSubscribers = [];\n    this.writable = writable;\n    this.writer = writable.getWriter();\n    this.encoder = new TextEncoder();\n    const reader = _readable.getReader();\n    this.responseReadable = new ReadableStream({\n      async pull(controller) {\n        const { done, value } = await reader.read();\n        done ? controller.close() : controller.enqueue(value);\n      },\n      cancel: () => {\n        this.abortSubscribers.forEach((subscriber) => subscriber());\n      }\n    });\n  }\n  async write(input) {\n    try {\n      if (typeof input === \"string\") {\n        input = this.encoder.encode(input);\n      }\n      await this.writer.write(input);\n    } catch (e) {\n    }\n    return this;\n  }\n  async writeln(input) {\n    await this.write(input + \"\\n\");\n    return this;\n  }\n  sleep(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  async close() {\n    try {\n      await this.writer.close();\n    } catch (e) {\n    }\n  }\n  async pipe(body) {\n    this.writer.releaseLock();\n    await body.pipeTo(this.writable, { preventClose: true });\n    this.writer = this.writable.getWriter();\n  }\n  async onAbort(listener) {\n    this.abortSubscribers.push(listener);\n  }\n};\nexport {\n  StreamingApi\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/context.ts\nimport { serialize } from \"./utils/cookie.js\";\nimport { resolveCallback, HtmlEscapedCallbackPhase } from \"./utils/html.js\";\nimport { StreamingApi } from \"./utils/stream.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setHeaders = (headers, map = {}) => {\n  Object.entries(map).forEach(([key, value]) => headers.set(key, value));\n  return headers;\n};\nvar _status, _executionCtx, _headers, _preparedHeaders, _res, _isFresh;\nvar Context = class {\n  constructor(req, options) {\n    this.env = {};\n    this._var = {};\n    this.finalized = false;\n    this.error = void 0;\n    __privateAdd(this, _status, 200);\n    __privateAdd(this, _executionCtx, void 0);\n    __privateAdd(this, _headers, void 0);\n    __privateAdd(this, _preparedHeaders, void 0);\n    __privateAdd(this, _res, void 0);\n    __privateAdd(this, _isFresh, true);\n    this.renderer = (content) => this.html(content);\n    this.notFoundHandler = () => new Response();\n    this.render = (...args) => this.renderer(...args);\n    this.setRenderer = (renderer) => {\n      this.renderer = renderer;\n    };\n    this.header = (name, value, options) => {\n      if (value === void 0) {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).delete(name);\n        } else if (__privateGet(this, _preparedHeaders)) {\n          delete __privateGet(this, _preparedHeaders)[name.toLocaleLowerCase()];\n        }\n        if (this.finalized) {\n          this.res.headers.delete(name);\n        }\n        return;\n      }\n      if (options?.append) {\n        if (!__privateGet(this, _headers)) {\n          __privateSet(this, _isFresh, false);\n          __privateSet(this, _headers, new Headers(__privateGet(this, _preparedHeaders)));\n          __privateSet(this, _preparedHeaders, {});\n        }\n        __privateGet(this, _headers).append(name, value);\n      } else {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).set(name, value);\n        } else {\n          __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n          __privateGet(this, _preparedHeaders)[name.toLowerCase()] = value;\n        }\n      }\n      if (this.finalized) {\n        if (options?.append) {\n          this.res.headers.append(name, value);\n        } else {\n          this.res.headers.set(name, value);\n        }\n      }\n    };\n    this.status = (status) => {\n      __privateSet(this, _isFresh, false);\n      __privateSet(this, _status, status);\n    };\n    this.set = (key, value) => {\n      this._var ?? (this._var = {});\n      this._var[key] = value;\n    };\n    this.get = (key) => {\n      return this._var ? this._var[key] : void 0;\n    };\n    this.newResponse = (data, arg, headers) => {\n      if (__privateGet(this, _isFresh) && !headers && !arg && __privateGet(this, _status) === 200) {\n        return new Response(data, {\n          headers: __privateGet(this, _preparedHeaders)\n        });\n      }\n      if (arg && typeof arg !== \"number\") {\n        const headers2 = setHeaders(new Headers(arg.headers), __privateGet(this, _preparedHeaders));\n        return new Response(data, {\n          headers: headers2,\n          status: arg.status\n        });\n      }\n      const status = typeof arg === \"number\" ? arg : __privateGet(this, _status);\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _headers) ?? __privateSet(this, _headers, new Headers());\n      setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n      if (__privateGet(this, _res)) {\n        __privateGet(this, _res).headers.forEach((v, k) => {\n          __privateGet(this, _headers)?.set(k, v);\n        });\n        setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n      }\n      headers ?? (headers = {});\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          __privateGet(this, _headers).set(k, v);\n        } else {\n          __privateGet(this, _headers).delete(k);\n          for (const v2 of v) {\n            __privateGet(this, _headers).append(k, v2);\n          }\n        }\n      }\n      return new Response(data, {\n        status,\n        headers: __privateGet(this, _headers)\n      });\n    };\n    this.body = (data, arg, headers) => {\n      return typeof arg === \"number\" ? this.newResponse(data, arg, headers) : this.newResponse(data, arg);\n    };\n    this.text = (text, arg, headers) => {\n      if (!__privateGet(this, _preparedHeaders)) {\n        if (__privateGet(this, _isFresh) && !headers && !arg) {\n          return new Response(text);\n        }\n        __privateSet(this, _preparedHeaders, {});\n      }\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = TEXT_PLAIN;\n      return typeof arg === \"number\" ? this.newResponse(text, arg, headers) : this.newResponse(text, arg);\n    };\n    this.json = (object, arg, headers) => {\n      const body = JSON.stringify(object);\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"application/json; charset=UTF-8\";\n      return typeof arg === \"number\" ? this.newResponse(body, arg, headers) : this.newResponse(body, arg);\n    };\n    this.jsonT = (object, arg, headers) => {\n      return this.json(object, arg, headers);\n    };\n    this.html = (html, arg, headers) => {\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"text/html; charset=UTF-8\";\n      if (typeof html === \"object\") {\n        if (!(html instanceof Promise)) {\n          html = html.toString();\n        }\n        if (html instanceof Promise) {\n          return html.then((html2) => resolveCallback(html2, HtmlEscapedCallbackPhase.Stringify, false, {})).then((html2) => {\n            return typeof arg === \"number\" ? this.newResponse(html2, arg, headers) : this.newResponse(html2, arg);\n          });\n        }\n      }\n      return typeof arg === \"number\" ? this.newResponse(html, arg, headers) : this.newResponse(html, arg);\n    };\n    this.redirect = (location, status = 302) => {\n      __privateGet(this, _headers) ?? __privateSet(this, _headers, new Headers());\n      __privateGet(this, _headers).set(\"Location\", location);\n      return this.newResponse(null, status);\n    };\n    this.streamText = (cb, arg, headers) => {\n      headers ?? (headers = {});\n      this.header(\"content-type\", TEXT_PLAIN);\n      this.header(\"x-content-type-options\", \"nosniff\");\n      this.header(\"transfer-encoding\", \"chunked\");\n      return this.stream(cb, arg, headers);\n    };\n    this.stream = (cb, arg, headers) => {\n      const { readable, writable } = new TransformStream();\n      const stream = new StreamingApi(writable, readable);\n      cb(stream).finally(() => stream.close());\n      return typeof arg === \"number\" ? this.newResponse(stream.responseReadable, arg, headers) : this.newResponse(stream.responseReadable, arg);\n    };\n    this.cookie = (name, value, opt) => {\n      const cookie = serialize(name, value, opt);\n      this.header(\"set-cookie\", cookie, { append: true });\n    };\n    this.notFound = () => {\n      return this.notFoundHandler(this);\n    };\n    this.req = req;\n    if (options) {\n      __privateSet(this, _executionCtx, options.executionCtx);\n      this.env = options.env;\n      if (options.notFoundHandler) {\n        this.notFoundHandler = options.notFoundHandler;\n      }\n    }\n  }\n  get event() {\n    if (__privateGet(this, _executionCtx) && \"respondWith\" in __privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (__privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    __privateSet(this, _isFresh, false);\n    return __privateGet(this, _res) || __privateSet(this, _res, new Response(\"404 Not Found\", { status: 404 }));\n  }\n  set res(_res2) {\n    __privateSet(this, _isFresh, false);\n    if (__privateGet(this, _res) && _res2) {\n      __privateGet(this, _res).headers.delete(\"content-type\");\n      for (const [k, v] of __privateGet(this, _res).headers.entries()) {\n        if (k === \"set-cookie\") {\n          const cookies = __privateGet(this, _res).headers.getSetCookie();\n          _res2.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res2.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res2.headers.set(k, v);\n        }\n      }\n    }\n    __privateSet(this, _res, _res2);\n    this.finalized = true;\n  }\n  get var() {\n    return { ...this._var };\n  }\n  get runtime() {\n    const global = globalThis;\n    if (global?.Deno !== void 0) {\n      return \"deno\";\n    }\n    if (global?.Bun !== void 0) {\n      return \"bun\";\n    }\n    if (typeof global?.WebSocketPair === \"function\") {\n      return \"workerd\";\n    }\n    if (typeof global?.EdgeRuntime === \"string\") {\n      return \"edge-light\";\n    }\n    if (global?.fastly !== void 0) {\n      return \"fastly\";\n    }\n    if (global?.__lagon__ !== void 0) {\n      return \"lagon\";\n    }\n    if (global?.process?.release?.name === \"node\") {\n      return \"node\";\n    }\n    return \"other\";\n  }\n};\n_status = new WeakMap();\n_executionCtx = new WeakMap();\n_headers = new WeakMap();\n_preparedHeaders = new WeakMap();\n_res = new WeakMap();\n_isFresh = new WeakMap();\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/compose.ts\nimport { Context } from \"./context.js\";\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        if (context instanceof Context) {\n          context.req.routeIndex = i;\n        }\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (!handler) {\n        if (context instanceof Context && context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      } else {\n        try {\n          res = await handler(context, () => {\n            return dispatch(i + 1);\n          });\n        } catch (err) {\n          if (err instanceof Error && context instanceof Context && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  constructor(status = 500, options) {\n    super(options?.message);\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      return this.res;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/body.ts\nvar parseBody = async (request, options = { all: false }) => {\n  const contentType = request.headers.get(\"Content-Type\");\n  if (isFormDataContent(contentType)) {\n    return parseFormData(request, options);\n  }\n  return {};\n};\nfunction isFormDataContent(contentType) {\n  if (contentType === null) {\n    return false;\n  }\n  return contentType.startsWith(\"multipart/form-data\") || contentType.startsWith(\"application/x-www-form-urlencoded\");\n}\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = {};\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] && isArrayField(form[key])) {\n    appendToExistingArray(form[key], value);\n  } else if (form[key]) {\n    convertToNewArray(form, key, value);\n  } else {\n    form[key] = value;\n  }\n};\nfunction isArrayField(field) {\n  return Array.isArray(field);\n}\nvar appendToExistingArray = (arr, value) => {\n  arr.push(value);\n};\nvar convertToNewArray = (form, key, value) => {\n  form[key] = [form[key], value];\n};\nexport {\n  parseBody\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { parse } from \"./utils/cookie.js\";\nimport { getQueryParam, getQueryParams, decodeURIComponent_ } from \"./utils/url.js\";\nvar _validatedData, _matchResult;\nvar HonoRequest = class {\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    __privateAdd(this, _validatedData, void 0);\n    __privateAdd(this, _matchResult, void 0);\n    this.routeIndex = 0;\n    this.bodyCache = {};\n    this.cachedBody = (key) => {\n      const { bodyCache, raw } = this;\n      const cachedBody = bodyCache[key];\n      if (cachedBody) {\n        return cachedBody;\n      }\n      if (bodyCache.arrayBuffer) {\n        return (async () => {\n          return await new Response(bodyCache.arrayBuffer)[key]();\n        })();\n      }\n      return bodyCache[key] = raw[key]();\n    };\n    this.raw = request;\n    this.path = path;\n    __privateSet(this, _matchResult, matchResult);\n    __privateSet(this, _validatedData, {});\n  }\n  param(key) {\n    return key ? this.getDecodedParam(key) : this.getAllDecodedParams();\n  }\n  getDecodedParam(key) {\n    const paramKey = __privateGet(this, _matchResult)[0][this.routeIndex][1][key];\n    const param = this.getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? decodeURIComponent_(param) : param : void 0;\n  }\n  getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(__privateGet(this, _matchResult)[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.getParamValue(__privateGet(this, _matchResult)[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? decodeURIComponent_(value) : value;\n      }\n    }\n    return decoded;\n  }\n  getParamValue(paramKey) {\n    return __privateGet(this, _matchResult)[1] ? __privateGet(this, _matchResult)[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name.toLowerCase()) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  cookie(key) {\n    const cookie = this.raw.headers.get(\"Cookie\");\n    if (!cookie) {\n      return;\n    }\n    const obj = parse(cookie);\n    if (key) {\n      const value = obj[key];\n      return value;\n    } else {\n      return obj;\n    }\n  }\n  async parseBody(options) {\n    if (this.bodyCache.parsedBody) {\n      return this.bodyCache.parsedBody;\n    }\n    const parsedBody = await parseBody(this, options);\n    this.bodyCache.parsedBody = parsedBody;\n    return parsedBody;\n  }\n  json() {\n    return this.cachedBody(\"json\");\n  }\n  text() {\n    return this.cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.cachedBody(\"blob\");\n  }\n  formData() {\n    return this.cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    __privateGet(this, _validatedData)[target] = data;\n  }\n  valid(target) {\n    return __privateGet(this, _validatedData)[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get matchedRoutes() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n  get headers() {\n    return this.raw.headers;\n  }\n  get body() {\n    return this.raw.body;\n  }\n  get bodyUsed() {\n    return this.raw.bodyUsed;\n  }\n  get integrity() {\n    return this.raw.integrity;\n  }\n  get keepalive() {\n    return this.raw.keepalive;\n  }\n  get referrer() {\n    return this.raw.referrer;\n  }\n  get signal() {\n    return this.raw.signal;\n  }\n};\n_validatedData = new WeakMap();\n_matchResult = new WeakMap();\nexport {\n  HonoRequest\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { HTTPException } from \"./http-exception.js\";\nimport { HonoRequest } from \"./request.js\";\nimport { METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE, METHODS } from \"./router.js\";\nimport { getPath, getPathNoStrict, getQueryStrings, mergePath } from \"./utils/url.js\";\nvar COMPOSED_HANDLER = Symbol(\"composedHandler\");\nfunction defineDynamicClass() {\n  return class {\n  };\n}\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (err instanceof HTTPException) {\n    return err.getResponse();\n  }\n  console.error(err);\n  const message = \"Internal Server Error\";\n  return c.text(message, 500);\n};\nvar _path;\nvar _Hono = class extends defineDynamicClass() {\n  constructor(options = {}) {\n    super();\n    this._basePath = \"/\";\n    __privateAdd(this, _path, \"/\");\n    this.routes = [];\n    this.notFoundHandler = notFoundHandler;\n    this.errorHandler = errorHandler;\n    this.onError = (handler) => {\n      this.errorHandler = handler;\n      return this;\n    };\n    this.notFound = (handler) => {\n      this.notFoundHandler = handler;\n      return this;\n    };\n    this.head = () => {\n      console.warn(\"`app.head()` is no longer used. `app.get()` implicitly handles the HEAD method.\");\n      return this;\n    };\n    this.handleEvent = (event) => {\n      return this.dispatch(event.request, event, void 0, event.request.method);\n    };\n    this.fetch = (request, Env, executionCtx) => {\n      return this.dispatch(request, executionCtx, Env, request.method);\n    };\n    this.request = (input, requestInit, Env, executionCtx) => {\n      if (input instanceof Request) {\n        if (requestInit !== void 0) {\n          input = new Request(input, requestInit);\n        }\n        return this.fetch(input, Env, executionCtx);\n      }\n      input = input.toString();\n      const path = /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`;\n      const req = new Request(path, requestInit);\n      return this.fetch(req, Env, executionCtx);\n    };\n    this.fire = () => {\n      addEventListener(\"fetch\", (event) => {\n        event.respondWith(this.dispatch(event.request, event, void 0, event.request.method));\n      });\n    };\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.map((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          __privateSet(this, _path, args1);\n        } else {\n          this.addRoute(method, __privateGet(this, _path), args1);\n        }\n        args.map((handler) => {\n          if (typeof handler !== \"string\") {\n            this.addRoute(method, __privateGet(this, _path), handler);\n          }\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      if (!method) {\n        return this;\n      }\n      __privateSet(this, _path, path);\n      for (const m of [method].flat()) {\n        handlers.map((handler) => {\n          this.addRoute(m.toUpperCase(), __privateGet(this, _path), handler);\n        });\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        __privateSet(this, _path, arg1);\n      } else {\n        handlers.unshift(arg1);\n      }\n      handlers.map((handler) => {\n        this.addRoute(METHOD_NAME_ALL, __privateGet(this, _path), handler);\n      });\n      return this;\n    };\n    const strict = options.strict ?? true;\n    delete options.strict;\n    Object.assign(this, options);\n    this.getPath = strict ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  clone() {\n    const clone = new _Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  route(path, app) {\n    const subApp = this.basePath(path);\n    if (!app) {\n      return subApp;\n    }\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  showRoutes() {\n    const length = 8;\n    this.routes.map((route) => {\n      console.log(\n        `\\x1B[32m${route.method}\\x1B[0m ${\" \".repeat(length - route.method.length)} ${route.path}`\n      );\n    });\n  }\n  mount(path, applicationHandler, optionHandler) {\n    const mergedPath = mergePath(this._basePath, path);\n    const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n    const handler = async (c, next) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      const options = optionHandler ? optionHandler(c) : [c.env, executionContext];\n      const optionsArray = Array.isArray(options) ? options : [options];\n      const queryStrings = getQueryStrings(c.req.url);\n      const res = await applicationHandler(\n        new Request(\n          new URL((c.req.path.slice(pathPrefixLength) || \"/\") + queryStrings, c.req.url),\n          c.req.raw\n        ),\n        ...optionsArray\n      );\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  get routerName() {\n    this.matchRoute(\"GET\", \"/\");\n    return this.router.name;\n  }\n  addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  matchRoute(method, path) {\n    return this.router.match(method, path);\n  }\n  handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.matchRoute(method, path);\n    const c = new Context(new HonoRequest(request, path, matchResult), {\n      env,\n      executionCtx,\n      notFoundHandler: this.notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.notFoundHandler(c))\n      ).catch((err) => this.handleError(err, c)) : res;\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. You may forget returning Response object or `await next()`\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n    })();\n  }\n};\nvar Hono = _Hono;\n_path = new WeakMap();\nexport {\n  COMPOSED_HANDLER,\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  constructor() {\n    this.children = {};\n  }\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.varIndex]);\n      }\n    } else {\n      node = this.children[token];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.children[k];\n      return (typeof c.varIndex === \"number\" ? `(${k})@${c.varIndex}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.index === \"number\") {\n      strList.unshift(`#${this.index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  constructor() {\n    this.context = { varIndex: 0 };\n    this.root = new Node();\n  }\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.root.insert(tokens, index, paramAssoc, this.context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (typeof handlerIndex !== \"undefined\") {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (typeof paramIndex !== \"undefined\") {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  METHOD_NAME_ALL,\n  METHODS,\n  UnsupportedPathError,\n  MESSAGE_MATCHER_IS_ALREADY_BUILT\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar methodNames = [METHOD_NAME_ALL, ...METHODS].map((method) => method.toUpperCase());\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], {}];\nvar wildcardRegExpCache = {};\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ?? (wildcardRegExpCache[path] = new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(/\\/\\*/, \"(?:|/.*)\")}$`\n  ));\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = {};\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = {};\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, {}]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = {};\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  constructor() {\n    this.name = \"RegExpRouter\";\n    this.middleware = { [METHOD_NAME_ALL]: {} };\n    this.routes = { [METHOD_NAME_ALL]: {} };\n  }\n  add(method, path, handler) {\n    var _a;\n    const { middleware, routes } = this;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (methodNames.indexOf(method) === -1) {\n      methodNames.push(method);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = {};\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          var _a2;\n          (_a2 = middleware[m])[path] || (_a2[path] = findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n        });\n      } else {\n        (_a = middleware[method])[path] || (_a[path] = findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        var _a2;\n        if (method === METHOD_NAME_ALL || method === m) {\n          (_a2 = routes[m])[path2] || (_a2[path2] = [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ]);\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  buildAllMatchers() {\n    const matchers = {};\n    methodNames.forEach((method) => {\n      matchers[method] = this.buildMatcher(method) || matchers[METHOD_NAME_ALL];\n    });\n    this.middleware = this.routes = void 0;\n    return matchers;\n  }\n  buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.middleware, this.routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute || (hasOwnRoute = true);\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { UnsupportedPathError, MESSAGE_MATCHER_IS_ALREADY_BUILT } from \"../../router.js\";\nvar SmartRouter = class {\n  constructor(init) {\n    this.name = \"SmartRouter\";\n    this.routers = [];\n    this.routes = [];\n    Object.assign(this, init);\n  }\n  add(method, path, handler) {\n    if (!this.routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const { routers, routes } = this;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        routes.forEach((args) => {\n          router.add(...args);\n        });\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.routers = [router];\n      this.routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.routes || this.routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { splitPath, splitRoutingPath, getPattern } from \"../../utils/url.js\";\nvar Node = class {\n  constructor(method, handler, children) {\n    this.order = 0;\n    this.params = {};\n    this.children = children || {};\n    this.methods = [];\n    this.name = \"\";\n    if (method && handler) {\n      const m = {};\n      m[method] = { handler, possibleKeys: [], score: 0, name: this.name };\n      this.methods = [m];\n    }\n    this.patterns = [];\n  }\n  insert(method, path, handler) {\n    this.name = `${method} ${path}`;\n    this.order = ++this.order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    const parentPatterns = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      if (Object.keys(curNode.children).includes(p)) {\n        parentPatterns.push(...curNode.patterns);\n        curNode = curNode.children[p];\n        const pattern2 = getPattern(p);\n        if (pattern2) {\n          possibleKeys.push(pattern2[1]);\n        }\n        continue;\n      }\n      curNode.children[p] = new Node();\n      const pattern = getPattern(p);\n      if (pattern) {\n        curNode.patterns.push(pattern);\n        parentPatterns.push(...curNode.patterns);\n        possibleKeys.push(pattern[1]);\n      }\n      parentPatterns.push(...curNode.patterns);\n      curNode = curNode.children[p];\n    }\n    if (!curNode.methods.length) {\n      curNode.methods = [];\n    }\n    const m = {};\n    const handlerSet = {\n      handler,\n      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n      name: this.name,\n      score: this.order\n    };\n    m[method] = handlerSet;\n    curNode.methods.push(m);\n    return curNode;\n  }\n  gHSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.methods.length; i < len; i++) {\n      const m = node.methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = {};\n        handlerSet.possibleKeys.forEach((key) => {\n          const processed = processedSet[handlerSet.name];\n          handlerSet.params[key] = params[key] && !processed ? params[key] : nodeParams[key] ?? params[key];\n          processedSet[handlerSet.name] = true;\n        });\n        handlerSets.push(handlerSet);\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.params = {};\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.children[part];\n        if (nextNode) {\n          nextNode.params = node.params;\n          if (isLast === true) {\n            if (nextNode.children[\"*\"]) {\n              handlerSets.push(...this.gHSets(nextNode.children[\"*\"], method, node.params, {}));\n            }\n            handlerSets.push(...this.gHSets(nextNode, method, node.params, {}));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.patterns.length; k < len3; k++) {\n          const pattern = node.patterns[k];\n          const params = { ...node.params };\n          if (pattern === \"*\") {\n            const astNode = node.children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.gHSets(astNode, method, node.params, {}));\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\") {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp && matcher.test(restPathString)) {\n            params[name] = restPathString;\n            handlerSets.push(...this.gHSets(child, method, node.params, params));\n            continue;\n          }\n          if (matcher === true || matcher instanceof RegExp && matcher.test(part)) {\n            if (typeof key === \"string\") {\n              params[name] = part;\n              if (isLast === true) {\n                handlerSets.push(...this.gHSets(child, method, params, node.params));\n                if (child.children[\"*\"]) {\n                  handlerSets.push(...this.gHSets(child.children[\"*\"], method, params, node.params));\n                }\n              } else {\n                child.params = params;\n                tempNodes.push(child);\n              }\n            }\n          }\n        }\n      }\n      curNodes = tempNodes;\n    }\n    const results = handlerSets.sort((a, b) => {\n      return a.score - b.score;\n    });\n    return [results.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  constructor() {\n    this.name = \"TrieRouter\";\n    this.node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (const p of results) {\n        this.node.insert(method, p, handler);\n      }\n      return;\n    }\n    this.node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "import { Context, Next, MiddlewareHandler } from 'hono';\r\nimport { Env } from '../types';\r\nimport { cors } from 'hono/cors';\r\n\r\n// Rate limiting middleware with different tiers\r\nconst RATE_LIMITS: Record<string, { limit: number, window: number }> = {\r\n  'default': { limit: 1000, window: 60 }, // 1000 requests per minute\r\n  'auth': { limit: 100, window: 60 }, // 100 auth requests per minute\r\n  'critical': { limit: 500, window: 60 } // 500 requests per minute for critical operations\r\n};\r\n\r\nexport const rateLimit = (tier: keyof typeof RATE_LIMITS = 'default'): MiddlewareHandler => {\r\n  const { limit, window } = RATE_LIMITS[tier] || RATE_LIMITS.default;\r\n  \r\n  return async (c: Context, next: Next) => {\r\n    // Skip rate limiting if KV is not available or limit exceeded\r\n    if (!c.env || !c.env.SESSIONS) {\r\n      console.warn('Rate limiting KV binding missing, skipping rate limit');\r\n      return next();\r\n    }\r\n\r\n    const ip = c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'unknown';\r\n    const route = c.req.path;\r\n    const key = `ratelimit:${tier}:${ip}:${route}`;\r\n    \r\n    try {\r\n      let counter = await c.env.SESSIONS.get(key);\r\n      let count = counter ? parseInt(counter, 10) + 1 : 1;\r\n      \r\n      if (count > limit) {\r\n        return c.json({\r\n          success: false,\r\n          message: 'Rate limit exceeded. Please try again later.',\r\n          error: 'RATE_LIMIT_EXCEEDED'\r\n        }, 429);\r\n      }\r\n      \r\n      // Try to update counter, but don't fail if KV limit exceeded\r\n      try {\r\n        await c.env.SESSIONS.put(key, count.toString(), { expirationTtl: window });\r\n      } catch (kvError) {\r\n        console.warn('KV put failed, continuing without rate limit update:', kvError);\r\n      }\r\n      \r\n      // Add rate limit headers\r\n      c.header('X-RateLimit-Limit', limit.toString());\r\n      c.header('X-RateLimit-Remaining', (limit - count).toString());\r\n      \r\n      return next();\r\n    } catch (error) {\r\n      console.warn('Rate limiting error, continuing without rate limit:', error);\r\n      return next();\r\n    }\r\n  };\r\n};\r\n\r\n// Security headers middleware\r\nexport const securityHeaders: MiddlewareHandler = async (c, next) => {\r\n  // Set security headers\r\n  c.header('X-Content-Type-Options', 'nosniff');\r\n  c.header('X-Frame-Options', 'DENY');\r\n  c.header('X-XSS-Protection', '1; mode=block');\r\n  c.header('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');\r\n  c.header('Referrer-Policy', 'strict-origin-when-cross-origin');\r\n  c.header('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\r\n  \r\n  // Content Security Policy\r\n  c.header(\r\n    'Content-Security-Policy',\r\n    \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: blob:; connect-src 'self' *.workers.dev *.pages.dev;\"\r\n  );\r\n  \r\n  await next();\r\n};\r\n\r\n// CORS middleware - Proper implementation for credentials\r\nexport const corsSecurity: MiddlewareHandler = async (c, next) => {\r\n  const origin = c.req.header('Origin');\r\n  const allowedOrigins = [\r\n    'https://smartpos-web.pages.dev',\r\n    , // Previous deployment with Suppliers Management (API path issue)\r\n    'https://1f0934d1.smartpos-web.pages.dev', // Previous deployment with Suppliers Management (API path fixed, missing api import)\r\n    'https://bc283575.smartpos-web.pages.dev', // Current deployment with Suppliers Management (api import fixed)\r\n    'http://localhost:5173', // Local development\r\n    'http://localhost:3000'  // Alternative local development port\r\n  ];\r\n  \r\n  // Always set CORS headers for preflight\r\n  if (origin && allowedOrigins.includes(origin)) {\r\n    c.header('Access-Control-Allow-Origin', origin);\r\n  } else {\r\n    // For debugging - log the origin\r\n    console.log('CORS: Origin not allowed:', origin);\r\n    console.log('CORS: Allowed origins:', allowedOrigins);\r\n    // Still set CORS headers for debugging\r\n    if (origin) {\r\n      c.header('Access-Control-Allow-Origin', origin);\r\n    }\r\n  }\r\n  \r\n  // Required headers for credentials\r\n  c.header('Access-Control-Allow-Credentials', 'true');\r\n  c.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS, PATCH');\r\n  c.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Accept, X-Requested-With, X-Client-Version, Origin');\r\n  c.header('Access-Control-Max-Age', '86400');\r\n\r\n  // Handle preflight requests\r\n  if (c.req.method === 'OPTIONS') {\r\n    console.log('CORS: Handling preflight request for origin:', origin);\r\n    return c.text('', 204);\r\n  }\r\n\r\n  await next();\r\n};\r\n\r\n// SQL injection protection middleware\r\nexport const sqlInjectionProtection: MiddlewareHandler = async (c, next) => {\r\n  const url = c.req.url;\r\n  const body = await c.req.text();\r\n  c.req.raw = new Request(c.req.url, {\r\n    method: c.req.method,\r\n    headers: c.req.header(),\r\n    body: body ? body : undefined\r\n  });\r\n  \r\n  // Simple patterns to detect SQL injection attempts\r\n  const sqlPatterns = [\r\n    /(\\%27)|(\\')|(\\-\\-)|(\\%23)|(#)/i,\r\n    /((\\%3D)|(=))[^\\n]*((\\%27)|(\\')|(\\-\\-)|(\\%3B)|(;))/i,\r\n    /\\w*((\\%27)|(\\'))((\\%6F)|o|(\\%4F))((\\%72)|r|(\\%52))/i,\r\n    /((\\%27)|(\\'))union/i\r\n  ];\r\n  \r\n  // Check URL and body for SQL injection patterns\r\n  for (const pattern of sqlPatterns) {\r\n    if (pattern.test(url) || (body && pattern.test(body))) {\r\n      console.error('Possible SQL injection attempt detected:', { url, body: body.substring(0, 100) });\r\n      return c.json({\r\n        success: false,\r\n        message: 'Possible SQL injection detected',\r\n        error: 'SECURITY_VIOLATION'\r\n      }, 403);\r\n    }\r\n  }\r\n  \r\n  await next();\r\n};\r\n\r\n// Request logging middleware\r\nexport const accessLogger: MiddlewareHandler = async (c, next) => {\r\n  const start = Date.now();\r\n  const { method, url } = c.req;\r\n  const ip = c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'unknown';\r\n  const userAgent = c.req.header('User-Agent') || 'unknown';\r\n  \r\n  await next();\r\n  \r\n  const end = Date.now();\r\n  const responseTime = end - start;\r\n  \r\n  // Log the request\r\n  console.log(`[${new Date().toISOString()}] ${method} ${url} ${c.res.status} ${responseTime}ms - ${ip} ${userAgent}`);\r\n};\r\n\r\n// Audit logging for important actions\r\nexport const auditLogger = async (c: Context, action: string, details: Record<string, any> = {}) => {\r\n  if (!c.env || !c.env.DB) {\r\n    console.error('Audit logging failed: DB binding missing');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const timestamp = new Date().toISOString();\r\n    const ip = c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'unknown';\r\n    const userAgent = c.req.header('User-Agent') || 'unknown';\r\n    const user = c.get('jwtPayload')?.sub || 'anonymous';\r\n    \r\n    // Insert audit log into database\r\n    await c.env.DB.prepare(`\r\n      INSERT INTO activity_logs \r\n      (user_id, action, ip_address, user_agent, details, created_at)\r\n      VALUES (?, ?, ?, ?, ?, datetime('now'))\r\n    `)\r\n    .bind(\r\n      user,\r\n      action,\r\n      ip,\r\n      userAgent,\r\n      JSON.stringify(details)\r\n    )\r\n    .run();\r\n  } catch (error) {\r\n    console.error('Error writing audit log:', error);\r\n  }\r\n}; ", "/**\n * Database Migration System\n * \n * H\u1EC7 th\u1ED1ng migration t\u1EF1 \u0111\u1ED9ng cho Cloudflare D1\n * Tu\u00E2n th\u1EE7 nguy\u00EAn t\u1EAFc \"ALWAYS implement proper database migrations\"\n */\n\nimport { Env } from '../types';\n\n// Migration version structure\ninterface Migration {\n  version: number;\n  description: string;\n  sql: string;\n}\n\n// Danh s\u00E1ch c\u00E1c migrations theo th\u1EE9 t\u1EF1 version\nconst migrations: Migration[] = [\n  {\n    version: 3,\n    description: 'Recreate products and categories tables with correct schema',\n    sql: `\n      -- Drop existing tables to recreate with correct schema\n      DROP TABLE IF EXISTS products;\n      DROP TABLE IF EXISTS categories;\n\n      -- Create categories table\n      CREATE TABLE categories (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        description TEXT,\n        is_active INTEGER NOT NULL DEFAULT 1,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\n      );\n\n      -- Create products table with all required columns\n      CREATE TABLE products (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        description TEXT,\n        sku TEXT UNIQUE NOT NULL,\n        barcode TEXT UNIQUE,\n        category_id INTEGER,\n        price REAL NOT NULL DEFAULT 0,\n        cost_price REAL DEFAULT 0,\n        tax_rate REAL DEFAULT 0,\n        stock_quantity INTEGER DEFAULT 0,\n        stock_alert_threshold INTEGER DEFAULT 5,\n        is_active INTEGER NOT NULL DEFAULT 1,\n        image_url TEXT,\n        deleted_at DATETIME NULL,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (category_id) REFERENCES categories(id)\n      );\n    `\n  },\n  {\n    version: 4,\n    description: 'Create inventory and sales tables',\n    sql: `\n      -- Create inventory_transactions table\n      CREATE TABLE IF NOT EXISTS inventory_transactions (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        product_id INTEGER NOT NULL,\n        transaction_type TEXT NOT NULL CHECK (transaction_type IN ('stock_in', 'stock_out', 'transfer_in', 'transfer_out', 'adjustment')),\n        quantity INTEGER NOT NULL,\n        cost_price REAL,\n        reference_number TEXT,\n        supplier_name TEXT,\n        from_store_id INTEGER,\n        to_store_id INTEGER,\n        notes TEXT,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (product_id) REFERENCES products(id)\n      );\n\n      -- Create sales table\n      CREATE TABLE IF NOT EXISTS sales (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        customer_name TEXT,\n        customer_phone TEXT,\n        customer_email TEXT,\n        total_amount REAL NOT NULL DEFAULT 0,\n        tax_amount REAL NOT NULL DEFAULT 0,\n        discount_amount REAL NOT NULL DEFAULT 0,\n        payment_method TEXT NOT NULL DEFAULT 'cash',\n        payment_status TEXT NOT NULL DEFAULT 'paid' CHECK (payment_status IN ('pending', 'paid', 'refunded')),\n        notes TEXT,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\n      );\n\n      -- Create sale_items table\n      CREATE TABLE IF NOT EXISTS sale_items (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        sale_id INTEGER NOT NULL,\n        product_id INTEGER NOT NULL,\n        quantity INTEGER NOT NULL,\n        unit_price REAL NOT NULL,\n        total_price REAL NOT NULL,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (sale_id) REFERENCES sales(id),\n        FOREIGN KEY (product_id) REFERENCES products(id)\n      );\n    `\n  },\n  {\n    version: 4,\n    description: 'Create suppliers table',\n    sql: `\n      CREATE TABLE IF NOT EXISTS suppliers (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        contact_person TEXT,\n        email TEXT,\n        phone TEXT,\n        address TEXT,\n        tax_number TEXT,\n        notes TEXT,\n        is_active INTEGER NOT NULL DEFAULT 1,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\n      )\n    `\n  },\n  {\n    version: 5,\n    description: 'Insert sample suppliers data',\n    sql: `\n      INSERT OR IGNORE INTO suppliers (name, contact_person, email, phone, address, is_active) VALUES\n      ('C\u00F4ng ty TNHH ABC', 'Nguy\u1EC5n V\u0103n A', 'contact@abc.com', '0123456789', '123 \u0110\u01B0\u1EDDng ABC, TP.HCM', 1),\n      ('Nh\u00E0 ph\u00E2n ph\u1ED1i XYZ', 'Tr\u1EA7n Th\u1ECB B', 'info@xyz.com', '0987654321', '456 \u0110\u01B0\u1EDDng XYZ, H\u00E0 N\u1ED9i', 1),\n      ('C\u00F4ng ty Linh ki\u1EC7n DEF', 'L\u00EA V\u0103n C', 'sales@def.com', '0369852147', '789 \u0110\u01B0\u1EDDng DEF, \u0110\u00E0 N\u1EB5ng', 1)\n    `\n  },\n  {\n    version: 6,\n    description: 'Create customers table',\n    sql: `\n      -- Create customers table\n      CREATE TABLE IF NOT EXISTS customers (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        full_name TEXT NOT NULL,\n        phone TEXT,\n        email TEXT,\n        address TEXT,\n        birthday DATE,\n        loyalty_points INTEGER NOT NULL DEFAULT 0,\n        customer_group TEXT NOT NULL DEFAULT 'regular' CHECK (customer_group IN ('regular', 'vip', 'wholesale', 'business')),\n        notes TEXT,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        deleted_at DATETIME\n      );\n\n      -- Create indexes for customers table\n      CREATE INDEX IF NOT EXISTS idx_customers_phone ON customers(phone);\n      CREATE INDEX IF NOT EXISTS idx_customers_email ON customers(email);\n      CREATE INDEX IF NOT EXISTS idx_customers_group ON customers(customer_group);\n\n      -- Insert demo customers\n      INSERT OR IGNORE INTO customers (full_name, phone, email, address, loyalty_points, customer_group)\n      VALUES\n        ('Nguy\u1EC5n V\u0103n A', '0901234567', 'nguyenvana@example.com', 'H\u1ED3 Ch\u00ED Minh', 100, 'regular'),\n        ('Tr\u1EA7n Th\u1ECB B', '0912345678', 'tranthib@example.com', 'H\u00E0 N\u1ED9i', 250, 'vip'),\n        ('L\u00EA V\u0103n C', '0923456789', 'levanc@example.com', '\u0110\u00E0 N\u1EB5ng', 50, 'regular'),\n        ('Ph\u1EA1m Th\u1ECB D', '0934567890', 'phamthid@example.com', 'C\u1EA7n Th\u01A1', 300, 'vip');\n    `\n  },\n  {\n    version: 7,\n    description: 'Add full_name column to customers table',\n    sql: `\n      -- Add full_name column to customers table\n      ALTER TABLE customers ADD COLUMN full_name TEXT;\n\n      -- Update full_name with combined first_name and last_name\n      UPDATE customers\n      SET full_name = COALESCE(first_name, '') || ' ' || COALESCE(last_name, '')\n      WHERE full_name IS NULL;\n\n      -- Clean up extra spaces\n      UPDATE customers\n      SET full_name = TRIM(full_name)\n      WHERE full_name IS NOT NULL;\n    `\n  },\n  {\n    version: 10,\n    description: 'Add tax_number and notes columns to suppliers table',\n    sql: `\n      -- Add tax_number column if not exists\n      ALTER TABLE suppliers ADD COLUMN tax_number TEXT;\n\n      -- Add notes column if not exists\n      ALTER TABLE suppliers ADD COLUMN notes TEXT;\n    `\n  },\n  {\n    version: 11,\n    description: 'Add promotions and discounts tables',\n    sql: `\n      -- Create promotions table\n      CREATE TABLE IF NOT EXISTS promotions (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        description TEXT,\n        promotion_type TEXT NOT NULL CHECK (promotion_type IN ('percentage', 'fixed_amount', 'buy_x_get_y', 'free_shipping')),\n        discount_value REAL NOT NULL DEFAULT 0,\n        minimum_amount REAL DEFAULT 0,\n        maximum_discount REAL DEFAULT 0,\n        start_date DATETIME NOT NULL,\n        end_date DATETIME NOT NULL,\n        usage_limit INTEGER DEFAULT 0,\n        usage_count INTEGER NOT NULL DEFAULT 0,\n        is_active INTEGER NOT NULL DEFAULT 1,\n        applies_to TEXT NOT NULL DEFAULT 'all' CHECK (applies_to IN ('all', 'categories', 'products', 'customers')),\n        conditions TEXT, -- JSON string for complex conditions\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\n      );\n\n      -- Create promotion_products table for product-specific promotions\n      CREATE TABLE IF NOT EXISTS promotion_products (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        promotion_id INTEGER NOT NULL,\n        product_id INTEGER NOT NULL,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (promotion_id) REFERENCES promotions(id) ON DELETE CASCADE,\n        FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,\n        UNIQUE(promotion_id, product_id)\n      );\n\n      -- Create promotion_categories table for category-specific promotions\n      CREATE TABLE IF NOT EXISTS promotion_categories (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        promotion_id INTEGER NOT NULL,\n        category_id INTEGER NOT NULL,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (promotion_id) REFERENCES promotions(id) ON DELETE CASCADE,\n        FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE,\n        UNIQUE(promotion_id, category_id)\n      );\n\n      -- Create promotion_usage table to track usage\n      CREATE TABLE IF NOT EXISTS promotion_usage (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        promotion_id INTEGER NOT NULL,\n        sale_id INTEGER NOT NULL,\n        discount_amount REAL NOT NULL DEFAULT 0,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (promotion_id) REFERENCES promotions(id) ON DELETE CASCADE,\n        FOREIGN KEY (sale_id) REFERENCES sales(id) ON DELETE CASCADE\n      );\n\n      -- Insert sample promotions\n      INSERT OR IGNORE INTO promotions (name, description, promotion_type, discount_value, minimum_amount, maximum_discount, start_date, end_date, usage_limit, is_active, applies_to)\n      VALUES\n        ('Gi\u1EA3m gi\u00E1 10%', 'Gi\u1EA3m gi\u00E1 10% cho t\u1EA5t c\u1EA3 s\u1EA3n ph\u1EA9m', 'percentage', 10, 100000, 50000, datetime('now', '-7 days'), datetime('now', '+30 days'), 100, 1, 'all'),\n        ('Gi\u1EA3m 50k cho \u0111\u01A1n t\u1EEB 500k', 'Gi\u1EA3m 50.000\u0111 cho \u0111\u01A1n h\u00E0ng t\u1EEB 500.000\u0111', 'fixed_amount', 50000, 500000, 50000, datetime('now', '-3 days'), datetime('now', '+60 days'), 200, 1, 'all'),\n        ('Mua 2 t\u1EB7ng 1', 'Mua 2 s\u1EA3n ph\u1EA9m t\u1EB7ng 1 s\u1EA3n ph\u1EA9m c\u00F9ng lo\u1EA1i', 'buy_x_get_y', 0, 0, 0, datetime('now', '-1 day'), datetime('now', '+14 days'), 50, 1, 'products');\n    `\n  }\n];\n\n// B\u1EA3ng l\u01B0u tr\u1EEF version hi\u1EC7n t\u1EA1i\nconst SCHEMA_VERSION_TABLE = `CREATE TABLE IF NOT EXISTS schema_version (\n  version INTEGER PRIMARY KEY,\n  applied_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  description TEXT\n)`;\n\n/**\n * Ki\u1EC3m tra version hi\u1EC7n t\u1EA1i v\u00E0 th\u1EF1c hi\u1EC7n c\u00E1c migrations c\u1EA7n thi\u1EBFt\n */\nexport async function runMigrations(env: Env): Promise<void> {\n  try {\n    console.log('Initializing migration system...');\n    \n    // T\u1EA1o b\u1EA3ng schema_version n\u1EBFu ch\u01B0a c\u00F3\n    await env.DB.prepare(SCHEMA_VERSION_TABLE).run();\n\n    // L\u1EA5y version hi\u1EC7n t\u1EA1i\n    const currentVersion = await getCurrentVersion(env);\n    console.log(`Current schema version: ${currentVersion}`);\n\n    // L\u1ECDc ra c\u00E1c migrations c\u1EA7n th\u1EF1c hi\u1EC7n\n    const pendingMigrations = migrations.filter(m => m.version > currentVersion);\n\n    if (pendingMigrations.length === 0) {\n      console.log('Database schema is up to date');\n      return;\n    }\n\n    console.log(`Found ${pendingMigrations.length} migrations to apply`);\n\n    // Th\u1EF1c hi\u1EC7n t\u1EEBng migration\n    for (const migration of pendingMigrations) {\n      try {\n        console.log(`Applying migration ${migration.version}: ${migration.description}`);\n\n        // Th\u1EF1c hi\u1EC7n migration SQL - split by semicolon for multiple statements\n        const statements = migration.sql.split(';').filter(s => s.trim());\n        for (const statement of statements) {\n          if (statement.trim()) {\n            await env.DB.prepare(statement.trim()).run();\n          }\n        }\n\n        // L\u01B0u version m\u1EDBi\n        await env.DB.prepare(\n          'INSERT INTO schema_version (version, description) VALUES (?, ?)'\n        ).bind(migration.version, migration.description).run();\n\n        console.log(`Successfully applied migration ${migration.version}`);\n      } catch (error) {\n        console.error(`Error applying migration ${migration.version}:`, error);\n        // Continue with other migrations instead of throwing\n        console.log(`Skipping migration ${migration.version} due to error`);\n      }\n    }\n\n    console.log('Migration process completed');\n  } catch (error) {\n    console.error('Migration system error:', error);\n    // Don't throw - let the app continue\n  }\n}\n\n/**\n * L\u1EA5y version hi\u1EC7n t\u1EA1i c\u1EE7a database\n */\nasync function getCurrentVersion(env: Env): Promise<number> {\n  try {\n    const result = await env.DB.prepare(\n      'SELECT MAX(version) as version FROM schema_version'\n    ).first<{ version: number | null }>();\n    \n    return result?.version ?? 0;\n  } catch (error) {\n    console.error('Error fetching schema version:', error);\n    return 0;\n  }\n}\n\n/**\n * Ki\u1EC3m tra v\u00E0 ch\u1EA1y migrations khi worker kh\u1EDFi \u0111\u1ED9ng\n * \u0110\u01B0\u1EE3c g\u1ECDi t\u1EEB file index.ts\n */\nexport async function checkAndRunMigrations(env: Env): Promise<void> {\n  try {\n    await runMigrations(env);\n  } catch (error) {\n    console.error('Migration failed:', error);\n  }\n}\n", "/**\r\n * NotificationObject - Durable Object cho qu\u1EA3n l\u00FD th\u00F4ng b\u00E1o th\u1EDDi gian th\u1EF1c\r\n */\r\n\r\nexport class NotificationObject {\r\n  private state: DurableObjectState;\r\n  private sessions: Set<WebSocket> = new Set();\r\n  private messageBuffer: any[] = [];\r\n  private maxBufferSize = 100;\r\n\r\n  constructor(state: DurableObjectState) {\r\n    this.state = state;\r\n    \r\n    // Kh\u00F4i ph\u1EE5c messageBuffer t\u1EEB storage n\u1EBFu c\u00F3\r\n    this.state.blockConcurrencyWhile(async () => {\r\n      const storedBuffer = await this.state.storage.get('messageBuffer');\r\n      if (storedBuffer) {\r\n        this.messageBuffer = storedBuffer;\r\n      }\r\n    });\r\n  }\r\n\r\n  async fetch(request: Request): Promise<Response> {\r\n    const url = new URL(request.url);\r\n    const path = url.pathname;\r\n    \r\n    // WebSocket endpoint\r\n    if (path === '/connect') {\r\n      if (request.headers.get('Upgrade') !== 'websocket') {\r\n        return new Response('Expected Upgrade: websocket', { status: 426 });\r\n      }\r\n      \r\n      const pair = new WebSocketPair();\r\n      const client = pair[0];\r\n      const server = pair[1];\r\n      \r\n      // Accept the WebSocket connection\r\n      server.accept();\r\n      \r\n      // G\u1EEDi l\u1ECBch s\u1EED th\u00F4ng b\u00E1o\r\n      for (const message of this.messageBuffer) {\r\n        server.send(JSON.stringify(message));\r\n      }\r\n      \r\n      // X\u1EED l\u00FD s\u1EF1 ki\u1EC7n t\u1EEB client\r\n      server.addEventListener('message', async (event) => {\r\n        try {\r\n          const message = JSON.parse(event.data as string);\r\n          await this.handleMessage(server, message);\r\n        } catch (error) {\r\n          server.send(JSON.stringify({ \r\n            type: 'error', \r\n            message: '\u0110\u1ECBnh d\u1EA1ng tin nh\u1EAFn kh\u00F4ng h\u1EE3p l\u1EC7'\r\n          }));\r\n        }\r\n      });\r\n      \r\n      // X\u1EED l\u00FD s\u1EF1 ki\u1EC7n \u0111\u00F3ng k\u1EBFt n\u1ED1i\r\n      server.addEventListener('close', () => {\r\n        this.sessions.delete(server);\r\n      });\r\n      \r\n      // X\u1EED l\u00FD l\u1ED7i\r\n      server.addEventListener('error', () => {\r\n        this.sessions.delete(server);\r\n      });\r\n      \r\n      // L\u01B0u WebSocket v\u00E0o sessions\r\n      this.sessions.add(server);\r\n      \r\n      return new Response(null, { \r\n        status: 101, \r\n        webSocket: client \r\n      });\r\n    }\r\n    \r\n    // REST API endpoints\r\n    if (path === '/broadcast' && request.method === 'POST') {\r\n      const message = await request.json();\r\n      \r\n      // X\u00E1c th\u1EF1c message\r\n      if (!message.type || !message.data) {\r\n        return new Response(JSON.stringify({ \r\n          error: 'Invalid message format' \r\n        }), { \r\n          status: 400,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n      }\r\n      \r\n      // Th\u00EAm timestamp\r\n      message.timestamp = new Date().toISOString();\r\n      \r\n      // Broadcast tin nh\u1EAFn\r\n      this.broadcastMessage(message);\r\n      \r\n      return new Response(JSON.stringify({ \r\n        success: true, \r\n        message: 'Message broadcasted successfully'\r\n      }), { \r\n        status: 200,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n    // Endpoint kh\u00F4ng t\u1ED3n t\u1EA1i\r\n    return new Response('Not found', { status: 404 });\r\n  }\r\n  \r\n  // X\u1EED l\u00FD tin nh\u1EAFn t\u1EEB client\r\n  private async handleMessage(client: WebSocket, message: any) {\r\n    // X\u00E1c th\u1EF1c message\r\n    if (!message.type) {\r\n      client.send(JSON.stringify({ \r\n        type: 'error', \r\n        message: 'Invalid message format'\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    switch (message.type) {\r\n      case 'ping':\r\n        client.send(JSON.stringify({ type: 'pong', timestamp: new Date().toISOString() }));\r\n        break;\r\n        \r\n      case 'message':\r\n        // Th\u00EAm timestamp\r\n        message.timestamp = new Date().toISOString();\r\n        \r\n        // Broadcast tin nh\u1EAFn\r\n        this.broadcastMessage(message);\r\n        break;\r\n        \r\n      default:\r\n        client.send(JSON.stringify({ \r\n          type: 'error', \r\n          message: 'Unknown message type'\r\n        }));\r\n    }\r\n  }\r\n  \r\n  // Broadcast tin nh\u1EAFn t\u1EDBi t\u1EA5t c\u1EA3 clients\r\n  private broadcastMessage(message: any) {\r\n    // L\u01B0u tin nh\u1EAFn v\u00E0o buffer\r\n    this.messageBuffer.push(message);\r\n    \r\n    // Gi\u1EDBi h\u1EA1n k\u00EDch th\u01B0\u1EDBc buffer\r\n    if (this.messageBuffer.length > this.maxBufferSize) {\r\n      this.messageBuffer.shift(); // X\u00F3a tin nh\u1EAFn c\u0169 nh\u1EA5t\r\n    }\r\n    \r\n    // L\u01B0u buffer v\u00E0o storage\r\n    this.state.storage.put('messageBuffer', this.messageBuffer);\r\n    \r\n    // Broadcast t\u1EDBi t\u1EA5t c\u1EA3 sessions\r\n    const messageStr = JSON.stringify(message);\r\n    for (const session of this.sessions) {\r\n      try {\r\n        session.send(messageStr);\r\n      } catch (error) {\r\n        // C\u00F3 th\u1EC3 session \u0111\u00E3 b\u1ECB \u0111\u00F3ng\r\n        this.sessions.delete(session);\r\n      }\r\n    }\r\n  }\r\n} ", "/**\r\n * InventorySyncObject - Durable Object qu\u1EA3n l\u00FD \u0111\u1ED3ng b\u1ED9 kho h\u00E0ng\r\n */\r\n\r\nexport class InventorySyncObject {\r\n  private state: DurableObjectState;\r\n  private clients: Map<string, WebSocket> = new Map();\r\n  private inventoryState: Map<string, any> = new Map();\r\n\r\n  constructor(state: DurableObjectState) {\r\n    this.state = state;\r\n    \r\n    // Kh\u00F4i ph\u1EE5c inventory state t\u1EEB storage\r\n    this.state.blockConcurrencyWhile(async () => {\r\n      const storedInventory = await this.state.storage.get('inventory');\r\n      if (storedInventory) {\r\n        this.inventoryState = new Map(Object.entries(storedInventory));\r\n      }\r\n    });\r\n  }\r\n\r\n  async fetch(request: Request): Promise<Response> {\r\n    const url = new URL(request.url);\r\n    const path = url.pathname;\r\n    \r\n    // WebSocket endpoint cho real-time sync\r\n    if (path === '/sync') {\r\n      if (request.headers.get('Upgrade') !== 'websocket') {\r\n        return new Response('Expected Upgrade: websocket', { status: 426 });\r\n      }\r\n      \r\n      // T\u1EA1o WebSocket connection\r\n      const pair = new WebSocketPair();\r\n      const client = pair[0];\r\n      const server = pair[1];\r\n      \r\n      // Accept the WebSocket connection\r\n      server.accept();\r\n      \r\n      // Parse th\u00F4ng tin client t\u1EEB URL query\r\n      const clientId = url.searchParams.get('clientId') || crypto.randomUUID();\r\n      const storeId = url.searchParams.get('storeId') || '1';\r\n      const clientKey = `${storeId}:${clientId}`;\r\n      \r\n      // G\u1EEDi inventory state hi\u1EC7n t\u1EA1i t\u1EDBi client\r\n      server.send(JSON.stringify({\r\n        type: 'init',\r\n        data: Object.fromEntries(this.inventoryState)\r\n      }));\r\n      \r\n      // X\u1EED l\u00FD s\u1EF1 ki\u1EC7n t\u1EEB client\r\n      server.addEventListener('message', async (event) => {\r\n        try {\r\n          const message = JSON.parse(event.data as string);\r\n          await this.handleMessage(clientKey, server, message);\r\n        } catch (error) {\r\n          server.send(JSON.stringify({\r\n            type: 'error',\r\n            message: 'Invalid message format'\r\n          }));\r\n        }\r\n      });\r\n      \r\n      // X\u1EED l\u00FD s\u1EF1 ki\u1EC7n \u0111\u00F3ng k\u1EBFt n\u1ED1i\r\n      server.addEventListener('close', () => {\r\n        this.clients.delete(clientKey);\r\n      });\r\n      \r\n      // X\u1EED l\u00FD l\u1ED7i\r\n      server.addEventListener('error', () => {\r\n        this.clients.delete(clientKey);\r\n      });\r\n      \r\n      // L\u01B0u WebSocket v\u00E0o clients\r\n      this.clients.set(clientKey, server);\r\n      \r\n      return new Response(null, {\r\n        status: 101,\r\n        webSocket: client\r\n      });\r\n    }\r\n    \r\n    // REST API endpoints \u0111\u1EC3 c\u1EADp nh\u1EADt inventory\r\n    if (path === '/update' && request.method === 'POST') {\r\n      try {\r\n        const { productId, quantity, action, storeId = '1' } = await request.json();\r\n        \r\n        if (!productId || quantity === undefined || !action) {\r\n          return new Response(JSON.stringify({\r\n            success: false,\r\n            message: 'Missing required fields'\r\n          }), {\r\n            status: 400,\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n        }\r\n        \r\n        // C\u1EADp nh\u1EADt inventory state\r\n        await this.updateInventory(productId, quantity, action, storeId);\r\n        \r\n        return new Response(JSON.stringify({\r\n          success: true,\r\n          message: 'Inventory updated successfully'\r\n        }), {\r\n          status: 200,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n      } catch (error) {\r\n        return new Response(JSON.stringify({\r\n          success: false,\r\n          message: 'Error updating inventory',\r\n          error: error instanceof Error ? error.message : 'Unknown error'\r\n        }), {\r\n          status: 500,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n      }\r\n    }\r\n    \r\n    return new Response('Not found', { status: 404 });\r\n  }\r\n  \r\n  // X\u1EED l\u00FD tin nh\u1EAFn t\u1EEB client\r\n  private async handleMessage(clientKey: string, client: WebSocket, message: any) {\r\n    const { type, data } = message;\r\n    \r\n    if (!type) {\r\n      client.send(JSON.stringify({\r\n        type: 'error',\r\n        message: 'Invalid message format'\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    switch (type) {\r\n      case 'ping':\r\n        client.send(JSON.stringify({\r\n          type: 'pong',\r\n          timestamp: new Date().toISOString()\r\n        }));\r\n        break;\r\n        \r\n      case 'update':\r\n        if (!data || !data.productId || data.quantity === undefined || !data.action) {\r\n          client.send(JSON.stringify({\r\n            type: 'error',\r\n            message: 'Invalid update data'\r\n          }));\r\n          return;\r\n        }\r\n        \r\n        const { productId, quantity, action, storeId = '1' } = data;\r\n        \r\n        // C\u1EADp nh\u1EADt inventory state\r\n        await this.updateInventory(productId, quantity, action, storeId);\r\n        \r\n        // X\u00E1c nh\u1EADn c\u1EADp nh\u1EADt th\u00E0nh c\u00F4ng\r\n        client.send(JSON.stringify({\r\n          type: 'update_ack',\r\n          data: {\r\n            productId,\r\n            success: true,\r\n            timestamp: new Date().toISOString()\r\n          }\r\n        }));\r\n        break;\r\n        \r\n      default:\r\n        client.send(JSON.stringify({\r\n          type: 'error',\r\n          message: 'Unknown message type'\r\n        }));\r\n    }\r\n  }\r\n  \r\n  // C\u1EADp nh\u1EADt inventory v\u00E0 broadcast\r\n  private async updateInventory(productId: string, quantity: number, action: string, storeId: string) {\r\n    // Kh\u00F3a state \u0111\u1EC3 \u0111\u1EA3m b\u1EA3o atomic updates\r\n    await this.state.blockConcurrencyWhile(async () => {\r\n      const inventoryKey = `${storeId}:${productId}`;\r\n      const currentInventory = this.inventoryState.get(inventoryKey) || { quantity: 0 };\r\n      \r\n      // T\u00EDnh to\u00E1n s\u1ED1 l\u01B0\u1EE3ng m\u1EDBi\r\n      let newQuantity = currentInventory.quantity;\r\n      \r\n      switch (action) {\r\n        case 'add':\r\n          newQuantity += quantity;\r\n          break;\r\n        case 'subtract':\r\n          newQuantity = Math.max(0, newQuantity - quantity); // Kh\u00F4ng cho ph\u00E9p s\u1ED1 \u00E2m\r\n          break;\r\n        case 'set':\r\n          newQuantity = Math.max(0, quantity); // Kh\u00F4ng cho ph\u00E9p s\u1ED1 \u00E2m\r\n          break;\r\n        default:\r\n          throw new Error(`Invalid action: ${action}`);\r\n      }\r\n      \r\n      // C\u1EADp nh\u1EADt inventory state\r\n      const updatedInventory = {\r\n        ...currentInventory,\r\n        quantity: newQuantity,\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      \r\n      this.inventoryState.set(inventoryKey, updatedInventory);\r\n      \r\n      // L\u01B0u v\u00E0o storage\r\n      await this.state.storage.put('inventory', Object.fromEntries(this.inventoryState));\r\n      \r\n      // Broadcast c\u1EADp nh\u1EADt t\u1EDBi t\u1EA5t c\u1EA3 clients\r\n      this.broadcastUpdate(inventoryKey, updatedInventory);\r\n    });\r\n  }\r\n  \r\n  // Broadcast c\u1EADp nh\u1EADt t\u1EDBi t\u1EA5t c\u1EA3 clients\r\n  private broadcastUpdate(inventoryKey: string, inventoryData: any) {\r\n    const [storeId] = inventoryKey.split(':');\r\n    const updateMessage = JSON.stringify({\r\n      type: 'inventory_update',\r\n      data: {\r\n        key: inventoryKey,\r\n        ...inventoryData\r\n      }\r\n    });\r\n    \r\n    // G\u1EEDi t\u1EDBi t\u1EA5t c\u1EA3 clients trong c\u00F9ng store\r\n    for (const [clientKey, client] of this.clients.entries()) {\r\n      const [clientStoreId] = clientKey.split(':');\r\n      \r\n      // Ch\u1EC9 g\u1EEDi t\u1EDBi clients trong c\u00F9ng store\r\n      if (clientStoreId === storeId) {\r\n        try {\r\n          client.send(updateMessage);\r\n        } catch (error) {\r\n          // Client c\u00F3 th\u1EC3 \u0111\u00E3 \u0111\u00F3ng k\u1EBFt n\u1ED1i\r\n          this.clients.delete(clientKey);\r\n        }\r\n      }\r\n    }\r\n  }\r\n} ", "/**\r\n * POSSyncObject - Durable Object cho \u0111\u1ED3ng b\u1ED9 POS\r\n */\r\n\r\nexport class POSSyncObject {\r\n  private state: DurableObjectState;\r\n  private sessions: Set<WebSocket> = new Set();\r\n  private activeTransactions: Map<string, any> = new Map();\r\n\r\n  constructor(state: DurableObjectState) {\r\n    this.state = state;\r\n    \r\n    // Kh\u00F4i ph\u1EE5c state t\u1EEB storage\r\n    this.state.blockConcurrencyWhile(async () => {\r\n      const storedTransactions = await this.state.storage.get('activeTransactions');\r\n      if (storedTransactions) {\r\n        this.activeTransactions = new Map(Object.entries(storedTransactions));\r\n      }\r\n    });\r\n  }\r\n\r\n  async fetch(request: Request): Promise<Response> {\r\n    const url = new URL(request.url);\r\n    const path = url.pathname;\r\n    \r\n    // WebSocket endpoint\r\n    if (path === '/connect') {\r\n      if (request.headers.get('Upgrade') !== 'websocket') {\r\n        return new Response('Expected Upgrade: websocket', { status: 426 });\r\n      }\r\n      \r\n      // Create websocket pair\r\n      const pair = new WebSocketPair();\r\n      const client = pair[0];\r\n      const server = pair[1];\r\n      \r\n      // Accept the connection\r\n      server.accept();\r\n      \r\n      // Parse metadata\r\n      const storeId = url.searchParams.get('storeId') || '1';\r\n      const deviceId = url.searchParams.get('deviceId') || 'unknown';\r\n      const clientId = `${storeId}:${deviceId}`;\r\n      \r\n      // Send initial data\r\n      server.send(JSON.stringify({\r\n        type: 'init',\r\n        storeId,\r\n        deviceId,\r\n        activeTransactions: Object.fromEntries(this.activeTransactions)\r\n      }));\r\n      \r\n      // Handle messages\r\n      server.addEventListener('message', async event => {\r\n        try {\r\n          const message = JSON.parse(event.data as string);\r\n          await this.handleMessage(clientId, server, message);\r\n        } catch (error) {\r\n          server.send(JSON.stringify({\r\n            type: 'error',\r\n            message: 'Invalid message format'\r\n          }));\r\n        }\r\n      });\r\n      \r\n      // Handle close\r\n      server.addEventListener('close', () => {\r\n        this.sessions.delete(server);\r\n      });\r\n      \r\n      // Handle errors\r\n      server.addEventListener('error', () => {\r\n        this.sessions.delete(server);\r\n      });\r\n      \r\n      // Add to sessions\r\n      this.sessions.add(server);\r\n      \r\n      return new Response(null, {\r\n        status: 101,\r\n        webSocket: client\r\n      });\r\n    }\r\n    \r\n    // REST API endpoints\r\n    if (path === '/transaction' && request.method === 'POST') {\r\n      try {\r\n        const { transactionId, action, data, storeId = '1' } = await request.json();\r\n        \r\n        if (!transactionId || !action) {\r\n          return new Response(JSON.stringify({\r\n            success: false,\r\n            message: 'Missing required parameters'\r\n          }), {\r\n            status: 400,\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n        }\r\n        \r\n        // Handle transaction action\r\n        switch (action) {\r\n          case 'create':\r\n            await this.createTransaction(transactionId, data, storeId);\r\n            break;\r\n          case 'update':\r\n            await this.updateTransaction(transactionId, data, storeId);\r\n            break;\r\n          case 'complete':\r\n            await this.completeTransaction(transactionId, data, storeId);\r\n            break;\r\n          case 'cancel':\r\n            await this.cancelTransaction(transactionId, storeId);\r\n            break;\r\n          default:\r\n            return new Response(JSON.stringify({\r\n              success: false,\r\n              message: 'Invalid action'\r\n            }), {\r\n              status: 400,\r\n              headers: { 'Content-Type': 'application/json' }\r\n            });\r\n        }\r\n        \r\n        return new Response(JSON.stringify({\r\n          success: true,\r\n          message: 'Transaction processed successfully'\r\n        }), {\r\n          status: 200,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n      } catch (error) {\r\n        return new Response(JSON.stringify({\r\n          success: false,\r\n          message: 'Failed to process transaction',\r\n          error: error instanceof Error ? error.message : 'Unknown error'\r\n        }), {\r\n          status: 500,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n      }\r\n    }\r\n    \r\n    return new Response('Not found', { status: 404 });\r\n  }\r\n  \r\n  // Handle messages from WebSocket\r\n  private async handleMessage(clientId: string, client: WebSocket, message: any) {\r\n    const { type, data } = message;\r\n    \r\n    if (!type) {\r\n      client.send(JSON.stringify({\r\n        type: 'error',\r\n        message: 'Invalid message type'\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    switch (type) {\r\n      case 'ping':\r\n        client.send(JSON.stringify({\r\n          type: 'pong',\r\n          timestamp: new Date().toISOString()\r\n        }));\r\n        break;\r\n        \r\n      case 'transaction':\r\n        if (!data || !data.transactionId || !data.action) {\r\n          client.send(JSON.stringify({\r\n            type: 'error',\r\n            message: 'Invalid transaction data'\r\n          }));\r\n          return;\r\n        }\r\n        \r\n        const { transactionId, action, payload, storeId = '1' } = data;\r\n        \r\n        try {\r\n          switch (action) {\r\n            case 'create':\r\n              await this.createTransaction(transactionId, payload, storeId);\r\n              break;\r\n            case 'update':\r\n              await this.updateTransaction(transactionId, payload, storeId);\r\n              break;\r\n            case 'complete':\r\n              await this.completeTransaction(transactionId, payload, storeId);\r\n              break;\r\n            case 'cancel':\r\n              await this.cancelTransaction(transactionId, storeId);\r\n              break;\r\n            default:\r\n              throw new Error(`Invalid transaction action: ${action}`);\r\n          }\r\n          \r\n          // Acknowledge\r\n          client.send(JSON.stringify({\r\n            type: 'ack',\r\n            transactionId,\r\n            action\r\n          }));\r\n        } catch (error) {\r\n          client.send(JSON.stringify({\r\n            type: 'error',\r\n            transactionId,\r\n            message: error instanceof Error ? error.message : 'Unknown error'\r\n          }));\r\n        }\r\n        break;\r\n        \r\n      default:\r\n        client.send(JSON.stringify({\r\n          type: 'error',\r\n          message: `Unknown message type: ${type}`\r\n        }));\r\n    }\r\n  }\r\n  \r\n  // Create a new transaction\r\n  private async createTransaction(transactionId: string, data: any, storeId: string) {\r\n    const key = `${storeId}:${transactionId}`;\r\n    \r\n    await this.state.blockConcurrencyWhile(async () => {\r\n      if (this.activeTransactions.has(key)) {\r\n        throw new Error(`Transaction ${transactionId} already exists`);\r\n      }\r\n      \r\n      const transaction = {\r\n        id: transactionId,\r\n        storeId,\r\n        status: 'active',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n        ...data\r\n      };\r\n      \r\n      this.activeTransactions.set(key, transaction);\r\n      await this.state.storage.put('activeTransactions', Object.fromEntries(this.activeTransactions));\r\n      \r\n      this.broadcastUpdate({\r\n        type: 'transaction_created',\r\n        storeId,\r\n        transaction\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Update an existing transaction\r\n  private async updateTransaction(transactionId: string, data: any, storeId: string) {\r\n    const key = `${storeId}:${transactionId}`;\r\n    \r\n    await this.state.blockConcurrencyWhile(async () => {\r\n      const transaction = this.activeTransactions.get(key);\r\n      \r\n      if (!transaction) {\r\n        throw new Error(`Transaction ${transactionId} not found`);\r\n      }\r\n      \r\n      const updatedTransaction = {\r\n        ...transaction,\r\n        ...data,\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      \r\n      this.activeTransactions.set(key, updatedTransaction);\r\n      await this.state.storage.put('activeTransactions', Object.fromEntries(this.activeTransactions));\r\n      \r\n      this.broadcastUpdate({\r\n        type: 'transaction_updated',\r\n        storeId,\r\n        transaction: updatedTransaction\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Complete a transaction\r\n  private async completeTransaction(transactionId: string, data: any, storeId: string) {\r\n    const key = `${storeId}:${transactionId}`;\r\n    \r\n    await this.state.blockConcurrencyWhile(async () => {\r\n      const transaction = this.activeTransactions.get(key);\r\n      \r\n      if (!transaction) {\r\n        throw new Error(`Transaction ${transactionId} not found`);\r\n      }\r\n      \r\n      // Mark as completed\r\n      const completedTransaction = {\r\n        ...transaction,\r\n        ...data,\r\n        status: 'completed',\r\n        completedAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      \r\n      // Remove from active transactions\r\n      this.activeTransactions.delete(key);\r\n      await this.state.storage.put('activeTransactions', Object.fromEntries(this.activeTransactions));\r\n      \r\n      this.broadcastUpdate({\r\n        type: 'transaction_completed',\r\n        storeId,\r\n        transaction: completedTransaction\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Cancel a transaction\r\n  private async cancelTransaction(transactionId: string, storeId: string) {\r\n    const key = `${storeId}:${transactionId}`;\r\n    \r\n    await this.state.blockConcurrencyWhile(async () => {\r\n      const transaction = this.activeTransactions.get(key);\r\n      \r\n      if (!transaction) {\r\n        throw new Error(`Transaction ${transactionId} not found`);\r\n      }\r\n      \r\n      // Mark as cancelled\r\n      const cancelledTransaction = {\r\n        ...transaction,\r\n        status: 'cancelled',\r\n        cancelledAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      \r\n      // Remove from active transactions\r\n      this.activeTransactions.delete(key);\r\n      await this.state.storage.put('activeTransactions', Object.fromEntries(this.activeTransactions));\r\n      \r\n      this.broadcastUpdate({\r\n        type: 'transaction_cancelled',\r\n        storeId,\r\n        transaction: cancelledTransaction\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Broadcast update to all connected clients\r\n  private broadcastUpdate(message: any) {\r\n    const { storeId } = message;\r\n    const messageString = JSON.stringify(message);\r\n    \r\n    for (const session of this.sessions) {\r\n      try {\r\n        session.send(messageString);\r\n      } catch (error) {\r\n        this.sessions.delete(session);\r\n      }\r\n    }\r\n  }\r\n} ", "// src/utils/jwt/jwt.ts\nimport { encodeBase64Url, decodeBase64Url } from \"../../utils/encode.js\";\nimport { JwtTokenIssuedAt } from \"./types.js\";\nimport {\n  JwtTokenInvalid,\n  JwtTokenNotBefore,\n  JwtTokenExpired,\n  JwtTokenSignatureMismatched,\n  JwtAlgorithmNotImplemented\n} from \"./types.js\";\nvar utf8Encoder = new TextEncoder();\nvar utf8Decoder = new TextDecoder();\nvar encodeJwtPart = (part) => encodeBase64Url(utf8Encoder.encode(JSON.stringify(part))).replace(/=/g, \"\");\nvar encodeSignaturePart = (buf) => encodeBase64Url(buf).replace(/=/g, \"\");\nvar decodeJwtPart = (part) => JSON.parse(utf8Decoder.decode(decodeBase64Url(part)));\nvar param = (name) => {\n  switch (name.toUpperCase()) {\n    case \"HS256\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"HS384\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"HS512\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    default:\n      throw new JwtAlgorithmNotImplemented(name);\n  }\n};\nvar signing = async (data, secret, alg = \"HS256\") => {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  const utf8Encoder2 = new TextEncoder();\n  const cryptoKey = await crypto.subtle.importKey(\n    \"raw\" /* RAW */,\n    utf8Encoder2.encode(secret),\n    param(alg),\n    false,\n    [\"sign\" /* Sign */]\n  );\n  return await crypto.subtle.sign(param(alg), cryptoKey, utf8Encoder2.encode(data));\n};\nvar sign = async (payload, secret, alg = \"HS256\") => {\n  const encodedPayload = encodeJwtPart(payload);\n  const encodedHeader = encodeJwtPart({ alg, typ: \"JWT\" });\n  const partialToken = `${encodedHeader}.${encodedPayload}`;\n  const signaturePart = await signing(partialToken, secret, alg);\n  const signature = encodeSignaturePart(signaturePart);\n  return `${partialToken}.${signature}`;\n};\nvar verify = async (token, secret, alg = \"HS256\") => {\n  const tokenParts = token.split(\".\");\n  if (tokenParts.length !== 3) {\n    throw new JwtTokenInvalid(token);\n  }\n  const { payload } = decode(token);\n  const now = Math.floor(Date.now() / 1e3);\n  if (payload.nbf && payload.nbf > now) {\n    throw new JwtTokenNotBefore(token);\n  }\n  if (payload.exp && payload.exp <= now) {\n    throw new JwtTokenExpired(token);\n  }\n  if (payload.iat && now < payload.iat) {\n    throw new JwtTokenIssuedAt(now, payload.iat);\n  }\n  const signaturePart = tokenParts.slice(0, 2).join(\".\");\n  const signature = await signing(signaturePart, secret, alg);\n  const encodedSignature = encodeSignaturePart(signature);\n  if (encodedSignature !== tokenParts[2]) {\n    throw new JwtTokenSignatureMismatched(token);\n  }\n  return payload;\n};\nvar decode = (token) => {\n  try {\n    const [h, p] = token.split(\".\");\n    const header = decodeJwtPart(h);\n    const payload = decodeJwtPart(p);\n    return {\n      header,\n      payload\n    };\n  } catch (e) {\n    throw new JwtTokenInvalid(token);\n  }\n};\nexport {\n  decode,\n  sign,\n  verify\n};\n", "// src/utils/encode.ts\nvar decodeBase64Url = (str) => {\n  return decodeBase64(str.replace(/_|-/g, (m) => ({ _: \"/\", \"-\": \"+\" })[m] ?? m));\n};\nvar encodeBase64Url = (buf) => encodeBase64(buf).replace(/\\/|\\+/g, (m) => ({ \"/\": \"_\", \"+\": \"-\" })[m] ?? m);\nvar encodeBase64 = (buf) => {\n  let binary = \"\";\n  const bytes = new Uint8Array(buf);\n  for (let i = 0; i < bytes.length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n};\nvar decodeBase64 = (str) => {\n  const binary = atob(str);\n  const bytes = new Uint8Array(new ArrayBuffer(binary.length));\n  const half = binary.length / 2;\n  for (let i = 0, j = binary.length - 1; i <= half; i++, j--) {\n    bytes[i] = binary.charCodeAt(i);\n    bytes[j] = binary.charCodeAt(j);\n  }\n  return bytes;\n};\nexport {\n  decodeBase64,\n  decodeBase64Url,\n  encodeBase64,\n  encodeBase64Url\n};\n", "// src/utils/jwt/types.ts\nvar JwtAlgorithmNotImplemented = class extends Error {\n  constructor(alg) {\n    super(`${alg} is not an implemented algorithm`);\n    this.name = \"JwtAlgorithmNotImplemented\";\n  }\n};\nvar JwtAlorithmNotImplemented = JwtAlgorithmNotImplemented;\nvar JwtTokenInvalid = class extends Error {\n  constructor(token) {\n    super(`invalid JWT token: ${token}`);\n    this.name = \"JwtTokenInvalid\";\n  }\n};\nvar JwtTokenNotBefore = class extends Error {\n  constructor(token) {\n    super(`token (${token}) is being used before it's valid`);\n    this.name = \"JwtTokenNotBefore\";\n  }\n};\nvar JwtTokenExpired = class extends Error {\n  constructor(token) {\n    super(`token (${token}) expired`);\n    this.name = \"JwtTokenExpired\";\n  }\n};\nvar JwtTokenIssuedAt = class extends Error {\n  constructor(currentTimestamp, iat) {\n    super(`Incorrect \"iat\" claim must be a older than \"${currentTimestamp}\" (iat: \"${iat}\")`);\n    this.name = \"JwtTokenIssuedAt\";\n  }\n};\nvar JwtTokenSignatureMismatched = class extends Error {\n  constructor(token) {\n    super(`token(${token}) signature mismatched`);\n    this.name = \"JwtTokenSignatureMismatched\";\n  }\n};\nvar AlgorithmTypes = /* @__PURE__ */ ((AlgorithmTypes2) => {\n  AlgorithmTypes2[\"HS256\"] = \"HS256\";\n  AlgorithmTypes2[\"HS384\"] = \"HS384\";\n  AlgorithmTypes2[\"HS512\"] = \"HS512\";\n  return AlgorithmTypes2;\n})(AlgorithmTypes || {});\nexport {\n  AlgorithmTypes,\n  JwtAlgorithmNotImplemented,\n  JwtAlorithmNotImplemented,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n};\n", "// src/middleware/jwt/index.ts\nimport { HTTPException } from \"../../http-exception.js\";\nimport { Jwt } from \"../../utils/jwt/index.js\";\nimport \"../../context.js\";\nvar jwt = (options) => {\n  if (!options) {\n    throw new Error('JWT auth middleware requires options for \"secret');\n  }\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  return async function jwt2(ctx, next) {\n    const credentials = ctx.req.headers.get(\"Authorization\");\n    let token;\n    if (credentials) {\n      const parts = credentials.split(/\\s+/);\n      if (parts.length !== 2) {\n        throw new HTTPException(401, {\n          res: unauthorizedResponse({\n            ctx,\n            error: \"invalid_request\",\n            errDescription: \"invalid credentials structure\"\n          })\n        });\n      } else {\n        token = parts[1];\n      }\n    } else if (options.cookie) {\n      token = ctx.req.cookie(options.cookie);\n    }\n    if (!token) {\n      throw new HTTPException(401, {\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_request\",\n          errDescription: \"no authorization included in request\"\n        })\n      });\n    }\n    let payload;\n    let msg = \"\";\n    try {\n      payload = await Jwt.verify(token, options.secret, options.alg);\n    } catch (e) {\n      msg = `${e}`;\n    }\n    if (!payload) {\n      throw new HTTPException(401, {\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_token\",\n          statusText: msg,\n          errDescription: \"token verification failure\"\n        })\n      });\n    }\n    ctx.set(\"jwtPayload\", payload);\n    await next();\n  };\n};\nfunction unauthorizedResponse(opts) {\n  return new Response(\"Unauthorized\", {\n    status: 401,\n    statusText: opts.statusText,\n    headers: {\n      \"WWW-Authenticate\": `Bearer realm=\"${opts.ctx.req.url}\",error=\"${opts.error}\",error_description=\"${opts.errDescription}\"`\n    }\n  });\n}\nvar verify = Jwt.verify;\nvar decode = Jwt.decode;\nvar sign = Jwt.sign;\nexport {\n  decode,\n  jwt,\n  sign,\n  verify\n};\n", "import { Context, MiddlewareHandler } from 'hono';\r\nimport { ZodSchema } from 'zod';\r\nimport { ApiResponse } from '../types';\r\n\r\n// Type cho validation errors\r\ninterface ValidationErrors {\r\n  [key: string]: string[];\r\n}\r\n\r\n// Middleware cho validate request body d\u1EF1a tr\u00EAn Zod schema\r\nexport const validate = <T>(schema: ZodSchema<T>): MiddlewareHandler => {\r\n  return async (c, next) => {\r\n    try {\r\n      // L\u1EA5y content-type t\u1EEB request\r\n      const contentType = c.req.header('content-type') || '';\r\n      \r\n      // Parse request body t\u00F9y theo content-type\r\n      let requestData: unknown;\r\n      \r\n      if (contentType.includes('application/json')) {\r\n        requestData = await c.req.json();\r\n      } else if (contentType.includes('application/x-www-form-urlencoded')) {\r\n        const formData = await c.req.formData();\r\n        requestData = Object.fromEntries(formData.entries());\r\n      } else if (contentType.includes('multipart/form-data')) {\r\n        const formData = await c.req.formData();\r\n        requestData = Object.fromEntries(formData.entries());\r\n      } else {\r\n        // Default to JSON if content-type is not specified\r\n        try {\r\n          requestData = await c.req.json();\r\n        } catch (e) {\r\n          requestData = {};\r\n        }\r\n      }\r\n      \r\n      // Validate d\u1EEF li\u1EC7u v\u1EDBi schema\r\n      const result = schema.safeParse(requestData);\r\n      \r\n      if (!result.success) {\r\n        const errors: ValidationErrors = {};\r\n        \r\n        // Format l\u1ED7i validation\r\n        result.error.errors.forEach((err) => {\r\n          const path = err.path.join('.');\r\n          if (!errors[path]) {\r\n            errors[path] = [];\r\n          }\r\n          errors[path].push(err.message);\r\n        });\r\n        \r\n        // Tr\u1EA3 v\u1EC1 response l\u1ED7i validation\r\n        return c.json<ApiResponse<null>>({\r\n          success: false,\r\n          data: null,\r\n          message: 'D\u1EEF li\u1EC7u kh\u00F4ng h\u1EE3p l\u1EC7',\r\n          errors\r\n        }, 422);\r\n      }\r\n      \r\n      // L\u01B0u d\u1EEF li\u1EC7u \u0111\u00E3 validate v\u00E0o context \u0111\u1EC3 s\u1EED d\u1EE5ng \u1EDF handler\r\n      c.set('validated', result.data);\r\n      \r\n      await next();\r\n    } catch (error) {\r\n      console.error('Validation middleware error:', error);\r\n      \r\n      // Tr\u1EA3 v\u1EC1 l\u1ED7i n\u1EBFu c\u00F3 exception\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'L\u1ED7i x\u1EED l\u00FD d\u1EEF li\u1EC7u',\r\n      }, 400);\r\n    }\r\n  };\r\n};\r\n\r\n// Middleware cho validate query params\r\nexport const validateQuery = <T>(schema: ZodSchema<T>): MiddlewareHandler => {\r\n  return async (c, next) => {\r\n    try {\r\n      const queryParams = c.req.query();\r\n      \r\n      // Validate query params\r\n      const result = schema.safeParse(queryParams);\r\n      \r\n      if (!result.success) {\r\n        const errors: ValidationErrors = {};\r\n        \r\n        // Format l\u1ED7i validation\r\n        result.error.errors.forEach((err) => {\r\n          const path = err.path.join('.');\r\n          if (!errors[path]) {\r\n            errors[path] = [];\r\n          }\r\n          errors[path].push(err.message);\r\n        });\r\n        \r\n        // Tr\u1EA3 v\u1EC1 response l\u1ED7i validation\r\n        return c.json<ApiResponse<null>>({\r\n          success: false,\r\n          data: null,\r\n          message: 'Tham s\u1ED1 t\u00ECm ki\u1EBFm kh\u00F4ng h\u1EE3p l\u1EC7',\r\n          errors\r\n        }, 422);\r\n      }\r\n      \r\n      // L\u01B0u query params \u0111\u00E3 validate v\u00E0o context\r\n      c.set('validatedQuery', result.data);\r\n      \r\n      await next();\r\n    } catch (error) {\r\n      console.error('Query validation middleware error:', error);\r\n      \r\n      // Tr\u1EA3 v\u1EC1 l\u1ED7i n\u1EBFu c\u00F3 exception\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'L\u1ED7i x\u1EED l\u00FD tham s\u1ED1 t\u00ECm ki\u1EBFm',\r\n      }, 400);\r\n    }\r\n  };\r\n};\r\n\r\n// Helper \u0111\u1EC3 truy c\u1EADp d\u1EEF li\u1EC7u \u0111\u00E3 validate\r\nexport function getValidated<T>(c: Context): T {\r\n  return c.get('validated') as T;\r\n}\r\n\r\n// Helper \u0111\u1EC3 truy c\u1EADp query params \u0111\u00E3 validate\r\nexport function getValidatedQuery<T>(c: Context): T {\r\n  return c.get('validatedQuery') as T;\r\n} ", "import { Context, MiddlewareHandler, Next } from 'hono';\r\nimport { verify } from 'hono/jwt';\r\nimport { ApiResponse, JwtPayload, UserRole, Env } from '../types';\r\n\r\n// Session timeout (30 minutes)\r\nconst SESSION_TTL = 30 * 60;\r\n\r\n// Middleware x\u00E1c th\u1EF1c JWT t\u1EEB cookie\r\nexport const authenticate: MiddlewareHandler<{\r\n  Bindings: Env;\r\n}> = async (c, next) => {\r\n  try {\r\n    // L\u1EA5y token t\u1EEB cookie\r\n    const token = c.req.cookie('auth_token');\r\n    console.log('Auth middleware - token present:', !!token);\r\n\r\n    // N\u1EBFu kh\u00F4ng c\u00F3 token, tr\u1EA3 v\u1EC1 l\u1ED7i 401\r\n    if (!token) {\r\n      console.log('Auth middleware - no token found');\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Kh\u00F4ng c\u00F3 token x\u00E1c th\u1EF1c'\r\n      }, 401);\r\n    }\r\n    \r\n    // Verify token v\u1EDBi JWT secret t\u1EEB env\r\n    const jwtSecret = c.env.JWT_SECRET;\r\n    const payload = await verify<JwtPayload>(token, jwtSecret);\r\n    \r\n    // TEMPORARILY DISABLE KV SESSION STORAGE DUE TO LIMITS\r\n    // Skip session validation completely to avoid KV limit errors\r\n    console.log('Auth middleware - skipping KV session validation (limit exceeded)');\r\n    \r\n    // L\u01B0u th\u00F4ng tin user v\u00E0 JWT payload v\u00E0o context\r\n    c.set('user', {\r\n      id: payload.sub,\r\n      username: payload.username,\r\n      role: payload.role,\r\n      storeId: payload.store\r\n    });\r\n\r\n    // L\u01B0u JWT payload \u0111\u1EC3 s\u1EED d\u1EE5ng trong logout\r\n    c.set('jwtPayload', payload);\r\n\r\n    await next();\r\n  } catch (error) {\r\n    console.error('Authentication error:', error);\r\n    \r\n    // X\u00F3a cookie khi token kh\u00F4ng h\u1EE3p l\u1EC7\r\n    const clearCookieOptions = [\r\n      'auth_token=',\r\n      'HttpOnly',\r\n      'Path=/',\r\n      'SameSite=None',\r\n      'Secure',\r\n      'Max-Age=0'\r\n    ].filter(Boolean).join('; ');\r\n\r\n    c.header('Set-Cookie', clearCookieOptions);\r\n    \r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'Token kh\u00F4ng h\u1EE3p l\u1EC7 ho\u1EB7c \u0111\u00E3 h\u1EBFt h\u1EA1n'\r\n    }, 401);\r\n  }\r\n};\r\n\r\n// Middleware \u0111\u1EC3 ki\u1EC3m tra vai tr\u00F2 ng\u01B0\u1EDDi d\u00F9ng\r\nexport const authorize = (roles: UserRole[]): MiddlewareHandler => {\r\n  return async (c, next) => {\r\n    const user = c.get('user');\r\n    \r\n    if (!user) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Ch\u01B0a \u0111\u0103ng nh\u1EADp'\r\n      }, 401);\r\n    }\r\n    \r\n    if (!roles.includes(user.role)) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Kh\u00F4ng c\u00F3 quy\u1EC1n th\u1EF1c hi\u1EC7n thao t\u00E1c n\u00E0y'\r\n      }, 403);\r\n    }\r\n    \r\n    await next();\r\n  };\r\n};\r\n\r\n// Middleware ki\u1EC3m tra truy c\u1EADp ch\u1EC9 cho c\u1EEDa h\u00E0ng c\u1EE7a user (ho\u1EB7c admin/manager)\r\nexport const storeAccess: MiddlewareHandler = async (c, next) => {\r\n  const user = c.get('user');\r\n  \r\n  if (!user) {\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'Ch\u01B0a \u0111\u0103ng nh\u1EADp'\r\n    }, 401);\r\n  }\r\n  \r\n  // Admin v\u00E0 manager c\u00F3 th\u1EC3 truy c\u1EADp t\u1EA5t c\u1EA3 c\u1EEDa h\u00E0ng\r\n  if (user.role === 'admin' || user.role === 'manager') {\r\n    await next();\r\n    return;\r\n  }\r\n  \r\n  // L\u1EA5y store_id t\u1EEB request\r\n  const storeId = c.req.param('storeId') || c.req.query('store_id');\r\n  \r\n  // N\u1EBFu kh\u00F4ng c\u00F3 storeId, s\u1EED d\u1EE5ng store c\u1EE7a user\r\n  if (!storeId) {\r\n    c.set('storeId', user.storeId);\r\n    await next();\r\n    return;\r\n  }\r\n  \r\n  // Ki\u1EC3m tra storeId c\u00F3 kh\u1EDBp v\u1EDBi store c\u1EE7a user kh\u00F4ng\r\n  if (parseInt(storeId) !== user.storeId) {\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'Kh\u00F4ng c\u00F3 quy\u1EC1n truy c\u1EADp c\u1EEDa h\u00E0ng n\u00E0y'\r\n    }, 403);\r\n  }\r\n  \r\n  await next();\r\n};\r\n\r\n// Helper \u0111\u1EC3 l\u1EA5y th\u00F4ng tin user t\u1EEB context\r\nexport function getUser(c: Context) {\r\n  return c.get('user');\r\n} ", "export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n", "export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n", "import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n", "import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n", "import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n", "export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n", "import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n", "import { z } from 'zod';\r\nimport { PaymentMethod, PaymentStatus, SaleStatus, UserRole, CustomerGroup } from '../types';\r\n\r\n// Auth schemas\r\nexport const loginSchema = z.object({\r\n  email: z.string().min(3, 'Email ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 3 k\u00FD t\u1EF1'),\r\n  password: z.string().min(4, 'M\u1EADt kh\u1EA9u ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 4 k\u00FD t\u1EF1'),\r\n});\r\n\r\n// User schemas\r\nexport const userCreateSchema = z.object({\r\n  username: z.string().min(3, 'T\u00EAn \u0111\u0103ng nh\u1EADp ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 3 k\u00FD t\u1EF1'),\r\n  password: z.string().min(6, 'M\u1EADt kh\u1EA9u ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 6 k\u00FD t\u1EF1'),\r\n  full_name: z.string().min(2, 'H\u1ECD v\u00E0 t\u00EAn ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  phone: z.string().nullable().optional(),\r\n  role: z.enum(['admin', 'manager', 'cashier', 'inventory'] as const),\r\n  store_id: z.number().int().positive('ID c\u1EEDa h\u00E0ng ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  avatar_url: z.string().nullable().optional(),\r\n});\r\n\r\nexport const userUpdateSchema = z.object({\r\n  full_name: z.string().min(2, 'H\u1ECD v\u00E0 t\u00EAn ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1').optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  phone: z.string().nullable().optional(),\r\n  role: z.enum(['admin', 'manager', 'cashier', 'inventory'] as const).optional(),\r\n  store_id: z.number().int().positive('ID c\u1EEDa h\u00E0ng ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng').optional(),\r\n  avatar_url: z.string().nullable().optional(),\r\n  is_active: z.boolean().optional(),\r\n});\r\n\r\nexport const passwordUpdateSchema = z.object({\r\n  current_password: z.string().min(6, 'M\u1EADt kh\u1EA9u hi\u1EC7n t\u1EA1i ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 6 k\u00FD t\u1EF1'),\r\n  new_password: z.string().min(6, 'M\u1EADt kh\u1EA9u m\u1EDBi ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 6 k\u00FD t\u1EF1'),\r\n  confirm_password: z.string().min(6, 'M\u1EADt kh\u1EA9u x\u00E1c nh\u1EADn ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 6 k\u00FD t\u1EF1'),\r\n}).refine(data => data.new_password === data.confirm_password, {\r\n  message: 'M\u1EADt kh\u1EA9u x\u00E1c nh\u1EADn kh\u00F4ng kh\u1EDBp v\u1EDBi m\u1EADt kh\u1EA9u m\u1EDBi',\r\n  path: ['confirm_password'],\r\n});\r\n\r\n// Product schemas\r\nexport const productCreateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn s\u1EA3n ph\u1EA9m ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  description: z.string().nullable().optional(),\r\n  sku: z.string().min(2, 'M\u00E3 SKU ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  barcode: z.string().nullable().optional(),\r\n  category_id: z.number().int().positive('ID danh m\u1EE5c ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  price: z.number().nonnegative('Gi\u00E1 b\u00E1n ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m'),\r\n  cost_price: z.number().nonnegative('Gi\u00E1 nh\u1EADp ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m'),\r\n  tax_rate: z.number().min(0, 'Thu\u1EBF su\u1EA5t ph\u1EA3i l\u1EDBn h\u01A1n ho\u1EB7c b\u1EB1ng 0').max(1, 'Thu\u1EBF su\u1EA5t ph\u1EA3i nh\u1ECF h\u01A1n ho\u1EB7c b\u1EB1ng 1'),\r\n  stock_quantity: z.number().int().nonnegative('S\u1ED1 l\u01B0\u1EE3ng t\u1ED3n kho ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m'),\r\n  stock_alert_threshold: z.number().int().nonnegative('Ng\u01B0\u1EE1ng c\u1EA3nh b\u00E1o t\u1ED3n kho ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m'),\r\n  is_active: z.boolean().optional(),\r\n  image_url: z.string().nullable().optional(),\r\n});\r\n\r\nexport const productUpdateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn s\u1EA3n ph\u1EA9m ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1').optional(),\r\n  description: z.string().nullable().optional(),\r\n  sku: z.string().min(2, 'M\u00E3 SKU ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1').optional(),\r\n  barcode: z.string().nullable().optional(),\r\n  category_id: z.number().int().positive('ID danh m\u1EE5c ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng').optional(),\r\n  price: z.number().nonnegative('Gi\u00E1 b\u00E1n ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n  cost_price: z.number().nonnegative('Gi\u00E1 nh\u1EADp ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n  tax_rate: z.number().min(0, 'Thu\u1EBF su\u1EA5t ph\u1EA3i l\u1EDBn h\u01A1n ho\u1EB7c b\u1EB1ng 0').max(1, 'Thu\u1EBF su\u1EA5t ph\u1EA3i nh\u1ECF h\u01A1n ho\u1EB7c b\u1EB1ng 1').optional(),\r\n  stock_quantity: z.number().int().nonnegative('S\u1ED1 l\u01B0\u1EE3ng t\u1ED3n kho ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n  stock_alert_threshold: z.number().int().nonnegative('Ng\u01B0\u1EE1ng c\u1EA3nh b\u00E1o t\u1ED3n kho ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n  is_active: z.boolean().optional(),\r\n  image_url: z.string().nullable().optional(),\r\n});\r\n\r\n// Category schemas\r\nexport const categoryCreateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn danh m\u1EE5c ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  description: z.string().nullable().optional(),\r\n  parent_id: z.number().int().positive('ID danh m\u1EE5c cha ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng').nullable().optional(),\r\n  is_active: z.boolean().optional(),\r\n});\r\n\r\nexport const categoryUpdateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn danh m\u1EE5c ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1').optional(),\r\n  description: z.string().nullable().optional(),\r\n  parent_id: z.number().int().positive('ID danh m\u1EE5c cha ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng').nullable().optional(),\r\n  is_active: z.boolean().optional(),\r\n});\r\n\r\n// Customer schemas\r\nexport const customerCreateSchema = z.object({\r\n  full_name: z.string().min(2, 'T\u00EAn kh\u00E1ch h\u00E0ng ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  phone: z.string().nullable().optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  address: z.string().nullable().optional(),\r\n  birthday: z.string().nullable().optional(),\r\n  customer_group: z.enum(['regular', 'vip', 'wholesale', 'business'] as const).optional(),\r\n  notes: z.string().nullable().optional(),\r\n  loyalty_points: z.number().int().nonnegative('\u0110i\u1EC3m t\u00EDch l\u0169y ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n});\r\n\r\nexport const customerUpdateSchema = z.object({\r\n  full_name: z.string().min(2, 'T\u00EAn kh\u00E1ch h\u00E0ng ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1').optional(),\r\n  phone: z.string().nullable().optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  address: z.string().nullable().optional(),\r\n  birthday: z.string().nullable().optional(),\r\n  customer_group: z.enum(['regular', 'vip', 'wholesale', 'business'] as const).optional(),\r\n  notes: z.string().nullable().optional(),\r\n  loyalty_points: z.number().int().nonnegative('\u0110i\u1EC3m t\u00EDch l\u0169y ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n});\r\n\r\n// Sale schemas\r\nexport const saleItemSchema = z.object({\r\n  product_id: z.number().int().positive('ID s\u1EA3n ph\u1EA9m ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  quantity: z.number().int().positive('S\u1ED1 l\u01B0\u1EE3ng ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  unit_price: z.number().nonnegative('Gi\u00E1 \u0111\u01A1n v\u1ECB ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m'),\r\n  discount_amount: z.number().nonnegative('S\u1ED1 ti\u1EC1n gi\u1EA3m gi\u00E1 ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n});\r\n\r\nexport const saleCreateSchema = z.object({\r\n  store_id: z.number().int().positive('ID c\u1EEDa h\u00E0ng ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  customer_id: z.number().int().positive('ID kh\u00E1ch h\u00E0ng ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng').nullable().optional(),\r\n  payment_method: z.enum(['cash', 'card', 'bank_transfer', 'mobile_payment', 'credit'] as const),\r\n  payment_status: z.enum(['paid', 'unpaid', 'partial'] as const).optional(),\r\n  notes: z.string().nullable().optional(),\r\n  items: z.array(saleItemSchema).min(1, '\u0110\u01A1n h\u00E0ng ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 1 s\u1EA3n ph\u1EA9m'),\r\n});\r\n\r\nexport const saleUpdateSchema = z.object({\r\n  payment_method: z.enum(['cash', 'card', 'bank_transfer', 'mobile_payment', 'credit'] as const).optional(),\r\n  payment_status: z.enum(['paid', 'unpaid', 'partial'] as const).optional(),\r\n  sale_status: z.enum(['completed', 'returned', 'cancelled'] as const).optional(),\r\n  notes: z.string().nullable().optional(),\r\n});\r\n\r\n// Store schemas\r\nexport const storeCreateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn c\u1EEDa h\u00E0ng ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  address: z.string().min(5, '\u0110\u1ECBa ch\u1EC9 ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 5 k\u00FD t\u1EF1'),\r\n  phone: z.string().nullable().optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  tax_number: z.string().nullable().optional(),\r\n  is_main: z.boolean().optional(),\r\n});\r\n\r\nexport const storeUpdateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn c\u1EEDa h\u00E0ng ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1').optional(),\r\n  address: z.string().min(5, '\u0110\u1ECBa ch\u1EC9 ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 5 k\u00FD t\u1EF1').optional(),\r\n  phone: z.string().nullable().optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  tax_number: z.string().nullable().optional(),\r\n  is_main: z.boolean().optional(),\r\n});\r\n\r\n// Supplier schemas\r\nexport const supplierCreateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn nh\u00E0 cung c\u1EA5p ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  contact_person: z.string().nullable().optional(),\r\n  phone: z.string().nullable().optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  address: z.string().nullable().optional(),\r\n  tax_number: z.string().nullable().optional(),\r\n  notes: z.string().nullable().optional(),\r\n  is_active: z.boolean().optional(),\r\n});\r\n\r\nexport const supplierUpdateSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn nh\u00E0 cung c\u1EA5p ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1').optional(),\r\n  contact_person: z.string().nullable().optional(),\r\n  phone: z.string().nullable().optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').nullable().optional(),\r\n  address: z.string().nullable().optional(),\r\n  tax_number: z.string().nullable().optional(),\r\n  notes: z.string().nullable().optional(),\r\n  is_active: z.boolean().optional(),\r\n});\r\n\r\n// Inventory schemas\r\nexport const stockInItemSchema = z.object({\r\n  product_id: z.number().int().positive('ID s\u1EA3n ph\u1EA9m ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  quantity: z.number().int().positive('S\u1ED1 l\u01B0\u1EE3ng ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  cost_price: z.number().nonnegative('Gi\u00E1 nh\u1EADp ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m'),\r\n  expiry_date: z.string().nullable().optional(),\r\n});\r\n\r\nexport const stockInCreateSchema = z.object({\r\n  supplier_id: z.number().int().positive('ID nh\u00E0 cung c\u1EA5p ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  store_id: z.number().int().positive('ID c\u1EEDa h\u00E0ng ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  reference_number: z.string().optional(),\r\n  payment_status: z.enum(['paid', 'unpaid', 'partial'] as const).optional(),\r\n  payment_amount: z.number().nonnegative('S\u1ED1 ti\u1EC1n thanh to\u00E1n ph\u1EA3i l\u00E0 s\u1ED1 kh\u00F4ng \u00E2m').optional(),\r\n  payment_method: z.enum(['cash', 'card', 'bank_transfer', 'mobile_payment', 'credit'] as const).optional(),\r\n  notes: z.string().nullable().optional(),\r\n  items: z.array(stockInItemSchema).min(1, 'Phi\u1EBFu nh\u1EADp kho ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 1 s\u1EA3n ph\u1EA9m'),\r\n});\r\n\r\n// Financial schemas\r\nexport const financialTransactionCreateSchema = z.object({\r\n  date: z.string(),\r\n  transaction_type: z.enum(['income', 'expense'] as const),\r\n  category: z.string().min(2, 'T\u00EAn danh m\u1EE5c ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  amount: z.number().positive('S\u1ED1 ti\u1EC1n ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng'),\r\n  payment_method: z.enum(['cash', 'card', 'bank_transfer', 'mobile_payment', 'credit'] as const),\r\n  reference_number: z.string().nullable().optional(),\r\n  reference_id: z.number().int().positive('ID tham chi\u1EBFu ph\u1EA3i l\u00E0 s\u1ED1 d\u01B0\u01A1ng').nullable().optional(),\r\n  reference_type: z.enum(['sale', 'purchase', 'expense', 'other'] as const).nullable().optional(),\r\n  notes: z.string().nullable().optional(),\r\n});\r\n\r\n// Settings schemas\r\nexport const settingUpdateSchema = z.record(z.string(), z.union([z.string(), z.number(), z.boolean(), z.null()]));\r\n\r\n// Query param schemas\r\nexport const paginationSchema = z.object({\r\n  page: z.coerce.number().int().positive().optional().default(1),\r\n  limit: z.coerce.number().int().positive().optional().default(10),\r\n});\r\n\r\nexport const sortSchema = z.object({\r\n  sortBy: z.string().optional(),\r\n  sortDirection: z.enum(['asc', 'desc']).optional(),\r\n});\r\n\r\nexport const dateFilterSchema = z.object({\r\n  from_date: z.string().optional(),\r\n  to_date: z.string().optional(),\r\n});\r\n\r\nexport const searchSchema = z.object({\r\n  search: z.string().optional(),\r\n});\r\n\r\nexport const statusFilterSchema = z.object({\r\n  status: z.string().optional(),\r\n  is_active: z.coerce.boolean().optional(),\r\n});\r\n\r\nexport const productFilterSchema = z.object({\r\n  category_id: z.coerce.number().int().positive().optional(),\r\n  low_stock: z.coerce.boolean().optional(),\r\n});\r\n\r\nexport const saleFilterSchema = z.object({\r\n  payment_method: z.enum(['cash', 'card', 'bank_transfer', 'mobile_payment', 'credit'] as const).optional(),\r\n  payment_status: z.enum(['paid', 'unpaid', 'partial'] as const).optional(),\r\n  sale_status: z.enum(['completed', 'returned', 'cancelled'] as const).optional(),\r\n  customer_id: z.coerce.number().int().positive().optional(),\r\n  store_id: z.coerce.number().int().positive().optional(),\r\n  user_id: z.coerce.number().int().positive().optional(),\r\n});\r\n\r\n// Cache buster schema\r\nexport const cacheBusterSchema = z.object({\r\n  _t: z.string().optional(), // Cache buster timestamp\r\n});\r\n\r\n// Combined query param schemas\r\nexport const baseQuerySchema = paginationSchema.merge(sortSchema).merge(searchSchema).merge(cacheBusterSchema);\r\nexport const productQuerySchema = baseQuerySchema.merge(statusFilterSchema).merge(productFilterSchema).merge(dateFilterSchema);\r\nexport const saleQuerySchema = baseQuerySchema.merge(saleFilterSchema).merge(dateFilterSchema);\r\nexport const customerQuerySchema = baseQuerySchema.merge(statusFilterSchema);\r\nexport const userQuerySchema = baseQuerySchema.merge(statusFilterSchema);\r\nexport const categoryQuerySchema = baseQuerySchema.merge(statusFilterSchema);\r\nexport const supplierQuerySchema = baseQuerySchema.merge(statusFilterSchema);\r\nexport const financialTransactionQuerySchema = baseQuerySchema.merge(dateFilterSchema);", "import * as crypto from 'node:crypto';\r\n\r\n/**\r\n * Generates a random salt for password hashing\r\n * @returns {string} A random hex string\r\n */\r\nexport function generateRandomSalt(): string {\r\n  return crypto.randomBytes(16).toString('hex');\r\n}\r\n\r\n/**\r\n * Hashes a password with the given salt using SHA-256\r\n * @param {string} password - The plain text password\r\n * @param {string} salt - The salt to use for hashing\r\n * @returns {Promise<string>} The hashed password\r\n */\r\nexport async function hashPassword(password: string, salt: string): Promise<string> {\r\n  return new Promise((resolve) => {\r\n    // Create a hash using SHA-256\r\n    const hash = crypto.createHash('sha256');\r\n    hash.update(password + salt);\r\n    resolve(hash.digest('hex'));\r\n  });\r\n}\r\n\r\n/**\r\n * Verifies a password against a stored hash and salt\r\n * @param {string} password - The plain text password to verify\r\n * @param {string} storedHash - The stored hash from the database\r\n * @param {string} salt - The salt used for hashing\r\n * @returns {Promise<boolean>} True if the password matches, false otherwise\r\n */\r\nexport async function verifyPassword(\r\n  password: string,\r\n  storedHash: string,\r\n  salt: string\r\n): Promise<boolean> {\r\n  const hashedPassword = await hashPassword(password, salt);\r\n  return crypto.timingSafeEqual(\r\n    Buffer.from(hashedPassword, 'hex'),\r\n    Buffer.from(storedHash, 'hex')\r\n  );\r\n}\r\n\r\n/**\r\n * Encrypts sensitive data using AES-256-GCM\r\n * @param {string} text - The text to encrypt\r\n * @param {string} key - The encryption key (must be 32 bytes)\r\n * @returns {string} The encrypted data as a hex string with IV and auth tag\r\n */\r\nexport function encrypt(text: string, key: string): string {\r\n  // Create a unique initialization vector for each encryption\r\n  const iv = crypto.randomBytes(16);\r\n  \r\n  // Create cipher with key and iv\r\n  const cipher = crypto.createCipheriv(\r\n    'aes-256-gcm', \r\n    Buffer.from(key), \r\n    iv\r\n  );\r\n  \r\n  // Encrypt the text\r\n  let encrypted = cipher.update(text, 'utf8', 'hex');\r\n  encrypted += cipher.final('hex');\r\n  \r\n  // Get the auth tag (for integrity verification during decryption)\r\n  const authTag = cipher.getAuthTag().toString('hex');\r\n  \r\n  // Return IV + encrypted data + auth tag\r\n  // Format: iv:authTag:encryptedData\r\n  return iv.toString('hex') + ':' + authTag + ':' + encrypted;\r\n}\r\n\r\n/**\r\n * Decrypts data that was encrypted using the encrypt function\r\n * @param {string} encryptedData - The encrypted data (format: iv:authTag:encryptedData)\r\n * @param {string} key - The encryption key (must be 32 bytes)\r\n * @returns {string} The decrypted text\r\n */\r\nexport function decrypt(encryptedData: string, key: string): string {\r\n  // Split the encrypted data into IV, auth tag and encrypted content\r\n  const parts = encryptedData.split(':');\r\n  if (parts.length !== 3) {\r\n    throw new Error('Invalid encrypted data format');\r\n  }\r\n  \r\n  const iv = Buffer.from(parts[0], 'hex');\r\n  const authTag = Buffer.from(parts[1], 'hex');\r\n  const encryptedText = parts[2];\r\n  \r\n  // Create decipher\r\n  const decipher = crypto.createDecipheriv(\r\n    'aes-256-gcm', \r\n    Buffer.from(key), \r\n    iv\r\n  );\r\n  \r\n  // Set auth tag for verification\r\n  decipher.setAuthTag(authTag);\r\n  \r\n  // Decrypt the data\r\n  let decrypted = decipher.update(encryptedText, 'hex', 'utf8');\r\n  decrypted += decipher.final('utf8');\r\n  \r\n  return decrypted;\r\n}\r\n\r\n/**\r\n * Generates a secure random token\r\n * @param {number} byteLength - The length of the token in bytes\r\n * @returns {string} A random token as a hex string\r\n */\r\nexport function generateToken(byteLength = 32): string {\r\n  return crypto.randomBytes(byteLength).toString('hex');\r\n} ", "import { Hono } from 'hono';\nimport { sign, verify } from 'hono/jwt';\nimport { Env, ApiResponse, UserResponse, JwtPayload } from '../types';\nimport { validate, getValidated } from '../middleware/validate';\nimport { authenticate } from '../middleware/auth';\nimport { loginSchema } from '../schemas';\nimport { generateRandomSalt, hashPassword } from '../utils/crypto';\n\n// Auth routes\nconst app = new Hono<{ Bindings: Env }>();\n\n// Session timeout (30 minutes)\nconst SESSION_TTL = 30 * 60;\n// JWT expiry (30 minutes)\nconst JWT_EXPIRY = 30 * 60;\n\n// Use hashPassword from utils/crypto\n\n// Debug endpoint to check users\napp.get('/debug-users', async (c) => {\n  try {\n    // First check if users table exists\n    const tables = await c.env.DB.prepare(`\n      SELECT name FROM sqlite_master WHERE type='table' AND name='users'\n    `).all();\n\n    if (!tables.results || tables.results.length === 0) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Users table does not exist'\n      });\n    }\n\n    // Get table schema\n    const schema = await c.env.DB.prepare(`PRAGMA table_info(users)`).all();\n\n    // Get users\n    const users = await c.env.DB.prepare(`\n      SELECT id, email, first_name, last_name, role, created_at\n      FROM users\n      LIMIT 10\n    `).all();\n\n    return c.json({\n      success: true,\n      data: {\n        schema: schema.results,\n        users: users.results\n      },\n      message: 'Debug users'\n    });\n  } catch (error) {\n    console.error('Debug users error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Debug error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Debug endpoint to test password\napp.post('/debug-password', async (c) => {\n  try {\n    const { email, password } = await c.req.json();\n\n    const user = await c.env.DB.prepare(`\n      SELECT id, email, password_hash, first_name, last_name\n      FROM users\n      WHERE email = ?\n    `).bind(email).first();\n\n    if (!user) {\n      return c.json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    // Try different password hashing methods\n    const testHashes = [\n      password, // plain text\n      await hashPassword(password, 'SmartPOSDefaultSalt'), // with salt\n      await hashPassword(password, ''), // without salt\n    ];\n\n    return c.json({\n      success: true,\n      data: {\n        user: {\n          id: user.id,\n          email: user.email,\n          full_name: `${user.first_name} ${user.last_name}`.trim()\n        },\n        stored_hash: user.password_hash,\n        test_password: password,\n        test_hashes: testHashes,\n        matches: testHashes.map(hash => hash === user.password_hash)\n      }\n    });\n  } catch (error) {\n    return c.json({\n      success: false,\n      message: 'Error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Login route - temporarily simplified for debugging\napp.post('/login', validate(loginSchema), async (c) => {\n  try {\n    // Get validated data\n    const { email, password } = getValidated<{ email: string; password: string }>(c);\n\n    console.log('Login attempt:', { email, password });\n\n    // Find user in database\n    const user = await c.env.DB.prepare(\n      `SELECT id, email, password_hash, first_name, last_name, phone, role, status\n       FROM users\n       WHERE email = ? AND status = 'active'`\n    )\n      .bind(email)\n      .first();\n\n    console.log('User found:', user);\n\n    // Check if user exists\n    if (!user) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'T\u00E0i kho\u1EA3n ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng'\n      }, 401);\n    }\n\n    // Check password (currently stored as plain text)\n    const isPasswordValid = user.password_hash === password;\n\n    if (!isPasswordValid) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'T\u00E0i kho\u1EA3n ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng'\n      }, 401);\n    }\n    \n    // Temporary bypass password check for debugging\n    console.log('Password check - bypassed for debugging:', {\n      provided: password,\n      stored: user.password_hash,\n      expectedPassword: 'admin123'\n    });\n\n    if (password !== 'admin123' && password !== 'admin123456' && password !== 'admin') {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'T\u00E0i kho\u1EA3n ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng'\n      }, 401);\n    }\n    \n    // Generate JWT payload\n    const now = Math.floor(Date.now() / 1000);\n    const payload: JwtPayload = {\n      sub: user.id as number,\n      username: user.email as string, // Use email as username since we don't have username field\n      role: user.role as any,\n      store: 1, // Default to store 1 until migration adds store_id column\n      iat: now,\n      exp: now + JWT_EXPIRY\n    };\n    \n    // Sign JWT token\n    const token = await sign(payload, c.env.JWT_SECRET);\n    \n    // Store session in KV (optional, don't fail if KV limit exceeded)\n    try {\n      const sessionKey = `session:${user.id}:${now}`;\n      console.log('Creating session with key:', sessionKey);\n      await c.env.SESSIONS.put(sessionKey, '1', { expirationTtl: SESSION_TTL });\n      console.log('Session created successfully');\n    } catch (kvError) {\n      console.warn('Session storage failed, continuing without session:', kvError);\n    }\n    \n    // Update last login time\n    await c.env.DB.prepare(\n      `UPDATE users SET last_login = datetime('now') WHERE id = ?`\n    )\n      .bind(user.id)\n      .run();\n    \n    // Set JWT in cookie - for cross-origin, we need to set domain\n    const cookieOptions = [\n      `auth_token=${token}`,\n      'HttpOnly',\n      'Path=/',\n      'Domain=smartpos-api.bangachieu2.workers.dev', // Explicit domain for cross-origin\n      'SameSite=None', // Required for cross-origin\n      'Secure', // Required when SameSite=None\n      `Max-Age=${JWT_EXPIRY}`\n    ].filter(Boolean).join('; ');\n\n    console.log('Setting login cookie:', cookieOptions);\n    c.header('Set-Cookie', cookieOptions);\n    \n    // Return user data (exclude password)\n    const userData: UserResponse = {\n      id: user.id as number,\n      username: user.email as string, // Use email as username\n      fullName: `${user.first_name} ${user.last_name}`.trim(),\n      email: user.email as string,\n      phone: user.phone as string,\n      role: user.role as any,\n      storeId: 1, // Default store ID\n      avatarUrl: null,\n      isActive: user.status === 'active',\n      lastLogin: null, // Will be set in next login\n      createdAt: '', // Not needed for login response\n      updatedAt: '', // Not needed for login response\n    };\n    \n    return c.json<ApiResponse<UserResponse>>({\n      success: true,\n      data: userData,\n      message: '\u0110\u0103ng nh\u1EADp th\u00E0nh c\u00F4ng'\n    });\n  } catch (error: any) {\n    console.error('Login error:', error);\n    console.error('Error details:', {\n      message: error?.message || 'Unknown error',\n      stack: error?.stack || 'No stack trace',\n      name: error?.name || 'Unknown error type'\n    });\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i \u0111\u0103ng nh\u1EADp, vui l\u00F2ng th\u1EED l\u1EA1i sau'\n    }, 500);\n  }\n});\n\n// Logout route\napp.post('/logout', authenticate, async (c) => {\n  try {\n    const user = c.get('user') as any;\n    \n    // Check if we have a valid user from the JWT\n    if (user) {\n      // Delete session from KV\n      const jwtPayload = c.get('jwtPayload') as JwtPayload;\n      const sessionKey = `session:${user.id}:${jwtPayload.iat}`;\n      await c.env.SESSIONS.delete(sessionKey);\n    }\n    \n    // Clear cookie\n    const clearCookieOptions = [\n      'auth_token=',\n      'HttpOnly',\n      'Path=/',\n      'Domain=smartpos-api.bangachieu2.workers.dev',\n      'SameSite=None',\n      'Secure',\n      'Max-Age=0'\n    ].filter(Boolean).join('; ');\n\n    c.header('Set-Cookie', clearCookieOptions);\n    \n    return c.json<ApiResponse<null>>({\n      success: true,\n      data: null,\n      message: '\u0110\u0103ng xu\u1EA5t th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Logout error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i \u0111\u0103ng xu\u1EA5t, vui l\u00F2ng th\u1EED l\u1EA1i sau'\n    }, 500);\n  }\n});\n\n// Get current user\napp.get('/me', authenticate, async (c) => {\n  try {\n    const user = c.get('user') as any;\n    \n    // Get user from database\n    const userData = await c.env.DB.prepare(\n      `SELECT id, email as username, first_name, last_name, email, phone, role, status as active, last_login, created_at, updated_at\n       FROM users \n       WHERE id = ?`\n    )\n      .bind(user.id)\n      .first();\n    \n    if (!userData) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Ng\u01B0\u1EDDi d\u00F9ng kh\u00F4ng t\u1ED3n t\u1EA1i'\n      }, 404);\n    }\n    \n    // Format user data\n    const response: UserResponse = {\n      id: userData.id,\n      username: userData.username,\n      fullName: `${userData.first_name} ${userData.last_name}`.trim(),\n      email: userData.email,\n      phone: userData.phone,\n      role: userData.role,\n      storeId: 1, // Default store ID\n      avatarUrl: null,\n      isActive: Boolean(userData.active),\n      lastLogin: userData.last_login,\n      createdAt: userData.created_at,\n      updatedAt: userData.updated_at,\n    };\n    \n    return c.json<ApiResponse<UserResponse>>({\n      success: true,\n      data: response,\n      message: 'L\u1EA5y th\u00F4ng tin ng\u01B0\u1EDDi d\u00F9ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Get user error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i l\u1EA5y th\u00F4ng tin ng\u01B0\u1EDDi d\u00F9ng, vui l\u00F2ng th\u1EED l\u1EA1i sau'\n    }, 500);\n  }\n});\n\n// Token refresh route\napp.post('/refresh-token', async (c) => {\n  try {\n    // Get token from cookie\n    const token = c.req.cookie('auth_token');\n    \n    if (!token) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng c\u00F3 token \u0111\u1EC3 l\u00E0m m\u1EDBi'\n      }, 401);\n    }\n    \n    // Verify current token - this will throw if invalid\n    const payload = await verify(token, c.env.JWT_SECRET);\n    \n    // Generate new token\n    const now = Math.floor(Date.now() / 1000);\n    const newPayload: JwtPayload = {\n      sub: payload.sub,\n      username: payload.username,\n      role: payload.role,\n      store: payload.store,\n      iat: now,\n      exp: now + JWT_EXPIRY\n    };\n    \n    // Sign new token\n    const newToken = await sign(newPayload, c.env.JWT_SECRET);\n    \n    // Revoke old session\n    const oldSessionKey = `session:${payload.sub}:${payload.iat}`;\n    await c.env.SESSIONS.delete(oldSessionKey);\n    \n    // Create new session\n    const newSessionKey = `session:${payload.sub}:${now}`;\n    await c.env.SESSIONS.put(newSessionKey, '1', { expirationTtl: SESSION_TTL });\n    \n    // Set new JWT in cookie\n    const newCookieOptions = [\n      `auth_token=${newToken}`,\n      'HttpOnly',\n      'Path=/',\n      'SameSite=None',\n      'Secure',\n      `Max-Age=${JWT_EXPIRY}`\n    ].filter(Boolean).join('; ');\n\n    c.header('Set-Cookie', newCookieOptions);\n    \n    return c.json<ApiResponse<null>>({\n      success: true,\n      data: null,\n      message: 'Token l\u00E0m m\u1EDBi th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Token refresh error:', error);\n    \n    // Clear invalid token\n    const clearInvalidCookieOptions = [\n      'auth_token=',\n      'HttpOnly',\n      'Path=/',\n      'SameSite=None',\n      'Secure',\n      'Max-Age=0'\n    ].filter(Boolean).join('; ');\n\n    c.header('Set-Cookie', clearInvalidCookieOptions);\n    \n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'Token kh\u00F4ng h\u1EE3p l\u1EC7 ho\u1EB7c \u0111\u00E3 h\u1EBFt h\u1EA1n'\n    }, 401);\n  }\n});\n\n// Test database connection route\napp.get('/test-db', async (c) => {\n  try {\n    const result = await c.env.DB.prepare('SELECT 1 as test').first();\n    return c.json({\n      success: true,\n      data: result,\n      message: 'Database connection successful'\n    });\n  } catch (error) {\n    console.error('Database test error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Database connection failed: ' + error.message\n    }, 500);\n  }\n});\n\n\n\n// Simple admin creation route\napp.post('/setup-admin', async (c) => {\n  try {\n    // Check if admin exists\n    const existingAdmin = await c.env.DB.prepare(\n      `SELECT id FROM users WHERE email = 'admin@smartpos.com'`\n    ).first();\n\n    if (existingAdmin) {\n      return c.json({\n        success: true,\n        data: null,\n        message: 'Admin user already exists'\n      });\n    }\n\n    // Create admin user with simple password (no hashing for now)\n    await c.env.DB.prepare(\n      `INSERT INTO users (email, password_hash, first_name, last_name, phone, role, status, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind('admin@smartpos.com', 'admin123456', 'Admin', 'User', '0123456789', 'admin', 'active')\n      .run();\n\n    return c.json({\n      success: true,\n      data: null,\n      message: 'Admin user created successfully. Email: admin@smartpos.com, Password: admin123456'\n    });\n  } catch (error) {\n    console.error('Setup admin error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Error creating admin user: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Check database schema route\napp.get('/check-schema', async (c) => {\n  try {\n    const tables = await c.env.DB.prepare(\"SELECT name FROM sqlite_master WHERE type='table'\").all();\n    const usersSchema = await c.env.DB.prepare(\"PRAGMA table_info(users)\").all();\n    const categoriesSchema = await c.env.DB.prepare(\"PRAGMA table_info(categories)\").all();\n    const productsSchema = await c.env.DB.prepare(\"PRAGMA table_info(products)\").all();\n    const customersSchema = await c.env.DB.prepare(\"PRAGMA table_info(customers)\").all();\n\n    return c.json({\n      success: true,\n      data: {\n        tables: tables.results,\n        usersSchema: usersSchema.results,\n        categoriesSchema: categoriesSchema.results,\n        productsSchema: productsSchema.results,\n        customersSchema: customersSchema.results\n      },\n      message: 'Database schema retrieved successfully'\n    });\n  } catch (error) {\n    console.error('Schema check error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Error checking schema: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Debug users route\napp.get('/debug-users', async (c) => {\n  try {\n    const users = await c.env.DB.prepare(\"SELECT id, email, password_hash, first_name, last_name, role, status FROM users\").all();\n\n    return c.json({\n      success: true,\n      data: {\n        users: users.results\n      },\n      message: 'Users retrieved successfully'\n    });\n  } catch (error) {\n    console.error('Debug users error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Error retrieving users: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Debug sales schema route\napp.get('/debug-sales-schema', async (c) => {\n  try {\n    const salesSchema = await c.env.DB.prepare(\"PRAGMA table_info(sales)\").all();\n    const saleItemsSchema = await c.env.DB.prepare(\"PRAGMA table_info(sale_items)\").all();\n\n    return c.json({\n      success: true,\n      data: {\n        salesSchema: salesSchema.results,\n        saleItemsSchema: saleItemsSchema.results\n      },\n      message: 'Sales schema retrieved successfully'\n    });\n  } catch (error) {\n    console.error('Debug sales schema error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Error retrieving sales schema: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Fix admin password route\napp.post('/fix-admin-password', async (c) => {\n  try {\n    // Update admin user password to plain text for testing\n    await c.env.DB.prepare(\n      `UPDATE users SET password_hash = ? WHERE email = ?`\n    )\n      .bind('admin123456', 'admin@smartpos.com')\n      .run();\n\n    return c.json({\n      success: true,\n      data: null,\n      message: 'Admin password updated to plain text for testing'\n    });\n  } catch (error) {\n    console.error('Fix admin password error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Error fixing admin password: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Simple seed data route (skip sales for now)\napp.post('/seed-basic-data', async (c) => {\n  try {\n    // Create stores table if not exists\n    await c.env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS stores (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        address TEXT NOT NULL,\n        phone TEXT,\n        email TEXT,\n        tax_number TEXT,\n        is_main INTEGER NOT NULL DEFAULT 0,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\n      )\n    `).run();\n\n    // Create sample categories\n    await c.env.DB.prepare(\n      `INSERT OR IGNORE INTO categories (id, name, description, is_active, created_at, updated_at)\n       VALUES (?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind(1, 'M\u00E1y t\u00EDnh \u0111\u1EC3 b\u00E0n', 'M\u00E1y t\u00EDnh \u0111\u1EC3 b\u00E0n v\u00E0 workstation', 1)\n      .run();\n\n    await c.env.DB.prepare(\n      `INSERT OR IGNORE INTO categories (id, name, description, is_active, created_at, updated_at)\n       VALUES (?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind(2, 'Laptop', 'M\u00E1y t\u00EDnh x\u00E1ch tay c\u00E1c lo\u1EA1i', 1)\n      .run();\n\n    // Create sample products\n    await c.env.DB.prepare(\n      `INSERT OR IGNORE INTO products (id, name, description, sku, barcode, category_id, price, cost_price, stock_quantity, stock_alert_threshold, is_active, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind(1, 'PC Gaming RTX 4060', 'M\u00E1y t\u00EDnh gaming v\u1EDBi card RTX 4060, CPU i5-12400F, RAM 16GB, SSD 500GB', 'PC-RTX4060-001', '8934567890123', 1, 25000000, 22000000, 5, 2, 1)\n      .run();\n\n    await c.env.DB.prepare(\n      `INSERT OR IGNORE INTO products (id, name, description, sku, barcode, category_id, price, cost_price, stock_quantity, stock_alert_threshold, is_active, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind(2, 'Laptop Dell Inspiron 15', 'Laptop Dell Inspiron 15 3000, i5-1135G7, 8GB RAM, 256GB SSD', 'DELL-INS15-001', '8934567890124', 2, 18000000, 16000000, 8, 3, 1)\n      .run();\n\n    // Create sample customers\n    await c.env.DB.prepare(\n      `INSERT OR IGNORE INTO customers (id, first_name, last_name, email, phone, address_line1, city, state, postal_code, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind(1, 'Nguy\u1EC5n', 'V\u0103n An', 'nguyenvanan@gmail.com', '0901234567', '123 \u0110\u01B0\u1EDDng L\u00EA L\u1EE3i, Ph\u01B0\u1EDDng B\u1EBFn Ngh\u00E9', 'H\u1ED3 Ch\u00ED Minh', 'Qu\u1EADn 1', '70000')\n      .run();\n\n    await c.env.DB.prepare(\n      `INSERT OR IGNORE INTO customers (id, first_name, last_name, email, phone, address_line1, city, state, postal_code, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind(2, 'C\u00F4ng ty', 'TNHH ABC', 'contact@abc.com.vn', '0287654321', '456 \u0110\u01B0\u1EDDng Nguy\u1EC5n Hu\u1EC7, Ph\u01B0\u1EDDng B\u1EBFn Ngh\u00E9', 'H\u1ED3 Ch\u00ED Minh', 'Qu\u1EADn 1', '70000')\n      .run();\n\n    // Create sample store\n    await c.env.DB.prepare(\n      `INSERT OR IGNORE INTO stores (id, name, address, phone, email, tax_number, is_main, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))`\n    )\n      .bind(1, 'SmartPOS Store', '123 \u0110\u01B0\u1EDDng Nguy\u1EC5n Hu\u1EC7, Q1, TP.HCM', '0283456789', 'store@smartpos.com', '0123456789', 1)\n      .run();\n\n    return c.json({\n      success: true,\n      data: null,\n      message: 'Basic data seeded successfully (products, categories, customers, stores)'\n    });\n  } catch (error) {\n    console.error('Seed basic data error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Error seeding basic data: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Test endpoint to check users\napp.get('/test-users', async (c) => {\n  try {\n    const users = await c.env.DB.prepare(`\n      SELECT id, email, password_hash, first_name, last_name, role, status\n      FROM users\n      LIMIT 10\n    `).all();\n\n    return c.json({\n      success: true,\n      data: users.results,\n      message: 'Users list'\n    });\n  } catch (error) {\n    console.error('Test users error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Test error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Debug endpoint to check database schema\napp.get('/debug-schema', async (c) => {\n  try {\n    // Check if users table exists and its structure\n    const usersTableInfo = await c.env.DB.prepare(`PRAGMA table_info(users)`).all();\n    const categoriesTableInfo = await c.env.DB.prepare(`PRAGMA table_info(categories)`).all();\n\n    return c.json({\n      success: true,\n      data: {\n        usersTableInfo: usersTableInfo.results,\n        categoriesTableInfo: categoriesTableInfo.results,\n        message: 'Database schema info'\n      }\n    });\n  } catch (error) {\n    console.error('Error checking schema:', error);\n    return c.json({\n      success: false,\n      message: `Error checking schema: ${(error as any).message}`,\n      data: null\n    }, 500);\n  }\n});\n\n// Temporary endpoint to create admin user\napp.post('/create-admin', async (c) => {\n  try {\n    // Check if admin already exists\n    const existingAdmin = await c.env.DB.prepare(\n      `SELECT id FROM users WHERE email = 'admin@smartpos.com'`\n    ).first();\n\n    if (existingAdmin) {\n      return c.json({\n        success: false,\n        message: 'Admin user already exists'\n      });\n    }\n\n    // Create admin user with current database schema\n    const result = await c.env.DB.prepare(`\n      INSERT INTO users (email, password_hash, first_name, last_name, role, status, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))\n    `).bind(\n      'admin@smartpos.com',\n      'admin123456', // Plain text password for now\n      'Admin',\n      'User',\n      'admin',\n      'active'\n    ).run();\n\n    return c.json({\n      success: true,\n      message: 'Admin user created successfully',\n      userId: result.meta.last_row_id\n    });\n  } catch (error) {\n    console.error('Error creating admin user:', error);\n    return c.json({\n      success: false,\n      message: `Error creating admin user: ${(error as any).message}`,\n      data: null\n    }, 500);\n  }\n});\n\n// Fix admin password to plain text for testing\napp.get('/fix-admin-simple', async (c) => {\n  try {\n    // Update admin user password to plain text for testing\n    await c.env.DB.prepare(\n      `UPDATE users SET password_hash = ? WHERE email = ?`\n    )\n      .bind('admin', 'admin')\n      .run();\n\n    return c.json({\n      success: true,\n      message: 'Admin password updated to plain text'\n    });\n  } catch (error) {\n    console.error('Error updating admin password:', error);\n    return c.json({\n      success: false,\n      message: 'Error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\nexport default app;", "import { Env } from '../types';\r\n\r\n// Default cache TTL: 1 hour\r\nconst DEFAULT_TTL = 60 * 60;\r\n\r\n/**\r\n * L\u01B0u d\u1EEF li\u1EC7u v\u00E0o cache\r\n * @param env - Environment v\u1EDBi KV bindings\r\n * @param key - Cache key\r\n * @param data - D\u1EEF li\u1EC7u c\u1EA7n cache (s\u1EBD \u0111\u01B0\u1EE3c JSON.stringify)\r\n * @param ttl - Th\u1EDDi gian cache t\u1ED3n t\u1EA1i (gi\u00E2y), m\u1EB7c \u0111\u1ECBnh 1 gi\u1EDD\r\n */\r\nexport async function setCache(env: Env, key: string, data: any, ttl: number = DEFAULT_TTL): Promise<void> {\r\n  try {\r\n    const serializedData = JSON.stringify(data);\r\n    await env.CACHE.put(key, serializedData, { expirationTtl: ttl });\r\n  } catch (error) {\r\n    console.error(`Cache write error for key ${key}:`, error);\r\n    // Allow cache errors to fail silently in production\r\n  }\r\n}\r\n\r\n/**\r\n * L\u1EA5y d\u1EEF li\u1EC7u t\u1EEB cache\r\n * @param env - Environment v\u1EDBi KV bindings\r\n * @param key - Cache key\r\n * @returns D\u1EEF li\u1EC7u \u0111\u00E3 parse t\u1EEB JSON ho\u1EB7c null n\u1EBFu kh\u00F4ng t\u00ECm th\u1EA5y\r\n */\r\nexport async function getCache<T>(env: Env, key: string): Promise<T | null> {\r\n  try {\r\n    const cachedData = await env.CACHE.get(key);\r\n    \r\n    if (!cachedData) {\r\n      return null;\r\n    }\r\n    \r\n    return JSON.parse(cachedData) as T;\r\n  } catch (error) {\r\n    console.error(`Cache read error for key ${key}:`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * X\u00F3a d\u1EEF li\u1EC7u t\u1EEB cache\r\n * @param env - Environment v\u1EDBi KV bindings\r\n * @param key - Cache key c\u1EA7n x\u00F3a\r\n */\r\nexport async function deleteCache(env: Env, key: string): Promise<void> {\r\n  try {\r\n    await env.CACHE.delete(key);\r\n  } catch (error) {\r\n    console.error(`Cache delete error for key ${key}:`, error);\r\n  }\r\n}\r\n\r\n/**\r\n * X\u00F3a nhi\u1EC1u cache keys c\u00F3 c\u00F9ng prefix\r\n * @param env - Environment v\u1EDBi KV bindings\r\n * @param prefix - Prefix c\u1EE7a cache keys c\u1EA7n x\u00F3a\r\n */\r\nexport async function deleteCacheByPrefix(env: Env, prefix: string): Promise<void> {\r\n  try {\r\n    // KV kh\u00F4ng h\u1ED7 tr\u1EE3 x\u00F3a theo prefix tr\u1EF1c ti\u1EBFp\r\n    // Ch\u00FAng ta c\u1EA7n li\u1EC7t k\u00EA keys r\u1ED3i x\u00F3a t\u1EEBng key\r\n    const keys = await env.CACHE.list({ prefix });\r\n    \r\n    const deletePromises = keys.keys.map(key => env.CACHE.delete(key.name));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error(`Cache delete by prefix error for ${prefix}:`, error);\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper \u0111\u1EC3 cache result c\u1EE7a m\u1ED9t function\r\n * @param env - Environment v\u1EDBi KV bindings\r\n * @param key - Cache key\r\n * @param fetchFn - Function \u0111\u1EC3 l\u1EA5y d\u1EEF li\u1EC7u khi cache miss\r\n * @param ttl - Th\u1EDDi gian cache t\u1ED3n t\u1EA1i (gi\u00E2y), m\u1EB7c \u0111\u1ECBnh 1 gi\u1EDD\r\n * @returns D\u1EEF li\u1EC7u t\u1EEB cache ho\u1EB7c t\u1EEB fetchFn\r\n */\r\nexport async function getOrSetCache<T>(\r\n  env: Env,\r\n  key: string,\r\n  fetchFn: () => Promise<T>,\r\n  ttl: number = DEFAULT_TTL\r\n): Promise<T> {\r\n  try {\r\n    // Th\u1EED l\u1EA5y t\u1EEB cache tr\u01B0\u1EDBc\r\n    const cachedData = await getCache<T>(env, key);\r\n    \r\n    // N\u1EBFu c\u00F3 cache, tr\u1EA3 v\u1EC1 ngay\r\n    if (cachedData !== null) {\r\n      return cachedData;\r\n    }\r\n    \r\n    // N\u1EBFu kh\u00F4ng, fetch d\u1EEF li\u1EC7u m\u1EDBi\r\n    const freshData = await fetchFn();\r\n    \r\n    // L\u01B0u d\u1EEF li\u1EC7u v\u00E0o cache cho l\u1EA7n sau\r\n    await setCache(env, key, freshData, ttl);\r\n    \r\n    return freshData;\r\n  } catch (error) {\r\n    console.error(`Cache get-or-set error for key ${key}:`, error);\r\n    // N\u1EBFu c\u00F3 l\u1ED7i cache, v\u1EABn ph\u1EA3i fetch d\u1EEF li\u1EC7u\r\n    return fetchFn();\r\n  }\r\n}\r\n\r\n/**\r\n * Helper \u0111\u1EC3 t\u1EA1o cache key theo chu\u1EA9n\r\n * @param entity - T\u00EAn entity (users, products, etc.)\r\n * @param id - ID c\u1EE7a entity ho\u1EB7c 'all', 'list'\r\n * @param suffix - H\u1EADu t\u1ED1 t\u00F9y ch\u1ECDn (v\u00ED d\u1EE5: query params)\r\n * @returns Cache key\r\n */\r\nexport function createCacheKey(entity: string, id: string | number, suffix?: string): string {\r\n  return `${entity}:${id}${suffix ? `:${suffix}` : ''}`;\r\n} ", "import { Hono } from 'hono';\r\nimport { Env, ApiResponse, Product, ProductResponse, PaginatedResult } from '../types';\r\nimport { authenticate, authorize, getUser, storeAccess } from '../middleware/auth';\r\nimport { validate, validateQuery, getValidated, getValidatedQuery } from '../middleware/validate';\r\nimport { productCreateSchema, productUpdateSchema, productQuerySchema } from '../schemas';\r\nimport { createCacheKey, getOrSetCache, deleteCache, deleteCacheByPrefix } from '../utils/cache';\r\n\r\n// Products routes\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Initialize sample products if database is empty\r\nasync function initializeSampleProducts(env: Env) {\r\n  try {\r\n    // Check if products exist\r\n    const count = await env.DB.prepare('SELECT COUNT(*) as count FROM products').first<{ count: number }>();\r\n\r\n    if (!count || count.count === 0) {\r\n      console.log('Initializing sample products...');\r\n\r\n      // Insert sample computer hardware products (Vietnamese market)\r\n      const sampleProducts = [\r\n        {\r\n          name: 'CPU Intel Core i5-13400F',\r\n          sku: 'CPU-I5-13400F',\r\n          barcode: '8888888888001',\r\n          category_id: 1,\r\n          price: 4990000,\r\n          cost_price: 4200000,\r\n          stock_quantity: 15,\r\n          stock_alert_threshold: 5,\r\n          description: 'B\u1ED9 vi x\u1EED l\u00FD Intel Core i5-13400F 10 nh\u00E2n 16 lu\u1ED3ng',\r\n          is_active: 1\r\n        },\r\n        {\r\n          name: 'RAM Kingston Fury 16GB DDR4',\r\n          sku: 'RAM-KF-16GB-DDR4',\r\n          barcode: '8888888888002',\r\n          category_id: 1,\r\n          price: 1590000,\r\n          cost_price: 1350000,\r\n          stock_quantity: 25,\r\n          stock_alert_threshold: 8,\r\n          description: 'RAM Kingston Fury Beast 16GB DDR4-3200',\r\n          is_active: 1\r\n        },\r\n        {\r\n          name: 'SSD Samsung 980 500GB',\r\n          sku: 'SSD-SS-980-500GB',\r\n          barcode: '8888888888003',\r\n          category_id: 1,\r\n          price: 1290000,\r\n          cost_price: 1100000,\r\n          stock_quantity: 30,\r\n          stock_alert_threshold: 10,\r\n          description: '\u1ED4 c\u1EE9ng SSD Samsung 980 NVMe M.2 500GB',\r\n          is_active: 1\r\n        },\r\n        {\r\n          name: 'VGA RTX 4060 Ti 16GB',\r\n          sku: 'VGA-RTX-4060TI-16GB',\r\n          barcode: '8888888888004',\r\n          category_id: 1,\r\n          price: 12990000,\r\n          cost_price: 11500000,\r\n          stock_quantity: 8,\r\n          stock_alert_threshold: 3,\r\n          description: 'Card \u0111\u1ED3 h\u1ECDa NVIDIA GeForce RTX 4060 Ti 16GB',\r\n          is_active: 1\r\n        },\r\n        {\r\n          name: 'Mainboard ASUS B550M-A WiFi',\r\n          sku: 'MB-ASUS-B550M-A',\r\n          barcode: '8888888888005',\r\n          category_id: 1,\r\n          price: 2890000,\r\n          cost_price: 2450000,\r\n          stock_quantity: 12,\r\n          stock_alert_threshold: 4,\r\n          description: 'Bo m\u1EA1ch ch\u1EE7 ASUS PRIME B550M-A WiFi',\r\n          is_active: 1\r\n        }\r\n      ];\r\n\r\n      for (const product of sampleProducts) {\r\n        await env.DB.prepare(`\r\n          INSERT INTO products (\r\n            name, sku, barcode, category_id, price, cost_price,\r\n            stock_quantity, stock_alert_threshold, description, is_active,\r\n            created_at, updated_at\r\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))\r\n        `).bind(\r\n          product.name, product.sku, product.barcode, product.category_id,\r\n          product.price, product.cost_price, product.stock_quantity,\r\n          product.stock_alert_threshold, product.description, product.is_active\r\n        ).run();\r\n      }\r\n\r\n      console.log('Sample products initialized successfully');\r\n    }\r\n  } catch (error) {\r\n    console.log('Sample products initialization skipped:', error);\r\n  }\r\n}\r\n\r\n// Debug endpoint to check query params\r\napp.get('/debug-query', authenticate, async (c) => {\r\n  try {\r\n    const queryParams = c.req.query();\r\n    console.log('Raw query params:', queryParams);\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: {\r\n        rawParams: queryParams,\r\n        parsedParams: {\r\n          page: parseInt(queryParams.page || '1'),\r\n          limit: parseInt(queryParams.limit || '10'),\r\n          search: queryParams.search || '',\r\n          category_id: queryParams.category_id ? parseInt(queryParams.category_id) : undefined,\r\n          is_active: queryParams.is_active ? queryParams.is_active === 'true' : undefined,\r\n          low_stock: queryParams.low_stock ? queryParams.low_stock === 'true' : undefined\r\n        }\r\n      },\r\n      message: 'Query params debug'\r\n    });\r\n  } catch (error) {\r\n    console.error('Debug query error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Debug error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// L\u1EA5y danh s\u00E1ch s\u1EA3n ph\u1EA9m (c\u00F3 ph\u00E2n trang, l\u1ECDc, t\u00ECm ki\u1EBFm) - temporarily without auth for debugging\r\napp.get('/', validateQuery(productQuerySchema), async (c) => {\r\n  // Initialize sample data if needed\r\n  await initializeSampleProducts(c.env);\r\n  try {\r\n    // L\u1EA5y query params \u0111\u00E3 validate\r\n    const {\r\n      page = 1,\r\n      limit = 10,\r\n      search = '',\r\n      sortBy = 'name',\r\n      sortDirection = 'asc',\r\n      category_id,\r\n      low_stock,\r\n      is_active\r\n    } = getValidatedQuery<{\r\n      page: number;\r\n      limit: number;\r\n      search: string;\r\n      sortBy: string;\r\n      sortDirection: 'asc' | 'desc';\r\n      category_id?: number;\r\n      low_stock?: boolean;\r\n      is_active?: boolean;\r\n    }>(c);\r\n    \r\n    // T\u1EA1o cache key\r\n    let cacheKey = createCacheKey('products', 'list', `${page}_${limit}_${search}_${sortBy}_${sortDirection}_${category_id || ''}_${low_stock || ''}_${is_active === undefined ? '' : is_active}`);\r\n    \r\n    // L\u1EA5y d\u1EEF li\u1EC7u t\u1EEB cache ho\u1EB7c database\r\n    const result = await getOrSetCache<PaginatedResult<ProductResponse>>(c.env, cacheKey, async () => {\r\n      // T\u1EA1o query base\r\n      let query = `\r\n        SELECT\r\n          p.id, p.name, p.description, p.sku, p.barcode,\r\n          p.category_id, c.name as category_name,\r\n          p.price, p.cost_price, p.tax_rate,\r\n          p.stock_quantity, p.stock_alert_threshold,\r\n          p.is_active, p.image_url, p.created_at, p.updated_at\r\n        FROM products p\r\n        LEFT JOIN categories c ON p.category_id = c.id\r\n        WHERE p.is_active = 1\r\n      `;\r\n      \r\n      // T\u1EA1o m\u1EA3ng params cho prepared statement\r\n      const params: any[] = [];\r\n      \r\n      // Base count query\r\n      let countQueryStr = `\r\n        SELECT COUNT(*) as total\r\n        FROM products p\r\n        LEFT JOIN categories c ON p.category_id = c.id\r\n        WHERE p.is_active = 1\r\n      `;\r\n      \r\n      // Th\u00EAm \u0111i\u1EC1u ki\u1EC7n t\u00ECm ki\u1EBFm\r\n      if (search) {\r\n        query += ` AND (p.name LIKE ? OR p.sku LIKE ? OR p.barcode LIKE ?)`;\r\n        const searchParam = `%${search}%`;\r\n        params.push(searchParam, searchParam, searchParam);\r\n        \r\n        // C\u1EADp nh\u1EADt count query\r\n        countQueryStr += ` AND (p.name LIKE ? OR p.sku LIKE ? OR p.barcode LIKE ?)`;\r\n      }\r\n      \r\n      // Th\u00EAm \u0111i\u1EC1u ki\u1EC7n l\u1ECDc theo category\r\n      if (category_id) {\r\n        query += ` AND p.category_id = ?`;\r\n        params.push(category_id);\r\n        \r\n        // C\u1EADp nh\u1EADt count query\r\n        countQueryStr += ` AND p.category_id = ?`;\r\n      }\r\n      \r\n      // Th\u00EAm \u0111i\u1EC1u ki\u1EC7n l\u1ECDc theo active status\r\n      if (is_active !== undefined) {\r\n        query += ` AND p.is_active = ?`;\r\n        params.push(is_active ? 1 : 0);\r\n        \r\n        // C\u1EADp nh\u1EADt count query\r\n        countQueryStr += ` AND p.is_active = ?`;\r\n      }\r\n      \r\n      // Th\u00EAm \u0111i\u1EC1u ki\u1EC7n l\u1ECDc theo low stock\r\n      if (low_stock) {\r\n        query += ` AND p.stock_quantity <= p.stock_alert_threshold`;\r\n        \r\n        // C\u1EADp nh\u1EADt count query\r\n        countQueryStr += ` AND p.stock_quantity <= p.stock_alert_threshold`;\r\n      }\r\n      \r\n      // Th\u00EAm s\u1EAFp x\u1EBFp\r\n      query += ` ORDER BY p.${sortBy} ${sortDirection}`;\r\n      \r\n      // Th\u00EAm ph\u00E2n trang\r\n      const offset = (page - 1) * limit;\r\n      query += ` LIMIT ? OFFSET ?`;\r\n      params.push(limit, offset);\r\n      \r\n      // T\u1EA1o b\u1EA3n sao params \u0111\u1EC3 s\u1EED d\u1EE5ng cho count query (kh\u00F4ng bao g\u1ED3m LIMIT v\u00E0 OFFSET)\r\n      const countParams = params.slice(0, params.length - 2);\r\n      \r\n      // Th\u1EF1c hi\u1EC7n query \u0111\u1EC3 l\u1EA5y t\u1ED5ng s\u1ED1 s\u1EA3n ph\u1EA9m\r\n      const countResult = await c.env.DB.prepare(countQueryStr).bind(...countParams).first<{ total: number }>();\r\n      const total = countResult?.total || 0;\r\n      \r\n      // Th\u1EF1c hi\u1EC7n query \u0111\u1EC3 l\u1EA5y danh s\u00E1ch s\u1EA3n ph\u1EA9m\r\n      const productsResult = await c.env.DB.prepare(query).bind(...params).all();\r\n      const products = productsResult.results as any[];\r\n      \r\n      // Chuy\u1EC3n \u0111\u1ED5i k\u1EBFt qu\u1EA3 th\u00E0nh \u0111\u1ECBnh d\u1EA1ng response\r\n      const formattedProducts: ProductResponse[] = products.map(p => ({\r\n        id: p.id,\r\n        name: p.name,\r\n        description: p.description,\r\n        sku: p.sku,\r\n        barcode: p.barcode,\r\n        categoryId: p.category_id,\r\n        categoryName: p.category_name,\r\n        price: p.price,\r\n        costPrice: p.cost_price,\r\n        taxRate: p.tax_rate,\r\n        stockQuantity: p.stock_quantity,\r\n        stockAlertThreshold: p.stock_alert_threshold,\r\n        isActive: Boolean(p.is_active),\r\n        imageUrl: p.image_url,\r\n        createdAt: p.created_at,\r\n        updatedAt: p.updated_at\r\n      }));\r\n      \r\n      // Tr\u1EA3 v\u1EC1 k\u1EBFt qu\u1EA3 ph\u00E2n trang\r\n      return {\r\n        data: formattedProducts,\r\n        pagination: {\r\n          total,\r\n          page,\r\n          limit,\r\n          totalPages: Math.ceil(total / limit)\r\n        }\r\n      };\r\n    }, 60 * 5); // Cache trong 5 ph\u00FAt\r\n    \r\n    return c.json<ApiResponse<PaginatedResult<ProductResponse>>>({\r\n      success: true,\r\n      data: result,\r\n      message: 'L\u1EA5y danh s\u00E1ch s\u1EA3n ph\u1EA9m th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Get products error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi l\u1EA5y danh s\u00E1ch s\u1EA3n ph\u1EA9m'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// L\u1EA5y th\u00F4ng tin m\u1ED9t s\u1EA3n ph\u1EA9m - temporarily without auth for debugging\r\napp.get('/:id', async (c) => {\r\n  try {\r\n    const productId = parseInt(c.req.param('id'));\r\n    \r\n    if (isNaN(productId)) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID s\u1EA3n ph\u1EA9m kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n    \r\n    // T\u1EA1o cache key\r\n    const cacheKey = createCacheKey('products', productId);\r\n    \r\n    // L\u1EA5y d\u1EEF li\u1EC7u t\u1EEB cache ho\u1EB7c database\r\n    const product = await getOrSetCache<ProductResponse | null>(c.env, cacheKey, async () => {\r\n      const result = await c.env.DB.prepare(`\r\n        SELECT \r\n          p.id, p.name, p.description, p.sku, p.barcode, \r\n          p.category_id, c.name as category_name,\r\n          p.price, p.cost_price, p.tax_rate, \r\n          p.stock_quantity, p.stock_alert_threshold, \r\n          p.is_active, p.image_url, p.created_at, p.updated_at\r\n        FROM products p\r\n        LEFT JOIN categories c ON p.category_id = c.id\r\n        WHERE p.id = ? AND p.is_active = 1\r\n      `).bind(productId).first();\r\n      \r\n      if (!result) return null;\r\n      \r\n      return {\r\n        id: result.id,\r\n        name: result.name,\r\n        description: result.description,\r\n        sku: result.sku,\r\n        barcode: result.barcode,\r\n        categoryId: result.category_id,\r\n        categoryName: result.category_name,\r\n        price: result.price,\r\n        costPrice: result.cost_price,\r\n        taxRate: result.tax_rate,\r\n        stockQuantity: result.stock_quantity,\r\n        stockAlertThreshold: result.stock_alert_threshold,\r\n        isActive: Boolean(result.is_active),\r\n        imageUrl: result.image_url,\r\n        createdAt: result.created_at,\r\n        updatedAt: result.updated_at\r\n      };\r\n    }, 60 * 5); // Cache trong 5 ph\u00FAt\r\n    \r\n    if (!product) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'S\u1EA3n ph\u1EA9m kh\u00F4ng t\u1ED3n t\u1EA1i ho\u1EB7c \u0111\u00E3 b\u1ECB x\u00F3a'\r\n      }, 404);\r\n    }\r\n    \r\n    return c.json<ApiResponse<ProductResponse>>({\r\n      success: true,\r\n      data: product,\r\n      message: 'L\u1EA5y th\u00F4ng tin s\u1EA3n ph\u1EA9m th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Get product error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi l\u1EA5y th\u00F4ng tin s\u1EA3n ph\u1EA9m'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// T\u1EA1o s\u1EA3n ph\u1EA9m m\u1EDBi - temporarily without auth for debugging\r\napp.post('/', validate(productCreateSchema), async (c) => {\r\n  try {\r\n    const productData = getValidated<Product>(c);\r\n    const user = { id: 1, username: 'admin' }; // Mock user for debugging\r\n    \r\n    // Ki\u1EC3m tra SKU \u0111\u00E3 t\u1ED3n t\u1EA1i ch\u01B0a\r\n    const existingSku = await c.env.DB.prepare(`\r\n      SELECT id FROM products WHERE sku = ?\r\n    `).bind(productData.sku).first();\r\n    \r\n    if (existingSku) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'M\u00E3 SKU \u0111\u00E3 t\u1ED3n t\u1EA1i'\r\n      }, 400);\r\n    }\r\n    \r\n    // Ki\u1EC3m tra barcode \u0111\u00E3 t\u1ED3n t\u1EA1i ch\u01B0a (n\u1EBFu c\u00F3 v\u00E0 kh\u00F4ng r\u1ED7ng)\r\n    if (productData.barcode && productData.barcode.trim() !== '') {\r\n      const existingBarcode = await c.env.DB.prepare(`\r\n        SELECT id FROM products WHERE barcode = ? AND barcode IS NOT NULL AND barcode != ''\r\n      `).bind(productData.barcode.trim()).first();\r\n\r\n      if (existingBarcode) {\r\n        return c.json<ApiResponse<null>>({\r\n          success: false,\r\n          data: null,\r\n          message: 'M\u00E3 barcode \u0111\u00E3 t\u1ED3n t\u1EA1i'\r\n        }, 400);\r\n      }\r\n    }\r\n\r\n    // Ki\u1EC3m tra category_id c\u00F3 t\u1ED3n t\u1EA1i kh\u00F4ng\r\n    const categoryExists = await c.env.DB.prepare(`\r\n      SELECT id FROM categories WHERE id = ?\r\n    `).bind(productData.category_id).first();\r\n\r\n    if (!categoryExists) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Danh m\u1EE5c kh\u00F4ng t\u1ED3n t\u1EA1i'\r\n      }, 400);\r\n    }\r\n    \r\n    // Th\u00EAm s\u1EA3n ph\u1EA9m m\u1EDBi\r\n    const result = await c.env.DB.prepare(`\r\n      INSERT INTO products (\r\n        name, description, sku, barcode, category_id, \r\n        price, cost_price, tax_rate, stock_quantity, stock_alert_threshold, \r\n        is_active, image_url, created_at, updated_at\r\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))\r\n    `).bind(\r\n      productData.name,\r\n      productData.description || null,\r\n      productData.sku,\r\n      (productData.barcode && productData.barcode.trim() !== '') ? productData.barcode.trim() : null,\r\n      productData.category_id,\r\n      productData.price,\r\n      productData.cost_price,\r\n      productData.tax_rate,\r\n      productData.stock_quantity,\r\n      productData.stock_alert_threshold,\r\n      productData.is_active === false ? 0 : 1, // Default to active\r\n      (productData.image_url && productData.image_url.trim() !== '') ? productData.image_url.trim() : null\r\n    ).run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Failed to insert product');\r\n    }\r\n    \r\n    // L\u1EA5y ID s\u1EA3n ph\u1EA9m m\u1EDBi t\u1EA1o\r\n    const newProductId = result.meta?.last_row_id;\r\n    \r\n    // Ghi log ho\u1EA1t \u0111\u1ED9ng - temporarily disabled due to missing table\r\n    // await c.env.DB.prepare(`\r\n    //   INSERT INTO activity_logs (user_id, action, entity_type, entity_id, details, created_at)\r\n    //   VALUES (?, 'create', 'product', ?, ?, datetime('now'))\r\n    // `).bind(\r\n    //   user.id,\r\n    //   newProductId,\r\n    //   JSON.stringify({\r\n    //     name: productData.name,\r\n    //     sku: productData.sku,\r\n    //     category_id: productData.category_id\r\n    //   })\r\n    // ).run();\r\n    \r\n    // X\u00F3a cache danh s\u00E1ch s\u1EA3n ph\u1EA9m\r\n    await deleteCacheByPrefix(c.env, 'products:list');\r\n    \r\n    // L\u1EA5y th\u00F4ng tin s\u1EA3n ph\u1EA9m v\u1EEBa t\u1EA1o\r\n    const newProduct = await c.env.DB.prepare(`\r\n      SELECT \r\n        p.id, p.name, p.description, p.sku, p.barcode, \r\n        p.category_id, c.name as category_name,\r\n        p.price, p.cost_price, p.tax_rate, \r\n        p.stock_quantity, p.stock_alert_threshold, \r\n        p.is_active, p.image_url, p.created_at, p.updated_at\r\n      FROM products p\r\n      LEFT JOIN categories c ON p.category_id = c.id\r\n      WHERE p.id = ?\r\n    `).bind(newProductId).first();\r\n    \r\n    // Format response\r\n    const productResponse: ProductResponse = {\r\n      id: newProduct.id,\r\n      name: newProduct.name,\r\n      description: newProduct.description,\r\n      sku: newProduct.sku,\r\n      barcode: newProduct.barcode,\r\n      categoryId: newProduct.category_id,\r\n      categoryName: newProduct.category_name,\r\n      price: newProduct.price,\r\n      costPrice: newProduct.cost_price,\r\n      taxRate: newProduct.tax_rate,\r\n      stockQuantity: newProduct.stock_quantity,\r\n      stockAlertThreshold: newProduct.stock_alert_threshold,\r\n      isActive: Boolean(newProduct.is_active),\r\n      imageUrl: newProduct.image_url,\r\n      createdAt: newProduct.created_at,\r\n      updatedAt: newProduct.updated_at\r\n    };\r\n    \r\n    return c.json<ApiResponse<ProductResponse>>({\r\n      success: true,\r\n      data: productResponse,\r\n      message: 'T\u1EA1o s\u1EA3n ph\u1EA9m m\u1EDBi th\u00E0nh c\u00F4ng'\r\n    }, 201);\r\n  } catch (error) {\r\n    console.error('Create product error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi t\u1EA1o s\u1EA3n ph\u1EA9m m\u1EDBi'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// C\u1EADp nh\u1EADt s\u1EA3n ph\u1EA9m - temporarily without auth and validation for debugging\r\napp.put('/:id', async (c) => {\r\n  try {\r\n    const productId = parseInt(c.req.param('id'));\r\n    const productData = await c.req.json();\r\n    const user = { id: 1, username: 'admin' }; // Mock user for debugging\r\n\r\n    console.log('PUT /products/:id - Debug info:', {\r\n      productId,\r\n      productData,\r\n      productDataType: typeof productData,\r\n      productDataKeys: Object.keys(productData || {})\r\n    });\r\n    \r\n    if (isNaN(productId)) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID s\u1EA3n ph\u1EA9m kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n    \r\n    // Ki\u1EC3m tra s\u1EA3n ph\u1EA9m c\u00F3 t\u1ED3n t\u1EA1i kh\u00F4ng\r\n    const existingProduct = await c.env.DB.prepare(`\r\n      SELECT id FROM products WHERE id = ?\r\n    `).bind(productId).first();\r\n    \r\n    if (!existingProduct) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'S\u1EA3n ph\u1EA9m kh\u00F4ng t\u1ED3n t\u1EA1i ho\u1EB7c \u0111\u00E3 b\u1ECB x\u00F3a'\r\n      }, 404);\r\n    }\r\n    \r\n    // Ki\u1EC3m tra SKU \u0111\u00E3 t\u1ED3n t\u1EA1i ch\u01B0a (n\u1EBFu \u0111ang c\u1EADp nh\u1EADt SKU)\r\n    if (productData.sku) {\r\n      const existingSku = await c.env.DB.prepare(`\r\n        SELECT id FROM products WHERE sku = ? AND id != ?\r\n      `).bind(productData.sku, productId).first();\r\n      \r\n      if (existingSku) {\r\n        return c.json<ApiResponse<null>>({\r\n          success: false,\r\n          data: null,\r\n          message: 'M\u00E3 SKU \u0111\u00E3 t\u1ED3n t\u1EA1i'\r\n        }, 400);\r\n      }\r\n    }\r\n    \r\n    // Ki\u1EC3m tra barcode \u0111\u00E3 t\u1ED3n t\u1EA1i ch\u01B0a (n\u1EBFu \u0111ang c\u1EADp nh\u1EADt barcode)\r\n    if (productData.barcode) {\r\n      const existingBarcode = await c.env.DB.prepare(`\r\n        SELECT id FROM products WHERE barcode = ? AND id != ?\r\n      `).bind(productData.barcode, productId).first();\r\n      \r\n      if (existingBarcode) {\r\n        return c.json<ApiResponse<null>>({\r\n          success: false,\r\n          data: null,\r\n          message: 'M\u00E3 barcode \u0111\u00E3 t\u1ED3n t\u1EA1i'\r\n        }, 400);\r\n      }\r\n    }\r\n    \r\n    // T\u1EA1o c\u00E2u query \u0111\u1ED9ng d\u1EF1a tr\u00EAn c\u00E1c field \u0111\u01B0\u1EE3c c\u1EADp nh\u1EADt\r\n    let queryParts = [];\r\n    const queryParams = [];\r\n    \r\n    if (productData.name !== undefined) {\r\n      queryParts.push('name = ?');\r\n      queryParams.push(productData.name);\r\n    }\r\n    \r\n    if (productData.description !== undefined) {\r\n      queryParts.push('description = ?');\r\n      queryParams.push(productData.description);\r\n    }\r\n    \r\n    if (productData.sku !== undefined) {\r\n      queryParts.push('sku = ?');\r\n      queryParams.push(productData.sku);\r\n    }\r\n    \r\n    if (productData.barcode !== undefined) {\r\n      queryParts.push('barcode = ?');\r\n      queryParams.push(productData.barcode);\r\n    }\r\n    \r\n    if (productData.category_id !== undefined) {\r\n      queryParts.push('category_id = ?');\r\n      queryParams.push(productData.category_id);\r\n    }\r\n    \r\n    if (productData.price !== undefined) {\r\n      queryParts.push('price = ?');\r\n      queryParams.push(productData.price);\r\n    }\r\n    \r\n    if (productData.cost_price !== undefined) {\r\n      queryParts.push('cost_price = ?');\r\n      queryParams.push(productData.cost_price);\r\n    }\r\n    \r\n    if (productData.tax_rate !== undefined) {\r\n      queryParts.push('tax_rate = ?');\r\n      queryParams.push(productData.tax_rate);\r\n    }\r\n    \r\n    if (productData.stock_quantity !== undefined) {\r\n      queryParts.push('stock_quantity = ?');\r\n      queryParams.push(productData.stock_quantity);\r\n    }\r\n    \r\n    if (productData.stock_alert_threshold !== undefined) {\r\n      queryParts.push('stock_alert_threshold = ?');\r\n      queryParams.push(productData.stock_alert_threshold);\r\n    }\r\n    \r\n    if (productData.is_active !== undefined) {\r\n      queryParts.push('is_active = ?');\r\n      queryParams.push(productData.is_active ? 1 : 0);\r\n    }\r\n    \r\n    if (productData.image_url !== undefined) {\r\n      queryParts.push('image_url = ?');\r\n      queryParams.push(productData.image_url);\r\n    }\r\n    \r\n    // Th\u00EAm updated_at\r\n    queryParts.push('updated_at = datetime(\\'now\\')');\r\n    \r\n    // N\u1EBFu kh\u00F4ng c\u00F3 field n\u00E0o \u0111\u01B0\u1EE3c c\u1EADp nh\u1EADt\r\n    if (queryParts.length === 1) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Kh\u00F4ng c\u00F3 th\u00F4ng tin n\u00E0o \u0111\u01B0\u1EE3c c\u1EADp nh\u1EADt'\r\n      }, 400);\r\n    }\r\n    \r\n    // T\u1EA1o query v\u00E0 th\u1EF1c hi\u1EC7n c\u1EADp nh\u1EADt\r\n    const updateQuery = `UPDATE products SET ${queryParts.join(', ')} WHERE id = ?`;\r\n    queryParams.push(productId);\r\n    \r\n    const result = await c.env.DB.prepare(updateQuery).bind(...queryParams).run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Failed to update product');\r\n    }\r\n    \r\n    // Ghi log ho\u1EA1t \u0111\u1ED9ng - temporarily disabled due to missing table\r\n    // await c.env.DB.prepare(`\r\n    //   INSERT INTO activity_logs (user_id, action, entity_type, entity_id, details, created_at)\r\n    //   VALUES (?, 'update', 'product', ?, ?, datetime('now'))\r\n    // `).bind(\r\n    //   user.id,\r\n    //   productId,\r\n    //   JSON.stringify(productData)\r\n    // ).run();\r\n    \r\n    // X\u00F3a cache s\u1EA3n ph\u1EA9m n\u00E0y v\u00E0 danh s\u00E1ch s\u1EA3n ph\u1EA9m\r\n    await deleteCache(c.env, createCacheKey('products', productId));\r\n    await deleteCacheByPrefix(c.env, 'products:list');\r\n    \r\n    // L\u1EA5y th\u00F4ng tin s\u1EA3n ph\u1EA9m sau khi c\u1EADp nh\u1EADt\r\n    const updatedProduct = await c.env.DB.prepare(`\r\n      SELECT \r\n        p.id, p.name, p.description, p.sku, p.barcode, \r\n        p.category_id, c.name as category_name,\r\n        p.price, p.cost_price, p.tax_rate, \r\n        p.stock_quantity, p.stock_alert_threshold, \r\n        p.is_active, p.image_url, p.created_at, p.updated_at\r\n      FROM products p\r\n      LEFT JOIN categories c ON p.category_id = c.id\r\n      WHERE p.id = ?\r\n    `).bind(productId).first();\r\n    \r\n    // Format response\r\n    const productResponse: ProductResponse = {\r\n      id: updatedProduct.id,\r\n      name: updatedProduct.name,\r\n      description: updatedProduct.description,\r\n      sku: updatedProduct.sku,\r\n      barcode: updatedProduct.barcode,\r\n      categoryId: updatedProduct.category_id,\r\n      categoryName: updatedProduct.category_name,\r\n      price: updatedProduct.price,\r\n      costPrice: updatedProduct.cost_price,\r\n      taxRate: updatedProduct.tax_rate,\r\n      stockQuantity: updatedProduct.stock_quantity,\r\n      stockAlertThreshold: updatedProduct.stock_alert_threshold,\r\n      isActive: Boolean(updatedProduct.is_active),\r\n      imageUrl: updatedProduct.image_url,\r\n      createdAt: updatedProduct.created_at,\r\n      updatedAt: updatedProduct.updated_at\r\n    };\r\n    \r\n    return c.json<ApiResponse<ProductResponse>>({\r\n      success: true,\r\n      data: productResponse,\r\n      message: 'C\u1EADp nh\u1EADt s\u1EA3n ph\u1EA9m th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Update product error:', error);\r\n    console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: `L\u1ED7i khi c\u1EADp nh\u1EADt s\u1EA3n ph\u1EA9m: ${error instanceof Error ? error.message : 'Unknown error'}`\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// X\u00F3a s\u1EA3n ph\u1EA9m (soft delete) - temporarily without auth for debugging\r\napp.delete('/:id', async (c) => {\r\n  try {\r\n    const productId = parseInt(c.req.param('id'));\r\n    const user = { id: 1, username: 'admin' }; // Mock user for debugging\r\n    \r\n    if (isNaN(productId)) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID s\u1EA3n ph\u1EA9m kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n    \r\n    // Ki\u1EC3m tra s\u1EA3n ph\u1EA9m c\u00F3 t\u1ED3n t\u1EA1i kh\u00F4ng\r\n    const existingProduct = await c.env.DB.prepare(`\r\n      SELECT id, name FROM products WHERE id = ?\r\n    `).bind(productId).first();\r\n    \r\n    if (!existingProduct) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'S\u1EA3n ph\u1EA9m kh\u00F4ng t\u1ED3n t\u1EA1i ho\u1EB7c \u0111\u00E3 b\u1ECB x\u00F3a'\r\n      }, 404);\r\n    }\r\n    \r\n    // Ki\u1EC3m tra s\u1EA3n ph\u1EA9m c\u00F3 \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng trong sale_items kh\u00F4ng\r\n    const usedInSales = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as count FROM sale_items WHERE product_id = ?\r\n    `).bind(productId).first<{ count: number }>();\r\n    \r\n    // N\u1EBFu s\u1EA3n ph\u1EA9m \u0111\u00E3 \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng trong sale_items, ch\u1EC9 soft delete\r\n    const result = await c.env.DB.prepare(`\r\n      UPDATE products SET is_active = 0 WHERE id = ?\r\n    `).bind(productId).run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Failed to delete product');\r\n    }\r\n    \r\n    // Ghi log ho\u1EA1t \u0111\u1ED9ng - temporarily disabled due to missing table\r\n    // await c.env.DB.prepare(`\r\n    //   INSERT INTO activity_logs (user_id, action, entity_type, entity_id, details, created_at)\r\n    //   VALUES (?, 'delete', 'product', ?, ?, datetime('now'))\r\n    // `).bind(\r\n    //   user.id,\r\n    //   productId,\r\n    //   JSON.stringify({\r\n    //     name: existingProduct.name,\r\n    //     permanent: false\r\n    //   })\r\n    // ).run();\r\n    \r\n    // X\u00F3a cache s\u1EA3n ph\u1EA9m n\u00E0y v\u00E0 danh s\u00E1ch s\u1EA3n ph\u1EA9m\r\n    await deleteCache(c.env, createCacheKey('products', productId));\r\n    await deleteCacheByPrefix(c.env, 'products:list');\r\n    \r\n    return c.json<ApiResponse<null>>({\r\n      success: true,\r\n      data: null,\r\n      message: usedInSales && usedInSales.count > 0\r\n        ? 'S\u1EA3n ph\u1EA9m \u0111\u00E3 \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng trong \u0111\u01A1n h\u00E0ng, \u0111\u00E3 chuy\u1EC3n sang tr\u1EA1ng th\u00E1i kh\u00F4ng ho\u1EA1t \u0111\u1ED9ng'\r\n        : 'X\u00F3a s\u1EA3n ph\u1EA9m th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Delete product error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi x\u00F3a s\u1EA3n ph\u1EA9m'\r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport default app; ", "import { Hono } from 'hono';\r\nimport { Env, ApiResponse, PaginatedResult } from '../types';\r\nimport { authenticate } from '../middleware/auth';\r\nimport { validateQuery, validate, getValidated } from '../middleware/validate';\r\nimport { categoryQuerySchema, categoryCreateSchema, categoryUpdateSchema } from '../schemas';\r\n\r\n// T\u1EA1o router\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Types\r\ninterface Category {\r\n  id: number;\r\n  name: string;\r\n  description: string | null;\r\n  is_active: boolean;\r\n  product_count?: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\n// Initialize sample categories if database is empty\r\nasync function initializeSampleCategories(env: Env) {\r\n  try {\r\n    // Check if categories exist\r\n    const count = await env.DB.prepare('SELECT COUNT(*) as count FROM categories').first<{ count: number }>();\r\n\r\n    if (!count || count.count === 0) {\r\n      console.log('Initializing sample categories...');\r\n\r\n      // Insert sample computer hardware categories\r\n      const sampleCategories = [\r\n        { name: 'Linh ki\u1EC7n m\u00E1y t\u00EDnh', description: 'CPU, RAM, VGA, Mainboard, SSD, HDD' },\r\n        { name: 'Thi\u1EBFt b\u1ECB ngo\u1EA1i vi', description: 'B\u00E0n ph\u00EDm, chu\u1ED9t, tai nghe, webcam' },\r\n        { name: 'Laptop & PC', description: 'Laptop, PC \u0111\u1ED3ng b\u1ED9, workstation' },\r\n        { name: 'Ph\u1EE5 ki\u1EC7n', description: 'C\u00E1p, adapter, t\u1EA3n nhi\u1EC7t, case' }\r\n      ];\r\n\r\n      for (const category of sampleCategories) {\r\n        await env.DB.prepare(`\r\n          INSERT INTO categories (name, description, is_active, created_at, updated_at)\r\n          VALUES (?, ?, 1, datetime('now'), datetime('now'))\r\n        `).bind(category.name, category.description).run();\r\n      }\r\n\r\n      console.log('Sample categories initialized successfully');\r\n    }\r\n  } catch (error) {\r\n    console.log('Sample categories initialization skipped:', error);\r\n  }\r\n}\r\n\r\n// Debug endpoint\r\napp.get('/debug', authenticate, async (c) => {\r\n  try {\r\n    const categories = await c.env.DB.prepare(`\r\n      SELECT id, name, description, is_active, created_at, updated_at\r\n      FROM categories\r\n      ORDER BY name\r\n      LIMIT 10\r\n    `).all();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: categories.results,\r\n      message: 'Debug categories'\r\n    });\r\n  } catch (error) {\r\n    console.error('Debug categories error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Debug error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Public endpoint to initialize sample data\r\napp.get('/init-sample', async (c) => {\r\n  try {\r\n    await initializeSampleCategories(c.env);\r\n\r\n    const categories = await c.env.DB.prepare(`\r\n      SELECT id, name, description, is_active, created_at, updated_at\r\n      FROM categories\r\n      ORDER BY name\r\n    `).all();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: categories.results,\r\n      message: 'Sample categories initialized'\r\n    });\r\n  } catch (error) {\r\n    console.error('Init sample categories error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Init error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// GET /categories - L\u1EA5y danh s\u00E1ch danh m\u1EE5c v\u1EDBi pagination v\u00E0 filters (temporarily without auth for debugging)\r\napp.get('/', async (c) => {\r\n  // Initialize sample data if needed\r\n  await initializeSampleCategories(c.env);\r\n\r\n  try {\r\n    // Parse query params manually\r\n    const page = parseInt(c.req.query('page') || '1');\r\n    const limit = parseInt(c.req.query('limit') || '10');\r\n    const search = c.req.query('search') || '';\r\n    const is_active = c.req.query('is_active');\r\n    const sortBy = c.req.query('sortBy') || 'name';\r\n    const sortDirection = c.req.query('sortDirection') || 'asc';\r\n\r\n    const offset = (page - 1) * limit;\r\n\r\n    // Build WHERE conditions\r\n    const conditions: string[] = [];\r\n    const params: any[] = [];\r\n\r\n    if (search && search.trim()) {\r\n      conditions.push('(c.name LIKE ? OR c.description LIKE ?)');\r\n      params.push(`%${search}%`, `%${search}%`);\r\n    }\r\n\r\n    if (is_active !== undefined && is_active !== '') {\r\n      conditions.push('c.is_active = ?');\r\n      params.push(is_active === 'true' ? 1 : 0);\r\n    }\r\n\r\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : '';\r\n\r\n    // Get total count\r\n    const countQuery = `SELECT COUNT(*) as total FROM categories c ${whereClause}`;\r\n    const countResult = await c.env.DB.prepare(countQuery).bind(...params).first<{ total: number }>();\r\n    const total = countResult?.total || 0;\r\n\r\n    // Get categories with product count\r\n    const categoriesQuery = `\r\n      SELECT\r\n        c.id,\r\n        c.name,\r\n        c.description,\r\n        c.is_active,\r\n        c.created_at,\r\n        c.updated_at,\r\n        COUNT(p.id) as product_count\r\n      FROM categories c\r\n      LEFT JOIN products p ON c.id = p.category_id AND p.is_active = 1\r\n      ${whereClause}\r\n      GROUP BY c.id, c.name, c.description, c.is_active, c.created_at, c.updated_at\r\n      ORDER BY c.${sortBy} ${sortDirection}\r\n      LIMIT ? OFFSET ?\r\n    `;\r\n\r\n    const categoriesResult = await c.env.DB.prepare(categoriesQuery)\r\n      .bind(...params, limit, offset)\r\n      .all();\r\n\r\n    const categories: Category[] = (categoriesResult.results || []).map((row: any) => ({\r\n      id: row.id,\r\n      name: row.name,\r\n      description: row.description,\r\n      is_active: Boolean(row.is_active),\r\n      product_count: row.product_count || 0,\r\n      created_at: row.created_at,\r\n      updated_at: row.updated_at,\r\n    }));\r\n\r\n    const totalPages = Math.ceil(total / limit);\r\n\r\n    return c.json<ApiResponse<PaginatedResult<Category>>>({\r\n      success: true,\r\n      data: {\r\n        data: categories,\r\n        pagination: {\r\n          total,\r\n          page,\r\n          limit,\r\n          totalPages,\r\n        },\r\n      },\r\n      message: 'L\u1EA5y danh s\u00E1ch danh m\u1EE5c th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Get categories error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi l\u1EA5y danh s\u00E1ch danh m\u1EE5c'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// POST /categories - T\u1EA1o danh m\u1EE5c m\u1EDBi (temporarily without auth for debugging)\r\napp.post('/', validate(categoryCreateSchema), async (c) => {\r\n  try {\r\n    const categoryData = getValidated<{\r\n      name: string;\r\n      description?: string | null;\r\n      parent_id?: number | null;\r\n      is_active?: boolean;\r\n    }>(c);\r\n\r\n    // Ki\u1EC3m tra t\u00EAn danh m\u1EE5c \u0111\u00E3 t\u1ED3n t\u1EA1i ch\u01B0a\r\n    const existingCategory = await c.env.DB.prepare(\r\n      'SELECT id FROM categories WHERE name = ?'\r\n    ).bind(categoryData.name).first();\r\n\r\n    if (existingCategory) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'T\u00EAn danh m\u1EE5c \u0111\u00E3 t\u1ED3n t\u1EA1i'\r\n      }, 400);\r\n    }\r\n\r\n    // T\u1EA1o danh m\u1EE5c m\u1EDBi\r\n    const result = await c.env.DB.prepare(`\r\n      INSERT INTO categories (name, description, is_active, created_at, updated_at)\r\n      VALUES (?, ?, ?, datetime('now'), datetime('now'))\r\n    `).bind(\r\n      categoryData.name,\r\n      categoryData.description || null,\r\n      categoryData.is_active ? 1 : 0\r\n    ).run();\r\n\r\n    // L\u1EA5y th\u00F4ng tin danh m\u1EE5c v\u1EEBa t\u1EA1o\r\n    const newCategory = await c.env.DB.prepare(`\r\n      SELECT id, name, description, is_active, created_at, updated_at\r\n      FROM categories WHERE id = ?\r\n    `).bind(result.meta.last_row_id).first();\r\n\r\n    return c.json<ApiResponse<Category>>({\r\n      success: true,\r\n      data: {\r\n        id: newCategory!.id as number,\r\n        name: newCategory!.name as string,\r\n        description: newCategory!.description as string | null,\r\n        is_active: Boolean(newCategory!.is_active),\r\n        product_count: 0,\r\n        created_at: newCategory!.created_at as string,\r\n        updated_at: newCategory!.updated_at as string,\r\n      },\r\n      message: 'T\u1EA1o danh m\u1EE5c th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Create category error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi t\u1EA1o danh m\u1EE5c'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// PUT /categories/:id - C\u1EADp nh\u1EADt danh m\u1EE5c (temporarily without auth for debugging)\r\napp.put('/:id', validate(categoryUpdateSchema), async (c) => {\r\n  try {\r\n    const categoryId = parseInt(c.req.param('id'));\r\n    const categoryData = getValidated<{\r\n      name?: string;\r\n      description?: string | null;\r\n      parent_id?: number | null;\r\n      is_active?: boolean;\r\n    }>(c);\r\n\r\n    if (isNaN(categoryId)) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID danh m\u1EE5c kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n\r\n    // Ki\u1EC3m tra danh m\u1EE5c c\u00F3 t\u1ED3n t\u1EA1i kh\u00F4ng\r\n    const existingCategory = await c.env.DB.prepare(\r\n      'SELECT id FROM categories WHERE id = ?'\r\n    ).bind(categoryId).first();\r\n\r\n    if (!existingCategory) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Danh m\u1EE5c kh\u00F4ng t\u1ED3n t\u1EA1i'\r\n      }, 404);\r\n    }\r\n\r\n    // Ki\u1EC3m tra t\u00EAn danh m\u1EE5c \u0111\u00E3 t\u1ED3n t\u1EA1i ch\u01B0a (n\u1EBFu c\u00F3 thay \u0111\u1ED5i t\u00EAn)\r\n    if (categoryData.name) {\r\n      const duplicateName = await c.env.DB.prepare(\r\n        'SELECT id FROM categories WHERE name = ? AND id != ?'\r\n      ).bind(categoryData.name, categoryId).first();\r\n\r\n      if (duplicateName) {\r\n        return c.json<ApiResponse<null>>({\r\n          success: false,\r\n          data: null,\r\n          message: 'T\u00EAn danh m\u1EE5c \u0111\u00E3 t\u1ED3n t\u1EA1i'\r\n        }, 400);\r\n      }\r\n    }\r\n\r\n    // Build update query dynamically\r\n    const updateFields: string[] = [];\r\n    const updateParams: any[] = [];\r\n\r\n    if (categoryData.name !== undefined) {\r\n      updateFields.push('name = ?');\r\n      updateParams.push(categoryData.name);\r\n    }\r\n\r\n    if (categoryData.description !== undefined) {\r\n      updateFields.push('description = ?');\r\n      updateParams.push(categoryData.description);\r\n    }\r\n\r\n    if (categoryData.is_active !== undefined) {\r\n      updateFields.push('is_active = ?');\r\n      updateParams.push(categoryData.is_active ? 1 : 0);\r\n    }\r\n\r\n    updateFields.push('updated_at = datetime(\\'now\\')');\r\n    updateParams.push(categoryId);\r\n\r\n    // C\u1EADp nh\u1EADt danh m\u1EE5c\r\n    await c.env.DB.prepare(`\r\n      UPDATE categories\r\n      SET ${updateFields.join(', ')}\r\n      WHERE id = ?\r\n    `).bind(...updateParams).run();\r\n\r\n    // L\u1EA5y th\u00F4ng tin danh m\u1EE5c sau khi c\u1EADp nh\u1EADt\r\n    const updatedCategory = await c.env.DB.prepare(`\r\n      SELECT\r\n        c.id,\r\n        c.name,\r\n        c.description,\r\n        c.is_active,\r\n        c.created_at,\r\n        c.updated_at,\r\n        COUNT(p.id) as product_count\r\n      FROM categories c\r\n      LEFT JOIN products p ON c.id = p.category_id AND p.is_active = 1\r\n      WHERE c.id = ?\r\n      GROUP BY c.id\r\n    `).bind(categoryId).first();\r\n\r\n    return c.json<ApiResponse<Category>>({\r\n      success: true,\r\n      data: {\r\n        id: updatedCategory!.id as number,\r\n        name: updatedCategory!.name as string,\r\n        description: updatedCategory!.description as string | null,\r\n        is_active: Boolean(updatedCategory!.is_active),\r\n        product_count: updatedCategory!.product_count as number || 0,\r\n        created_at: updatedCategory!.created_at as string,\r\n        updated_at: updatedCategory!.updated_at as string,\r\n      },\r\n      message: 'C\u1EADp nh\u1EADt danh m\u1EE5c th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Update category error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi c\u1EADp nh\u1EADt danh m\u1EE5c'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// DELETE /categories/:id - X\u00F3a danh m\u1EE5c (temporarily without auth for debugging)\r\napp.delete('/:id', async (c) => {\r\n  try {\r\n    const categoryId = parseInt(c.req.param('id'));\r\n\r\n    if (isNaN(categoryId)) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID danh m\u1EE5c kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n\r\n    // Ki\u1EC3m tra danh m\u1EE5c c\u00F3 t\u1ED3n t\u1EA1i kh\u00F4ng\r\n    const existingCategory = await c.env.DB.prepare(\r\n      'SELECT id FROM categories WHERE id = ?'\r\n    ).bind(categoryId).first();\r\n\r\n    if (!existingCategory) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Danh m\u1EE5c kh\u00F4ng t\u1ED3n t\u1EA1i'\r\n      }, 404);\r\n    }\r\n\r\n    // Ki\u1EC3m tra c\u00F3 s\u1EA3n ph\u1EA9m n\u00E0o \u0111ang s\u1EED d\u1EE5ng danh m\u1EE5c n\u00E0y kh\u00F4ng\r\n    const productsInCategory = await c.env.DB.prepare(\r\n      'SELECT COUNT(*) as count FROM products WHERE category_id = ? AND is_active = 1'\r\n    ).bind(categoryId).first<{ count: number }>();\r\n\r\n    if (productsInCategory && productsInCategory.count > 0) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: `Kh\u00F4ng th\u1EC3 x\u00F3a danh m\u1EE5c v\u00EC c\u00F2n ${productsInCategory.count} s\u1EA3n ph\u1EA9m \u0111ang s\u1EED d\u1EE5ng`\r\n      }, 400);\r\n    }\r\n\r\n    // X\u00F3a danh m\u1EE5c (soft delete)\r\n    await c.env.DB.prepare(`\r\n      UPDATE categories\r\n      SET is_active = 0, updated_at = datetime('now')\r\n      WHERE id = ?\r\n    `).bind(categoryId).run();\r\n\r\n    return c.json<ApiResponse<null>>({\r\n      success: true,\r\n      data: null,\r\n      message: 'X\u00F3a danh m\u1EE5c th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Delete category error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi x\u00F3a danh m\u1EE5c'\r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport default app;", "/**\r\n * Sales Management Routes - Simplified\r\n */\r\n\r\nimport { Hono } from 'hono';\r\nimport { authenticate } from '../middleware/auth';\r\nimport { Env, ApiResponse } from '../types';\r\n\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Initialize sales tables if they don't exist\r\nasync function initializeSalesTables(env: Env) {\r\n  try {\r\n    // Check if sales table exists and has correct schema\r\n    const tableInfo = await env.DB.prepare(`\r\n      SELECT name FROM sqlite_master WHERE type='table' AND name='sales'\r\n    `).first();\r\n\r\n    if (!tableInfo) {\r\n      console.log('Creating sales table...');\r\n      // Create sales table with simplified schema\r\n      await env.DB.prepare(`\r\n        CREATE TABLE sales (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          customer_name TEXT,\r\n          customer_phone TEXT,\r\n          customer_email TEXT,\r\n          total_amount DECIMAL(10,2) NOT NULL DEFAULT 0,\r\n          tax_amount DECIMAL(10,2) NOT NULL DEFAULT 0,\r\n          discount_amount DECIMAL(10,2) NOT NULL DEFAULT 0,\r\n          payment_method TEXT NOT NULL DEFAULT 'cash',\r\n          payment_status TEXT NOT NULL DEFAULT 'paid',\r\n          notes TEXT,\r\n          created_at DATETIME NOT NULL DEFAULT (datetime('now')),\r\n          updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\r\n        )\r\n      `).run();\r\n    }\r\n\r\n    // Check if sale_items table exists\r\n    const itemsTableInfo = await env.DB.prepare(`\r\n      SELECT name FROM sqlite_master WHERE type='table' AND name='sale_items'\r\n    `).first();\r\n\r\n    if (!itemsTableInfo) {\r\n      console.log('Creating sale_items table...');\r\n      // Create sale_items table\r\n      await env.DB.prepare(`\r\n        CREATE TABLE sale_items (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          sale_id INTEGER NOT NULL,\r\n          product_id INTEGER NOT NULL,\r\n          quantity INTEGER NOT NULL DEFAULT 1,\r\n          unit_price DECIMAL(10,2) NOT NULL DEFAULT 0,\r\n          total_price DECIMAL(10,2) NOT NULL DEFAULT 0,\r\n          created_at DATETIME NOT NULL DEFAULT (datetime('now')),\r\n          FOREIGN KEY (sale_id) REFERENCES sales(id),\r\n          FOREIGN KEY (product_id) REFERENCES products(id)\r\n        )\r\n      `).run();\r\n    }\r\n\r\n    // Check if inventory_transactions table exists\r\n    const inventoryTableInfo = await env.DB.prepare(`\r\n      SELECT name FROM sqlite_master WHERE type='table' AND name='inventory_transactions'\r\n    `).first();\r\n\r\n    if (!inventoryTableInfo) {\r\n      console.log('Creating inventory_transactions table...');\r\n      // Create inventory_transactions table\r\n      await env.DB.prepare(`\r\n        CREATE TABLE inventory_transactions (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          product_id INTEGER NOT NULL,\r\n          transaction_type TEXT NOT NULL,\r\n          quantity INTEGER NOT NULL,\r\n          reference_number TEXT,\r\n          notes TEXT,\r\n          created_at DATETIME NOT NULL DEFAULT (datetime('now')),\r\n          FOREIGN KEY (product_id) REFERENCES products(id)\r\n        )\r\n      `).run();\r\n    }\r\n\r\n    console.log('Sales tables checked/initialized successfully');\r\n  } catch (error) {\r\n    console.log('Sales tables initialization error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Public endpoint to initialize sales tables\r\napp.get('/init-tables', async (c) => {\r\n  try {\r\n    await initializeSalesTables(c.env);\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: null,\r\n      message: 'Sales tables initialized'\r\n    });\r\n  } catch (error) {\r\n    console.error('Init sales tables error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Init error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Public endpoint to create sample sales data\r\napp.get('/init-sample', async (c) => {\r\n  try {\r\n    await initializeSalesTables(c.env);\r\n\r\n    // Check if sales exist\r\n    const count = await c.env.DB.prepare('SELECT COUNT(*) as count FROM sales').first<{ count: number }>();\r\n\r\n    if (!count || count.count === 0) {\r\n      console.log('Creating sample sales...');\r\n\r\n      // Create sample sales\r\n      const sampleSales = [\r\n        {\r\n          customer_name: 'Nguy\u1EC5n V\u0103n A',\r\n          customer_phone: '0901234567',\r\n          customer_email: 'nguyenvana@email.com',\r\n          total_amount: 5990000,\r\n          tax_amount: 599000,\r\n          discount_amount: 0,\r\n          payment_method: 'cash',\r\n          payment_status: 'paid',\r\n          notes: 'Mua CPU Intel Core i5-13400F'\r\n        },\r\n        {\r\n          customer_name: 'Tr\u1EA7n Th\u1ECB B',\r\n          customer_phone: '0912345678',\r\n          customer_email: 'tranthib@email.com',\r\n          total_amount: 1590000,\r\n          tax_amount: 159000,\r\n          discount_amount: 100000,\r\n          payment_method: 'card',\r\n          payment_status: 'paid',\r\n          notes: 'Mua RAM Kingston Fury 16GB'\r\n        },\r\n        {\r\n          customer_name: 'L\u00EA V\u0103n C',\r\n          customer_phone: '0923456789',\r\n          customer_email: null,\r\n          total_amount: 890000,\r\n          tax_amount: 89000,\r\n          discount_amount: 0,\r\n          payment_method: 'bank_transfer',\r\n          payment_status: 'paid',\r\n          notes: 'Mua b\u00E0n ph\u00EDm c\u01A1'\r\n        }\r\n      ];\r\n\r\n      for (const sale of sampleSales) {\r\n        await c.env.DB.prepare(`\r\n          INSERT INTO sales (\r\n            customer_name, customer_phone, customer_email,\r\n            total_amount, tax_amount, discount_amount,\r\n            payment_method, payment_status, notes,\r\n            created_at, updated_at\r\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))\r\n        `).bind(\r\n          sale.customer_name, sale.customer_phone, sale.customer_email,\r\n          sale.total_amount, sale.tax_amount, sale.discount_amount,\r\n          sale.payment_method, sale.payment_status, sale.notes\r\n        ).run();\r\n      }\r\n\r\n      console.log('Sample sales created successfully');\r\n    }\r\n\r\n    const sales = await c.env.DB.prepare(`\r\n      SELECT id, customer_name, customer_phone, total_amount, payment_method, payment_status, created_at\r\n      FROM sales\r\n      ORDER BY created_at DESC\r\n    `).all();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: sales.results,\r\n      message: 'Sample sales initialized'\r\n    });\r\n  } catch (error) {\r\n    console.error('Init sample sales error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Init error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Check tables endpoint\r\napp.get('/check-tables', async (c) => {\r\n  try {\r\n    const tables = await c.env.DB.prepare(`\r\n      SELECT name FROM sqlite_master WHERE type='table' AND name IN ('sales', 'sale_items')\r\n    `).all();\r\n\r\n    // Check sales table schema\r\n    const salesSchema = await c.env.DB.prepare(`\r\n      PRAGMA table_info(sales)\r\n    `).all();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: {\r\n        tables: tables.results,\r\n        salesSchema: salesSchema.results\r\n      },\r\n      message: 'Tables check'\r\n    });\r\n  } catch (error) {\r\n    console.error('Check tables error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Check error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Simple debug endpoint (no auth)\r\napp.get('/debug', async (c) => {\r\n  try {\r\n    const sales = await c.env.DB.prepare(`\r\n      SELECT id, customer_name, customer_phone, total_amount, payment_method, payment_status, created_at\r\n      FROM sales\r\n      ORDER BY created_at DESC\r\n      LIMIT 10\r\n    `).all();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: sales.results,\r\n      message: 'Debug sales'\r\n    });\r\n  } catch (error) {\r\n    console.error('Debug sales error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Debug error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Test endpoint without auth\r\napp.get('/test', async (c) => {\r\n  try {\r\n    // Initialize tables first\r\n    try {\r\n      await initializeSalesTables(c.env);\r\n    } catch (initError) {\r\n      console.error('Failed to initialize sales tables:', initError);\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'L\u1ED7i kh\u1EDFi t\u1EA1o b\u1EA3ng d\u1EEF li\u1EC7u: ' + (initError instanceof Error ? initError.message : String(initError))\r\n      }, 500);\r\n    }\r\n\r\n    // Simple query\r\n    const sales = await c.env.DB.prepare(`\r\n      SELECT id, customer_name, customer_phone, total_amount, payment_method, payment_status, created_at\r\n      FROM sales\r\n      ORDER BY created_at DESC\r\n      LIMIT 5\r\n    `).all();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: sales.results,\r\n      message: 'Test sales query successful'\r\n    });\r\n  } catch (error) {\r\n    console.error('Test sales error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Test error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n\r\n\r\n// GET /sales - Simplified sales management (temporarily without auth for debugging)\r\napp.get('/', async (c) => {\r\n  try {\r\n    // Initialize tables first\r\n    try {\r\n      await initializeSalesTables(c.env);\r\n    } catch (initError) {\r\n      console.error('Failed to initialize sales tables:', initError);\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'L\u1ED7i kh\u1EDFi t\u1EA1o b\u1EA3ng d\u1EEF li\u1EC7u: ' + (initError instanceof Error ? initError.message : String(initError))\r\n      }, 500);\r\n    }\r\n\r\n    // Parse query params manually\r\n    const page = parseInt(c.req.query('page') || '1');\r\n    const limit = parseInt(c.req.query('limit') || '10');\r\n    const search = c.req.query('search') || '';\r\n    const payment_method = c.req.query('payment_method') || '';\r\n    const payment_status = c.req.query('payment_status') || '';\r\n    const date_from = c.req.query('date_from') || '';\r\n    const date_to = c.req.query('date_to') || '';\r\n\r\n    const offset = (page - 1) * limit;\r\n\r\n    // Build WHERE conditions\r\n    const conditions: string[] = [];\r\n    const params: any[] = [];\r\n\r\n    if (search && search.trim()) {\r\n      conditions.push('(customer_name LIKE ? OR customer_phone LIKE ? OR customer_email LIKE ?)');\r\n      const searchPattern = `%${search}%`;\r\n      params.push(searchPattern, searchPattern, searchPattern);\r\n    }\r\n\r\n    if (payment_method && payment_method.trim()) {\r\n      conditions.push('payment_method = ?');\r\n      params.push(payment_method);\r\n    }\r\n\r\n    if (payment_status && payment_status.trim()) {\r\n      conditions.push('payment_status = ?');\r\n      params.push(payment_status);\r\n    }\r\n\r\n    if (date_from && date_from.trim()) {\r\n      conditions.push('DATE(created_at) >= ?');\r\n      params.push(date_from);\r\n    }\r\n\r\n    if (date_to && date_to.trim()) {\r\n      conditions.push('DATE(created_at) <= ?');\r\n      params.push(date_to);\r\n    }\r\n\r\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : '';\r\n\r\n    // Get total count\r\n    const countQuery = `SELECT COUNT(*) as total FROM sales ${whereClause}`;\r\n    const countResult = await c.env.DB.prepare(countQuery).bind(...params).first<{ total: number }>();\r\n    const total = countResult?.total || 0;\r\n\r\n    // Get sales data\r\n    const salesQuery = `\r\n      SELECT\r\n        id, customer_name, customer_phone, customer_email,\r\n        total_amount, tax_amount, discount_amount,\r\n        payment_method, payment_status, notes,\r\n        created_at, updated_at\r\n      FROM sales\r\n      ${whereClause}\r\n      ORDER BY created_at DESC\r\n      LIMIT ? OFFSET ?\r\n    `;\r\n\r\n    const salesResult = await c.env.DB.prepare(salesQuery)\r\n      .bind(...params, limit, offset)\r\n      .all();\r\n\r\n    const totalPages = Math.ceil(total / limit);\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: {\r\n        data: salesResult.results,\r\n        pagination: {\r\n          page,\r\n          limit,\r\n          total,\r\n          totalPages\r\n        }\r\n      },\r\n      message: 'L\u1EA5y danh s\u00E1ch \u0111\u01A1n h\u00E0ng th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Get sales error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi l\u1EA5y danh s\u00E1ch \u0111\u01A1n h\u00E0ng'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// POST /sales - Simplified sale creation (temporarily without auth for debugging)\r\napp.post('/', async (c) => {\r\n  try {\r\n    const data = await c.req.json();\r\n    const user = { id: 1, username: 'admin' }; // Mock user for debugging\r\n\r\n    // Debug logging\r\n    console.log('Sales POST request data:', JSON.stringify(data, null, 2));\r\n\r\n    // Validate required fields\r\n    if (!data.items || !Array.isArray(data.items) || data.items.length === 0) {\r\n      return c.json<ApiResponse<null>>({\r\n        success: false,\r\n        data: null,\r\n        message: 'Thi\u1EBFu th\u00F4ng tin s\u1EA3n ph\u1EA9m trong \u0111\u01A1n h\u00E0ng'\r\n      }, 400);\r\n    }\r\n\r\n    // Use D1 batch for transaction-like behavior\r\n    const statements = [];\r\n\r\n    try {\r\n      // Validate products and stock\r\n      for (const item of data.items) {\r\n        console.log('Processing item:', JSON.stringify(item, null, 2));\r\n\r\n        // Validate item structure\r\n        if (!item.product_id || !item.quantity || !item.unit_price) {\r\n          return c.json<ApiResponse<null>>({\r\n            success: false,\r\n            data: null,\r\n            message: `Th\u00F4ng tin s\u1EA3n ph\u1EA9m kh\u00F4ng \u0111\u1EA7y \u0111\u1EE7: ${JSON.stringify(item)}`\r\n          }, 400);\r\n        }\r\n\r\n        const product = await c.env.DB.prepare(\r\n          'SELECT id, stock_quantity, price FROM products WHERE id = ? AND is_active = 1'\r\n        ).bind(item.product_id).first<{ id: number; stock_quantity: number; price: number }>();\r\n\r\n        console.log('Product found:', product);\r\n\r\n        if (!product) {\r\n          return c.json<ApiResponse<null>>({\r\n            success: false,\r\n            data: null,\r\n            message: `S\u1EA3n ph\u1EA9m ID ${item.product_id} kh\u00F4ng t\u1ED3n t\u1EA1i ho\u1EB7c kh\u00F4ng ho\u1EA1t \u0111\u1ED9ng`\r\n          }, 400);\r\n        }\r\n\r\n        if (product.stock_quantity < item.quantity) {\r\n          return c.json<ApiResponse<null>>({\r\n            success: false,\r\n            data: null,\r\n            message: `S\u1EA3n ph\u1EA9m ID ${item.product_id} kh\u00F4ng \u0111\u1EE7 h\u00E0ng t\u1ED3n kho`\r\n          }, 400);\r\n        }\r\n      }\r\n\r\n      // Create sale record first to get ID\r\n      const saleResult = await c.env.DB.prepare(`\r\n        INSERT INTO sales (\r\n          customer_name, customer_phone, customer_email,\r\n          total_amount, tax_amount, discount_amount,\r\n          payment_method, payment_status, notes,\r\n          created_at, updated_at\r\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, 'paid', ?, datetime('now'), datetime('now'))\r\n      `).bind(\r\n        data.customer_name || null,\r\n        data.customer_phone || null,\r\n        data.customer_email || null,\r\n        data.total_amount,\r\n        data.tax_amount,\r\n        data.discount_amount,\r\n        data.payment_method,\r\n        data.notes || null\r\n      ).run();\r\n\r\n      const saleId = saleResult.meta.last_row_id as number;\r\n\r\n      // Prepare batch statements for sale items, stock updates, and inventory transactions\r\n      const batchStatements = [];\r\n\r\n      // Create batch statements for sale items, stock updates, and inventory transactions\r\n      for (const item of data.items) {\r\n        // Sale item statement\r\n        batchStatements.push(\r\n          c.env.DB.prepare(`\r\n            INSERT INTO sale_items (\r\n              sale_id, product_id, quantity, unit_price, total_price, created_at\r\n            ) VALUES (?, ?, ?, ?, ?, datetime('now'))\r\n          `).bind(saleId, item.product_id, item.quantity, item.unit_price, item.total_price)\r\n        );\r\n\r\n        // Stock update statement\r\n        batchStatements.push(\r\n          c.env.DB.prepare(\r\n            'UPDATE products SET stock_quantity = stock_quantity - ?, updated_at = datetime(\\'now\\') WHERE id = ?'\r\n          ).bind(item.quantity, item.product_id)\r\n        );\r\n\r\n        // Inventory transaction statement\r\n        batchStatements.push(\r\n          c.env.DB.prepare(`\r\n            INSERT INTO inventory_transactions (\r\n              product_id, transaction_type, quantity, reference_number, notes, created_at\r\n            ) VALUES (?, 'stock_out', ?, ?, ?, datetime('now'))\r\n          `).bind(item.product_id, item.quantity, `SALE-${saleId}`, `B\u00E1n h\u00E0ng - \u0110\u01A1n ${saleId}`)\r\n        );\r\n      }\r\n\r\n      // Execute all statements in batch\r\n      await c.env.DB.batch(batchStatements);\r\n\r\n      return c.json({\r\n        success: true,\r\n        data: { id: saleId, sale_id: saleId },\r\n        message: 'T\u1EA1o \u0111\u01A1n h\u00E0ng th\u00E0nh c\u00F4ng'\r\n      });\r\n    } catch (error) {\r\n      console.error('Transaction error:', error);\r\n      throw error;\r\n    }\r\n  } catch (error) {\r\n    console.error('Create sale error:', error);\r\n    console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: `L\u1ED7i khi t\u1EA1o \u0111\u01A1n h\u00E0ng: ${error instanceof Error ? error.message : 'Unknown error'}`\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// GET /sales/:id - Get order details\r\napp.get('/:id', authenticate, async (c) => {\r\n  try {\r\n    const orderId = parseInt(c.req.param('id'));\r\n\r\n    if (isNaN(orderId)) {\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID \u0111\u01A1n h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n\r\n    // Get order details\r\n    const orderResult = await c.env.DB.prepare(`\r\n      SELECT\r\n        s.id, s.customer_name, s.customer_phone, s.customer_email,\r\n        s.total_amount, s.tax_amount, s.discount_amount,\r\n        s.payment_method, s.payment_status, s.notes,\r\n        s.created_at, s.updated_at\r\n      FROM sales s\r\n      WHERE s.id = ?\r\n    `).bind(orderId).first();\r\n\r\n    if (!orderResult) {\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y \u0111\u01A1n h\u00E0ng'\r\n      }, 404);\r\n    }\r\n\r\n    // Get order items\r\n    const itemsResult = await c.env.DB.prepare(`\r\n      SELECT\r\n        si.id, si.product_id, si.quantity, si.unit_price, si.total_price,\r\n        p.name as product_name, p.sku as product_sku, p.barcode,\r\n        c.name as category_name\r\n      FROM sale_items si\r\n      LEFT JOIN products p ON si.product_id = p.id\r\n      LEFT JOIN categories c ON p.category_id = c.id\r\n      WHERE si.sale_id = ?\r\n      ORDER BY si.id\r\n    `).bind(orderId).all();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: {\r\n        order: orderResult,\r\n        items: itemsResult.results\r\n      },\r\n      message: 'L\u1EA5y chi ti\u1EBFt \u0111\u01A1n h\u00E0ng th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Get order details error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi l\u1EA5y chi ti\u1EBFt \u0111\u01A1n h\u00E0ng'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// PUT /sales/:id/status - Update order status\r\napp.put('/:id/status', authenticate, async (c) => {\r\n  try {\r\n    const orderId = parseInt(c.req.param('id'));\r\n    const data = await c.req.json();\r\n\r\n    if (isNaN(orderId)) {\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID \u0111\u01A1n h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n\r\n    const { payment_status, notes } = data;\r\n\r\n    if (!payment_status || !['paid', 'pending', 'cancelled'].includes(payment_status)) {\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'Tr\u1EA1ng th\u00E1i thanh to\u00E1n kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n\r\n    // Check if order exists\r\n    const existingOrder = await c.env.DB.prepare(\r\n      'SELECT id, payment_status FROM sales WHERE id = ?'\r\n    ).bind(orderId).first();\r\n\r\n    if (!existingOrder) {\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y \u0111\u01A1n h\u00E0ng'\r\n      }, 404);\r\n    }\r\n\r\n    // Update order status\r\n    await c.env.DB.prepare(`\r\n      UPDATE sales\r\n      SET payment_status = ?, notes = ?, updated_at = datetime('now')\r\n      WHERE id = ?\r\n    `).bind(payment_status, notes || null, orderId).run();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: {\r\n        id: orderId,\r\n        old_status: existingOrder.payment_status,\r\n        new_status: payment_status\r\n      },\r\n      message: 'C\u1EADp nh\u1EADt tr\u1EA1ng th\u00E1i \u0111\u01A1n h\u00E0ng th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Update order status error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi c\u1EADp nh\u1EADt tr\u1EA1ng th\u00E1i \u0111\u01A1n h\u00E0ng'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// DELETE /sales/:id - Cancel order\r\napp.delete('/:id', authenticate, async (c) => {\r\n  try {\r\n    const orderId = parseInt(c.req.param('id'));\r\n\r\n    if (isNaN(orderId)) {\r\n      return c.json({\r\n        success: false,\r\n        data: null,\r\n        message: 'ID \u0111\u01A1n h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\r\n      }, 400);\r\n    }\r\n\r\n    // Begin transaction\r\n    await c.env.DB.prepare('BEGIN TRANSACTION').run();\r\n\r\n    try {\r\n      // Check if order exists and can be cancelled\r\n      const existingOrder = await c.env.DB.prepare(\r\n        'SELECT id, payment_status FROM sales WHERE id = ?'\r\n      ).bind(orderId).first<{ id: number; payment_status: string }>();\r\n\r\n      if (!existingOrder) {\r\n        await c.env.DB.prepare('ROLLBACK').run();\r\n        return c.json({\r\n          success: false,\r\n          data: null,\r\n          message: 'Kh\u00F4ng t\u00ECm th\u1EA5y \u0111\u01A1n h\u00E0ng'\r\n        }, 404);\r\n      }\r\n\r\n      if (existingOrder.payment_status === 'paid') {\r\n        await c.env.DB.prepare('ROLLBACK').run();\r\n        return c.json({\r\n          success: false,\r\n          data: null,\r\n          message: 'Kh\u00F4ng th\u1EC3 h\u1EE7y \u0111\u01A1n h\u00E0ng \u0111\u00E3 thanh to\u00E1n'\r\n        }, 400);\r\n      }\r\n\r\n      // Get order items to restore stock\r\n      const orderItems = await c.env.DB.prepare(`\r\n        SELECT product_id, quantity FROM sale_items WHERE sale_id = ?\r\n      `).bind(orderId).all();\r\n\r\n      // Restore stock for each item\r\n      for (const item of orderItems.results as any[]) {\r\n        await c.env.DB.prepare(`\r\n          UPDATE products\r\n          SET stock_quantity = stock_quantity + ?, updated_at = datetime('now')\r\n          WHERE id = ?\r\n        `).bind(item.quantity, item.product_id).run();\r\n\r\n        // Create inventory transaction for stock restoration\r\n        await c.env.DB.prepare(`\r\n          INSERT INTO inventory_transactions (\r\n            product_id, transaction_type, quantity, reference_number, notes, created_at\r\n          ) VALUES (?, 'stock_in', ?, ?, ?, datetime('now'))\r\n        `).bind(\r\n          item.product_id,\r\n          item.quantity,\r\n          `CANCEL-${orderId}`,\r\n          `H\u1EE7y \u0111\u01A1n h\u00E0ng ${orderId} - Ho\u00E0n kho`\r\n        ).run();\r\n      }\r\n\r\n      // Update order status to cancelled\r\n      await c.env.DB.prepare(`\r\n        UPDATE sales\r\n        SET payment_status = 'cancelled', updated_at = datetime('now')\r\n        WHERE id = ?\r\n      `).bind(orderId).run();\r\n\r\n      await c.env.DB.prepare('COMMIT').run();\r\n\r\n      return c.json({\r\n        success: true,\r\n        data: { id: orderId },\r\n        message: 'H\u1EE7y \u0111\u01A1n h\u00E0ng th\u00E0nh c\u00F4ng'\r\n      });\r\n    } catch (error) {\r\n      await c.env.DB.prepare('ROLLBACK').run();\r\n      throw error;\r\n    }\r\n  } catch (error) {\r\n    console.error('Cancel order error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi h\u1EE7y \u0111\u01A1n h\u00E0ng'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// POST /sales/test - Test endpoint to debug POST issues\r\napp.post('/test', async (c) => {\r\n  try {\r\n    const data = await c.req.json();\r\n    console.log('Test POST data received:', JSON.stringify(data, null, 2));\r\n\r\n    return c.json({\r\n      success: true,\r\n      message: 'Test POST successful',\r\n      received_data: data,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  } catch (error) {\r\n    console.error('Test POST error:', error);\r\n    return c.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Unknown error',\r\n      stack: error instanceof Error ? error.stack : 'No stack trace'\r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport default app;", "import { Hono } from 'hono';\r\nimport { Env } from '../types';\r\nimport { authenticate, authorize } from '../middleware/auth';\r\nimport { validate } from '../middleware/validate';\r\nimport { auditLogger } from '../middleware/security';\r\nimport { generateRandomSalt, hashPassword } from '../utils/crypto';\r\nimport { z } from 'zod';\r\nimport { createCacheKey, deleteCacheByPrefix, getOrSetCache } from '../utils/cache';\r\n\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Register a new user - public endpoint\r\nconst registerSchema = z.object({\r\n  username: z.string().min(3),\r\n  email: z.string().email(),\r\n  password: z.string().min(8),\r\n  full_name: z.string(),\r\n  phone: z.string().nullable().optional(),\r\n  role: z.enum(['admin', 'manager', 'cashier', 'inventory']),\r\n  store_id: z.number().int().positive(),\r\n});\r\n\r\napp.post('/register', validate('body', registerSchema), async (c) => {\r\n  const data = c.get('validated_body');\r\n  const db = c.env.DB;\r\n\r\n  try {\r\n    // Check if email already exists\r\n    const existingUser = await db.prepare('SELECT id FROM users WHERE email = ? AND deleted_at IS NULL')\r\n      .bind(data.email)\r\n      .first();\r\n    \r\n    if (existingUser) {\r\n      return c.json({ \r\n        success: false, \r\n        message: 'Email \u0111\u00E3 t\u1ED3n t\u1EA1i trong h\u1EC7 th\u1ED1ng' \r\n      }, 409);\r\n    }\r\n    \r\n    // Generate salt and hash password\r\n    const password_salt = generateRandomSalt();\r\n    const password_hash = await hashPassword(data.password, password_salt);\r\n    \r\n    // Create new user\r\n    const result = await db.prepare(`\r\n      INSERT INTO users (\r\n        username, email, password_hash, password_salt, full_name, phone, role, store_id, is_active, created_at\r\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 1, datetime('now'))\r\n    `)\r\n    .bind(\r\n      data.username,\r\n      data.email, \r\n      password_hash,\r\n      password_salt,\r\n      data.full_name,\r\n      data.phone || null,\r\n      data.role,\r\n      data.store_id\r\n    )\r\n    .run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Database error while creating user');\r\n    }\r\n    \r\n    // Clear user cache\r\n    await deleteCacheByPrefix(c.env.CACHE, 'users:');\r\n    \r\n    // Log the action\r\n    await auditLogger(c, 'user_created', { user_id: result.meta?.last_row_id, email: data.email });\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: '\u0110\u0103ng k\u00FD t\u00E0i kho\u1EA3n th\u00E0nh c\u00F4ng',\r\n      data: { \r\n        id: result.meta?.last_row_id,\r\n        username: data.username,\r\n        email: data.email,\r\n        full_name: data.full_name\r\n      }\r\n    }, 201);\r\n    \r\n  } catch (error) {\r\n    console.error('Error creating user:', error);\r\n    return c.json({ \r\n      success: false, \r\n      message: '\u0110\u00E3 x\u1EA3y ra l\u1ED7i khi t\u1EA1o t\u00E0i kho\u1EA3n. Vui l\u00F2ng th\u1EED l\u1EA1i sau.' \r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Initialize admin account for new installations\r\nconst initAdminSchema = z.object({\r\n  username: z.string().min(3),\r\n  email: z.string().email(),\r\n  password: z.string().min(8),\r\n  full_name: z.string(),\r\n  phone: z.string().nullable().optional(),\r\n  initKey: z.string().optional(),\r\n});\r\n\r\napp.post('/init-admin', validate('body', initAdminSchema), async (c) => {\r\n  const data = c.get('validated_body');\r\n  const db = c.env.DB;\r\n\r\n  try {\r\n    // Check if any users exist\r\n    const existingUsers = await db.prepare('SELECT COUNT(*) as count FROM users WHERE deleted_at IS NULL').first();\r\n    \r\n    if (existingUsers && existingUsers.count > 0) {\r\n      return c.json({ \r\n        success: false, \r\n        message: 'T\u00E0i kho\u1EA3n qu\u1EA3n tr\u1ECB \u0111\u00E3 t\u1ED3n t\u1EA1i' \r\n      }, 403);\r\n    }\r\n    \r\n    // Generate salt and hash password\r\n    const password_salt = generateRandomSalt();\r\n    const password_hash = await hashPassword(data.password, password_salt);\r\n    \r\n    // Create admin user\r\n    const result = await db.prepare(`\r\n      INSERT INTO users (\r\n        username, email, password_hash, password_salt, full_name, phone, role, store_id, is_active, created_at\r\n      ) VALUES (?, ?, ?, ?, ?, ?, 'admin', 1, 1, datetime('now'))\r\n    `)\r\n    .bind(\r\n      data.username,\r\n      data.email, \r\n      password_hash,\r\n      password_salt,\r\n      data.full_name,\r\n      data.phone || null\r\n    )\r\n    .run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Database error while creating admin user');\r\n    }\r\n    \r\n    // Log the action\r\n    await auditLogger(c, 'admin_user_initialized', { user_id: result.meta?.last_row_id, email: data.email });\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: 'T\u1EA1o t\u00E0i kho\u1EA3n qu\u1EA3n tr\u1ECB vi\u00EAn th\u00E0nh c\u00F4ng',\r\n      data: { \r\n        id: result.meta?.last_row_id,\r\n        username: data.username,\r\n        email: data.email,\r\n        full_name: data.full_name,\r\n        role: 'admin'\r\n      }\r\n    }, 201);\r\n    \r\n  } catch (error) {\r\n    console.error('Error creating admin user:', error);\r\n    return c.json({ \r\n      success: false, \r\n      message: '\u0110\u00E3 x\u1EA3y ra l\u1ED7i khi t\u1EA1o t\u00E0i kho\u1EA3n qu\u1EA3n tr\u1ECB vi\u00EAn. Vui l\u00F2ng th\u1EED l\u1EA1i sau.' \r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Direct account creation with secret key (for emergency use)\r\nconst directRegisterSchema = z.object({\r\n  username: z.string().min(3),\r\n  email: z.string().email(),\r\n  password: z.string().min(8),\r\n  full_name: z.string(),\r\n  phone: z.string().nullable().optional(),\r\n  role: z.enum(['admin', 'manager', 'cashier', 'inventory']),\r\n  store_id: z.number().int().positive().optional().default(1),\r\n  secretKey: z.string()\r\n});\r\n\r\napp.post('/direct-register', validate('body', directRegisterSchema), async (c) => {\r\n  const data = c.get('validated_body');\r\n  \r\n  // Verify secret key (this should be a strong, secure key)\r\n  if (data.secretKey !== 'create_admin_init_key_2024') {\r\n    return c.json({ \r\n      success: false, \r\n      message: 'Kh\u00F4ng c\u00F3 quy\u1EC1n truy c\u1EADp' \r\n    }, 403);\r\n  }\r\n  \r\n  const db = c.env.DB;\r\n\r\n  try {\r\n    // Check if email already exists\r\n    const existingUser = await db.prepare('SELECT id FROM users WHERE email = ? AND deleted_at IS NULL')\r\n      .bind(data.email)\r\n      .first();\r\n    \r\n    if (existingUser) {\r\n      return c.json({ \r\n        success: false, \r\n        message: 'Email \u0111\u00E3 t\u1ED3n t\u1EA1i trong h\u1EC7 th\u1ED1ng' \r\n      }, 409);\r\n    }\r\n    \r\n    // Generate salt and hash password\r\n    const password_salt = generateRandomSalt();\r\n    const password_hash = await hashPassword(data.password, password_salt);\r\n    \r\n    // Create new user\r\n    const result = await db.prepare(`\r\n      INSERT INTO users (\r\n        username, email, password_hash, password_salt, full_name, phone, role, store_id, is_active, created_at\r\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 1, datetime('now'))\r\n    `)\r\n    .bind(\r\n      data.username,\r\n      data.email, \r\n      password_hash,\r\n      password_salt,\r\n      data.full_name,\r\n      data.phone || null,\r\n      data.role,\r\n      data.store_id\r\n    )\r\n    .run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Database error while creating user');\r\n    }\r\n    \r\n    // Clear user cache\r\n    await deleteCacheByPrefix(c.env.CACHE, 'users:');\r\n    \r\n    // Log the action\r\n    await auditLogger(c, 'user_created_direct', { user_id: result.meta?.last_row_id, email: data.email });\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: 'T\u1EA1o t\u00E0i kho\u1EA3n th\u00E0nh c\u00F4ng',\r\n      data: { \r\n        id: result.meta?.last_row_id,\r\n        username: data.username,\r\n        email: data.email,\r\n        full_name: data.full_name,\r\n        role: data.role\r\n      }\r\n    }, 201);\r\n    \r\n  } catch (error) {\r\n    console.error('Error creating user directly:', error);\r\n    return c.json({ \r\n      success: false, \r\n      message: '\u0110\u00E3 x\u1EA3y ra l\u1ED7i khi t\u1EA1o t\u00E0i kho\u1EA3n. Vui l\u00F2ng th\u1EED l\u1EA1i sau.' \r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Protected routes below this point\r\napp.use('/*', authenticate);\r\n\r\napp.get('/', authorize(['admin']), async (c) => {\r\n  const page = parseInt(c.req.query('page') || '1');\r\n  const limit = parseInt(c.req.query('limit') || '10');\r\n  const search = c.req.query('search') || '';\r\n  const offset = (page - 1) * limit;\r\n\r\n  const cacheKey = createCacheKey('users', `list:${page}:${limit}:${search}`);\r\n\r\n  try {\r\n    const result = await getOrSetCache(c.env.CACHE, cacheKey, async () => {\r\n      let query = `SELECT id, username, email, full_name, phone, role, store_id, is_active FROM users WHERE deleted_at IS NULL`;\r\n      let countQuery = `SELECT COUNT(*) as total FROM users WHERE deleted_at IS NULL`;\r\n      const params = [];\r\n\r\n      if (search) {\r\n        query += ` AND (username LIKE ? OR email LIKE ? OR full_name LIKE ?)`;\r\n        countQuery += ` AND (username LIKE ? OR email LIKE ? OR full_name LIKE ?)`;\r\n        const searchParam = `%${search}%`;\r\n        params.push(searchParam, searchParam, searchParam);\r\n      }\r\n\r\n      query += ` ORDER BY id DESC LIMIT ? OFFSET ?`;\r\n      params.push(limit, offset);\r\n\r\n      const users = await c.env.DB.prepare(query).bind(...params).all();\r\n      const countResult = await c.env.DB.prepare(countQuery).bind(...params.slice(0, -2)).first();\r\n\r\n      return {\r\n        items: users.results,\r\n        total: countResult ? countResult.total : 0,\r\n        page,\r\n        limit,\r\n      };\r\n    });\r\n\r\n    return c.json({\r\n      success: true,\r\n      message: 'Danh s\u00E1ch ng\u01B0\u1EDDi d\u00F9ng',\r\n      data: result,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching users:', error);\r\n    return c.json({ \r\n      success: false, \r\n      message: '\u0110\u00E3 x\u1EA3y ra l\u1ED7i khi truy v\u1EA5n danh s\u00E1ch ng\u01B0\u1EDDi d\u00F9ng' \r\n    }, 500);\r\n  }\r\n});\r\n\r\napp.get('/:id', authorize(['admin']), async (c) => {\r\n  const id = c.req.param('id');\r\n  const cacheKey = createCacheKey('users', `detail:${id}`);\r\n\r\n  try {\r\n    const result = await getOrSetCache(c.env.CACHE, cacheKey, async () => {\r\n      const user = await c.env.DB.prepare(`\r\n        SELECT id, username, email, full_name, phone, role, store_id, is_active, created_at, updated_at\r\n        FROM users WHERE id = ? AND deleted_at IS NULL\r\n      `).bind(id).first();\r\n\r\n      if (!user) {\r\n        throw new Error('NOT_FOUND');\r\n      }\r\n\r\n      return user;\r\n    });\r\n\r\n    return c.json({\r\n      success: true,\r\n      message: 'Th\u00F4ng tin ng\u01B0\u1EDDi d\u00F9ng',\r\n      data: result,\r\n    });\r\n  } catch (error) {\r\n    if (error.message === 'NOT_FOUND') {\r\n      return c.json({\r\n        success: false,\r\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y ng\u01B0\u1EDDi d\u00F9ng',\r\n      }, 404);\r\n    }\r\n\r\n    return c.json({\r\n      success: false,\r\n      message: '\u0110\u00E3 x\u1EA3y ra l\u1ED7i khi truy v\u1EA5n th\u00F4ng tin ng\u01B0\u1EDDi d\u00F9ng',\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// More routes (PUT, DELETE) would go here...\r\n\r\nexport default app; ", "import { Hono } from 'hono';\r\nimport { Env, ApiResponse, DashboardStats } from '../types';\r\nimport { authenticate, authorize } from '../middleware/auth';\r\n\r\n// T\u1EA1o router\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Helper function to get date ranges\r\nconst getDateRanges = () => {\r\n  const now = new Date();\r\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n  const yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n  const weekStart = new Date(today);\r\n  weekStart.setDate(today.getDate() - 6); // Last 7 days including today\r\n\r\n  const lastWeekStart = new Date(weekStart);\r\n  lastWeekStart.setDate(lastWeekStart.getDate() - 7);\r\n  const lastWeekEnd = new Date(weekStart);\r\n  lastWeekEnd.setDate(lastWeekEnd.getDate() - 1);\r\n\r\n  return {\r\n    today: today.toISOString().split('T')[0],\r\n    yesterday: yesterday.toISOString().split('T')[0],\r\n    weekStart: weekStart.toISOString().split('T')[0],\r\n    lastWeekStart: lastWeekStart.toISOString().split('T')[0],\r\n    lastWeekEnd: lastWeekEnd.toISOString().split('T')[0]\r\n  };\r\n};\r\n\r\n// Dashboard statistics endpoint with REAL D1 data (temporarily without auth for debugging)\r\napp.get('/dashboard', async (c) => {\r\n  try {\r\n    const dates = getDateRanges();\r\n\r\n    // Get today's sales\r\n    const todaySalesResult = await c.env.DB.prepare(`\r\n      SELECT COALESCE(SUM(total_amount), 0) as total, COUNT(*) as count\r\n      FROM sales\r\n      WHERE DATE(created_at) = ? AND payment_status = 'paid'\r\n    `).bind(dates.today).first();\r\n\r\n    // Get yesterday's sales for trend calculation\r\n    const yesterdaySalesResult = await c.env.DB.prepare(`\r\n      SELECT COALESCE(SUM(total_amount), 0) as total\r\n      FROM sales\r\n      WHERE DATE(created_at) = ? AND payment_status = 'paid'\r\n    `).bind(dates.yesterday).first();\r\n\r\n    // Get week's sales\r\n    const weekSalesResult = await c.env.DB.prepare(`\r\n      SELECT COALESCE(SUM(total_amount), 0) as total, COUNT(*) as count\r\n      FROM sales\r\n      WHERE DATE(created_at) >= ? AND payment_status = 'paid'\r\n    `).bind(dates.weekStart).first();\r\n\r\n    // Get product counts\r\n    const productCountResult = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as total FROM products WHERE is_active = 1\r\n    `).first();\r\n\r\n    // Get category counts\r\n    const categoryCountResult = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as total FROM categories WHERE is_active = 1\r\n    `).first();\r\n\r\n    // Get customer counts\r\n    const customerCountResult = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as total FROM customers\r\n    `).first();\r\n\r\n    // Get low stock products count\r\n    const lowStockResult = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as total\r\n      FROM products\r\n      WHERE is_active = 1 AND stock_quantity <= stock_alert_threshold\r\n    `).first();\r\n\r\n    // Get pending orders count\r\n    const pendingOrdersResult = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as total\r\n      FROM sales\r\n      WHERE payment_status = 'pending'\r\n    `).first();\r\n\r\n    // Get sales chart data (last 7 days)\r\n    const salesChartResult = await c.env.DB.prepare(`\r\n      SELECT\r\n        DATE(created_at) as date,\r\n        COALESCE(SUM(total_amount), 0) as sales\r\n      FROM sales\r\n      WHERE DATE(created_at) >= ? AND payment_status = 'paid'\r\n      GROUP BY DATE(created_at)\r\n      ORDER BY DATE(created_at)\r\n    `).bind(dates.weekStart).all();\r\n\r\n    // Get top products (using actual schema)\r\n    const topProductsResult = await c.env.DB.prepare(`\r\n      SELECT\r\n        p.id,\r\n        p.name,\r\n        COALESCE(SUM(si.quantity), 0) as quantity,\r\n        COALESCE(SUM(si.total_price), 0) as total\r\n      FROM products p\r\n      LEFT JOIN sale_items si ON p.id = si.product_id\r\n      LEFT JOIN sales s ON si.sale_id = s.id\r\n      WHERE s.payment_status = 'paid' AND DATE(s.created_at) >= ?\r\n      GROUP BY p.id, p.name\r\n      ORDER BY quantity DESC\r\n      LIMIT 5\r\n    `).bind(dates.weekStart).all();\r\n\r\n    // Get sales by category (using actual schema)\r\n    const salesByCategoryResult = await c.env.DB.prepare(`\r\n      SELECT\r\n        c.name,\r\n        COALESCE(SUM(si.total_price), 0) as value\r\n      FROM categories c\r\n      LEFT JOIN products p ON c.id = p.category_id\r\n      LEFT JOIN sale_items si ON p.id = si.product_id\r\n      LEFT JOIN sales s ON si.sale_id = s.id\r\n      WHERE s.payment_status = 'paid' AND DATE(s.created_at) >= ?\r\n      GROUP BY c.id, c.name\r\n      HAVING value > 0\r\n      ORDER BY value DESC\r\n    `).bind(dates.weekStart).all();\r\n\r\n    // Calculate trend percentage\r\n    const todaySales = Number(todaySalesResult?.total || 0);\r\n    const yesterdaySales = Number(yesterdaySalesResult?.total || 0);\r\n    const trendPercent = yesterdaySales > 0\r\n      ? Math.round(((todaySales - yesterdaySales) / yesterdaySales) * 100 * 10) / 10\r\n      : 0;\r\n\r\n    // Format sales chart data\r\n    const salesChart = [];\r\n    const chartData = salesChartResult?.results || [];\r\n\r\n    // Generate last 7 days including today\r\n    for (let i = 6; i >= 0; i--) {\r\n      const date = new Date();\r\n      date.setDate(date.getDate() - i);\r\n      const dateStr = date.toISOString().split('T')[0];\r\n      const dayStr = date.toLocaleDateString('vi-VN', { day: '2-digit', month: '2-digit' });\r\n\r\n      const dayData = chartData.find((item: any) => item.date === dateStr);\r\n      salesChart.push({\r\n        day: dayStr,\r\n        sales: Number(dayData?.sales || 0)\r\n      });\r\n    }\r\n\r\n    // Build dashboard stats response\r\n    const dashboardStats: DashboardStats = {\r\n      todaySales,\r\n      weekSales: Number(weekSalesResult?.total || 0),\r\n      todayOrders: Number(todaySalesResult?.count || 0),\r\n      weekOrders: Number(weekSalesResult?.count || 0),\r\n      lowStockCount: Number(lowStockResult?.total || 0),\r\n      productCount: Number(productCountResult?.total || 0),\r\n      categoryCount: Number(categoryCountResult?.total || 0),\r\n      trendPercent,\r\n      pendingOrders: Number(pendingOrdersResult?.total || 0),\r\n      customerCount: Number(customerCountResult?.total || 0),\r\n      salesChart,\r\n      topProducts: (topProductsResult?.results || []).map((item: any) => ({\r\n        id: item.id,\r\n        name: item.name,\r\n        quantity: Number(item.quantity || 0),\r\n        total: Number(item.total || 0)\r\n      })),\r\n      salesByCategory: (salesByCategoryResult?.results || []).map((item: any) => ({\r\n        name: item.name,\r\n        value: Number(item.value || 0)\r\n      }))\r\n    };\r\n\r\n    return c.json<ApiResponse<DashboardStats>>({\r\n      success: true,\r\n      data: dashboardStats,\r\n      message: 'Dashboard statistics retrieved successfully'\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Dashboard stats error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'Error retrieving dashboard statistics: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Test endpoint for debugging\r\napp.get('/test', async (c) => {\r\n  try {\r\n    // Simple test query\r\n    const salesCount = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as count FROM sales\r\n    `).first();\r\n\r\n    const productsCount = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as count FROM products\r\n    `).first();\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: {\r\n        salesCount: salesCount?.count || 0,\r\n        productsCount: productsCount?.count || 0\r\n      },\r\n      message: 'Reports test successful'\r\n    });\r\n  } catch (error) {\r\n    console.error('Reports test error:', error);\r\n    return c.json({\r\n      success: false,\r\n      data: null,\r\n      message: 'Reports test error: ' + (error instanceof Error ? error.message : String(error))\r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport default app;", "import { Hono } from 'hono';\r\nimport { Env, ApiResponse } from '../types';\r\nimport { authenticate, authorize } from '../middleware/auth';\r\n\r\n// T\u1EA1o router\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// API endpoints\r\napp.get('/', authenticate, async (c) => {\r\n  try {\r\n    // L\u1EA5y settings t\u1EEB DB\r\n    const settingsResult = await c.env.DB.prepare(`\r\n      SELECT key, value, type, category, description\r\n      FROM settings\r\n      WHERE is_public = 1\r\n      ORDER BY category, key\r\n    `).all();\r\n    \r\n    // Format response\r\n    const settings: Record<string, any> = {};\r\n    \r\n    // Nh\u00F3m settings theo category\r\n    for (const row of settingsResult.results as any[]) {\r\n      const { key, value, type } = row;\r\n      \r\n      // Convert value d\u1EF1a tr\u00EAn type\r\n      let convertedValue: any = value;\r\n      \r\n      if (type === 'number') {\r\n        convertedValue = parseFloat(value);\r\n      } else if (type === 'boolean') {\r\n        convertedValue = value === 'true' || value === '1';\r\n      } else if (type === 'json') {\r\n        try {\r\n          convertedValue = JSON.parse(value);\r\n        } catch (error) {\r\n          console.error(`Invalid JSON in setting ${key}:`, error);\r\n          convertedValue = null;\r\n        }\r\n      }\r\n      \r\n      settings[key] = convertedValue;\r\n    }\r\n    \r\n    return c.json<ApiResponse<Record<string, any>>>({\r\n      success: true,\r\n      data: settings,\r\n      message: 'L\u1EA5y c\u00E0i \u0111\u1EB7t th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Get settings error:', error);\r\n    return c.json<ApiResponse<null>>({\r\n      success: false,\r\n      data: null,\r\n      message: 'L\u1ED7i khi l\u1EA5y c\u00E0i \u0111\u1EB7t'\r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport default app; ", "import { Hono } from 'hono';\r\nimport { Env } from '../types';\r\nimport { authenticate, authorize } from '../middleware/auth';\r\nimport { validate } from '../middleware/validate';\r\nimport { z } from 'zod';\r\nimport { createCacheKey, getOrSetCache, deleteCacheByPrefix } from '../utils/cache';\r\n\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Public endpoint to get all stores\r\napp.get('/', async (c) => {\r\n  const cacheKey = createCacheKey('stores', 'list');\r\n  \r\n  try {\r\n    const result = await getOrSetCache(c.env.CACHE, cacheKey, async () => {\r\n      const stores = await c.env.DB.prepare(`\r\n        SELECT id, name, address, phone, email, is_active, created_at, updated_at\r\n        FROM stores \r\n        WHERE deleted_at IS NULL\r\n        ORDER BY id ASC\r\n      `).all();\r\n      \r\n      return stores.results;\r\n    }, 3600); // Cache for 1 hour\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: 'Danh s\u00E1ch c\u1EEDa h\u00E0ng',\r\n      data: result\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching stores:', error);\r\n    return c.json({\r\n      success: false,\r\n      message: 'Kh\u00F4ng th\u1EC3 l\u1EA5y danh s\u00E1ch c\u1EEDa h\u00E0ng',\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Get store by ID\r\napp.get('/:id', authenticate, async (c) => {\r\n  const id = c.req.param('id');\r\n  const cacheKey = createCacheKey('stores', `detail:${id}`);\r\n  \r\n  try {\r\n    const result = await getOrSetCache(c.env.CACHE, cacheKey, async () => {\r\n      const store = await c.env.DB.prepare(`\r\n        SELECT id, name, address, phone, email, is_active, created_at, updated_at\r\n        FROM stores \r\n        WHERE id = ? AND deleted_at IS NULL\r\n      `).bind(id).first();\r\n      \r\n      if (!store) {\r\n        throw new Error('NOT_FOUND');\r\n      }\r\n      \r\n      return store;\r\n    });\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: 'Th\u00F4ng tin c\u1EEDa h\u00E0ng',\r\n      data: result\r\n    });\r\n  } catch (error) {\r\n    if (error instanceof Error && error.message === 'NOT_FOUND') {\r\n      return c.json({\r\n        success: false,\r\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y c\u1EEDa h\u00E0ng',\r\n      }, 404);\r\n    }\r\n    \r\n    return c.json({\r\n      success: false,\r\n      message: 'Kh\u00F4ng th\u1EC3 l\u1EA5y th\u00F4ng tin c\u1EEDa h\u00E0ng',\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Create schema for store creation and update\r\nconst storeSchema = z.object({\r\n  name: z.string().min(2, 'T\u00EAn c\u1EEDa h\u00E0ng ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 2 k\u00FD t\u1EF1'),\r\n  address: z.string().min(5, '\u0110\u1ECBa ch\u1EC9 ph\u1EA3i c\u00F3 \u00EDt nh\u1EA5t 5 k\u00FD t\u1EF1').optional(),\r\n  phone: z.string().min(10, 'S\u1ED1 \u0111i\u1EC7n tho\u1EA1i kh\u00F4ng h\u1EE3p l\u1EC7').optional(),\r\n  email: z.string().email('Email kh\u00F4ng h\u1EE3p l\u1EC7').optional(),\r\n  is_active: z.boolean().optional().default(true)\r\n});\r\n\r\n// Create new store\r\napp.post('/', authenticate, authorize(['admin']), validate('body', storeSchema), async (c) => {\r\n  const data = c.get('validated_body');\r\n  \r\n  try {\r\n    const result = await c.env.DB.prepare(`\r\n      INSERT INTO stores (name, address, phone, email, is_active, created_at)\r\n      VALUES (?, ?, ?, ?, ?, datetime('now'))\r\n    `).bind(\r\n      data.name,\r\n      data.address || null,\r\n      data.phone || null,\r\n      data.email || null,\r\n      data.is_active\r\n    ).run();\r\n    \r\n    // Clear cache\r\n    await deleteCacheByPrefix(c.env.CACHE, 'stores:');\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: 'T\u1EA1o c\u1EEDa h\u00E0ng th\u00E0nh c\u00F4ng',\r\n      data: {\r\n        id: result.meta?.last_row_id,\r\n        ...data\r\n      }\r\n    }, 201);\r\n  } catch (error) {\r\n    console.error('Error creating store:', error);\r\n    return c.json({\r\n      success: false,\r\n      message: 'Kh\u00F4ng th\u1EC3 t\u1EA1o c\u1EEDa h\u00E0ng',\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Update store\r\napp.put('/:id', authenticate, authorize(['admin']), validate('body', storeSchema), async (c) => {\r\n  const id = c.req.param('id');\r\n  const data = c.get('validated_body');\r\n  \r\n  try {\r\n    // Check if store exists\r\n    const existingStore = await c.env.DB.prepare(`\r\n      SELECT id FROM stores WHERE id = ? AND deleted_at IS NULL\r\n    `).bind(id).first();\r\n    \r\n    if (!existingStore) {\r\n      return c.json({\r\n        success: false,\r\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y c\u1EEDa h\u00E0ng',\r\n      }, 404);\r\n    }\r\n    \r\n    await c.env.DB.prepare(`\r\n      UPDATE stores\r\n      SET name = ?, address = ?, phone = ?, email = ?, is_active = ?, updated_at = datetime('now')\r\n      WHERE id = ?\r\n    `).bind(\r\n      data.name,\r\n      data.address || null,\r\n      data.phone || null,\r\n      data.email || null,\r\n      data.is_active,\r\n      id\r\n    ).run();\r\n    \r\n    // Clear cache\r\n    await deleteCacheByPrefix(c.env.CACHE, 'stores:');\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: 'C\u1EADp nh\u1EADt c\u1EEDa h\u00E0ng th\u00E0nh c\u00F4ng',\r\n      data: {\r\n        id: Number(id),\r\n        ...data\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error updating store:', error);\r\n    return c.json({\r\n      success: false,\r\n      message: 'Kh\u00F4ng th\u1EC3 c\u1EADp nh\u1EADt c\u1EEDa h\u00E0ng',\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Delete store (soft delete)\r\napp.delete('/:id', authenticate, authorize(['admin']), async (c) => {\r\n  const id = c.req.param('id');\r\n  \r\n  try {\r\n    // Check if store exists\r\n    const existingStore = await c.env.DB.prepare(`\r\n      SELECT id FROM stores WHERE id = ? AND deleted_at IS NULL\r\n    `).bind(id).first();\r\n    \r\n    if (!existingStore) {\r\n      return c.json({\r\n        success: false,\r\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y c\u1EEDa h\u00E0ng',\r\n      }, 404);\r\n    }\r\n    \r\n    // Don't allow deleting the last active store\r\n    const activeStoresCount = await c.env.DB.prepare(`\r\n      SELECT COUNT(*) as count FROM stores \r\n      WHERE is_active = 1 AND deleted_at IS NULL\r\n    `).first();\r\n    \r\n    if (activeStoresCount && activeStoresCount.count <= 1) {\r\n      return c.json({\r\n        success: false,\r\n        message: 'Kh\u00F4ng th\u1EC3 x\u00F3a c\u1EEDa h\u00E0ng cu\u1ED1i c\u00F9ng',\r\n      }, 400);\r\n    }\r\n    \r\n    await c.env.DB.prepare(`\r\n      UPDATE stores\r\n      SET deleted_at = datetime('now')\r\n      WHERE id = ?\r\n    `).bind(id).run();\r\n    \r\n    // Clear cache\r\n    await deleteCacheByPrefix(c.env.CACHE, 'stores:');\r\n    \r\n    return c.json({\r\n      success: true,\r\n      message: 'X\u00F3a c\u1EEDa h\u00E0ng th\u00E0nh c\u00F4ng'\r\n    });\r\n  } catch (error) {\r\n    console.error('Error deleting store:', error);\r\n    return c.json({\r\n      success: false,\r\n      message: 'Kh\u00F4ng th\u1EC3 x\u00F3a c\u1EEDa h\u00E0ng',\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport default app; ", "/**\n * Inventory Management Routes - Simplified\n * \n * Qu\u1EA3n l\u00FD kho h\u00E0ng cho ComputerPOS Pro\n * Tu\u00E2n th\u1EE7 100% rules.md - Real D1 database integration\n */\n\nimport { Hono } from 'hono';\nimport { authenticate } from '../middleware/auth';\nimport { Env, ApiResponse } from '../types';\n\n// Inventory Management Routes\nconst app = new Hono<{ Bindings: Env }>();\n\n// Debug endpoint\napp.get('/debug', authenticate, async (c) => {\n  try {\n    const transactions = await c.env.DB.prepare(`\n      SELECT \n        it.id, it.product_id, it.transaction_type, it.quantity, it.cost_price,\n        it.reference_number, it.supplier_name, it.notes, it.created_at,\n        p.name as product_name, p.sku as product_sku\n      FROM inventory_transactions it\n      LEFT JOIN products p ON it.product_id = p.id\n      ORDER BY it.created_at DESC\n      LIMIT 10\n    `).all();\n\n    return c.json({\n      success: true,\n      data: transactions.results,\n      message: 'Debug inventory transactions'\n    });\n  } catch (error) {\n    console.error('Debug inventory error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Debug error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// GET /inventory/transactions - Inventory transaction history\napp.get('/transactions', authenticate, async (c) => {\n  try {\n    // Parse query params manually\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '20');\n    const search = c.req.query('search') || '';\n    const transaction_type = c.req.query('transaction_type') || '';\n    const product_id = c.req.query('product_id') || '';\n    const date_from = c.req.query('date_from') || '';\n    const date_to = c.req.query('date_to') || '';\n    \n    const offset = (page - 1) * limit;\n\n    // Build WHERE conditions\n    const conditions: string[] = [];\n    const params: any[] = [];\n\n    if (search && search.trim()) {\n      conditions.push('(p.name LIKE ? OR p.sku LIKE ? OR it.reference_number LIKE ? OR it.supplier_name LIKE ?)');\n      params.push(`%${search}%`, `%${search}%`, `%${search}%`, `%${search}%`);\n    }\n\n    if (transaction_type && transaction_type.trim()) {\n      conditions.push('it.transaction_type = ?');\n      params.push(transaction_type);\n    }\n\n    if (product_id && product_id.trim()) {\n      conditions.push('it.product_id = ?');\n      params.push(parseInt(product_id));\n    }\n\n    if (date_from && date_from.trim()) {\n      conditions.push('DATE(it.created_at) >= ?');\n      params.push(date_from);\n    }\n\n    if (date_to && date_to.trim()) {\n      conditions.push('DATE(it.created_at) <= ?');\n      params.push(date_to);\n    }\n\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : '';\n\n    // Get total count\n    const countQuery = `\n      SELECT COUNT(*) as total \n      FROM inventory_transactions it\n      LEFT JOIN products p ON it.product_id = p.id\n      ${whereClause}\n    `;\n    const countResult = await c.env.DB.prepare(countQuery).bind(...params).first<{ total: number }>();\n    const total = countResult?.total || 0;\n\n    // Get transactions\n    const transactionsQuery = `\n      SELECT \n        it.id, it.product_id, it.transaction_type, it.quantity, it.cost_price,\n        it.reference_number, it.supplier_name, it.from_store_id, it.to_store_id,\n        it.notes, it.created_at,\n        p.name as product_name, p.sku as product_sku, p.stock_quantity,\n        c.name as category_name\n      FROM inventory_transactions it\n      LEFT JOIN products p ON it.product_id = p.id\n      LEFT JOIN categories c ON p.category_id = c.id\n      ${whereClause}\n      ORDER BY it.created_at DESC\n      LIMIT ? OFFSET ?\n    `;\n\n    const transactionsResult = await c.env.DB.prepare(transactionsQuery)\n      .bind(...params, limit, offset)\n      .all();\n\n    const totalPages = Math.ceil(total / limit);\n\n    return c.json({\n      success: true,\n      data: {\n        data: transactionsResult.results,\n        pagination: {\n          page,\n          limit,\n          total,\n          totalPages\n        }\n      },\n      message: 'L\u1EA5y l\u1ECBch s\u1EED giao d\u1ECBch kho th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Get inventory transactions error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi l\u1EA5y l\u1ECBch s\u1EED giao d\u1ECBch kho'\n    }, 500);\n  }\n});\n\n// POST /inventory/stock-in-test - Test endpoint\napp.post('/stock-in-test', async (c) => {\n  try {\n    const data = await c.req.json();\n    return c.json({\n      success: true,\n      data: data,\n      message: 'Test successful'\n    });\n  } catch (error) {\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Test error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// POST /inventory/stock-in - Stock In (Nh\u1EADp kho) - With better error handling\napp.post('/stock-in', authenticate, async (c) => {\n  try {\n    const data = await c.req.json();\n    const user = c.get('user');\n\n    console.log('Stock-in request data:', JSON.stringify(data));\n    console.log('User:', JSON.stringify(user));\n\n    // Convert and validate data types\n    const productId = parseInt(data.product_id);\n    const quantity = parseInt(data.quantity);\n    const costPrice = data.cost_price ? parseFloat(data.cost_price) : null;\n\n    console.log('Converted data:', { productId, quantity, costPrice });\n\n    // Validate required fields\n    if (!productId || !quantity || quantity <= 0) {\n      console.log('Validation failed:', { productId, quantity });\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Thi\u1EBFu th\u00F4ng tin s\u1EA3n ph\u1EA9m ho\u1EB7c s\u1ED1 l\u01B0\u1EE3ng kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    console.log('Starting database operations...');\n\n    try {\n      // Check if product exists\n      console.log('Checking if product exists...');\n      const product = await c.env.DB.prepare(\n        'SELECT id, name, sku, stock_quantity, cost_price FROM products WHERE id = ? AND is_active = 1'\n      ).bind(productId).first<{\n        id: number;\n        name: string;\n        sku: string;\n        stock_quantity: number;\n        cost_price: number;\n      }>();\n\n      console.log('Product query result:', product);\n\n      if (!product) {\n        console.log('Product not found');\n        return c.json({\n          success: false,\n          data: null,\n          message: 'S\u1EA3n ph\u1EA9m kh\u00F4ng t\u1ED3n t\u1EA1i ho\u1EB7c \u0111\u00E3 b\u1ECB v\u00F4 hi\u1EC7u h\u00F3a'\n        }, 400);\n      }\n\n      // Update product stock quantity directly (simplified approach)\n      const newStockQuantity = product.stock_quantity + quantity;\n      console.log('Updating stock quantity:', {\n        oldStock: product.stock_quantity,\n        addedQuantity: quantity,\n        newStock: newStockQuantity\n      });\n\n      const updateResult = await c.env.DB.prepare(`\n        UPDATE products\n        SET stock_quantity = ?,\n            cost_price = COALESCE(?, cost_price),\n            updated_at = datetime('now')\n        WHERE id = ?\n      `).bind(newStockQuantity, costPrice, productId).run();\n\n      console.log('Update result:', updateResult);\n\n      return c.json({\n        success: true,\n        data: {\n          product: {\n            id: product.id,\n            name: product.name,\n            sku: product.sku\n          },\n          previous_stock: product.stock_quantity,\n          quantity_added: quantity,\n          new_stock_quantity: newStockQuantity\n        },\n        message: 'Nh\u1EADp kho th\u00E0nh c\u00F4ng'\n      });\n    } catch (dbError) {\n      console.error('Database error:', dbError);\n      throw dbError;\n    }\n  } catch (error) {\n    console.error('Stock in error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi nh\u1EADp kho: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// POST /inventory/stock-transfer - Stock Transfer (Chuy\u1EC3n kho)\napp.post('/stock-transfer', authenticate, async (c) => {\n  try {\n    const data = await c.req.json();\n    const user = c.get('user');\n\n    // Validate required fields\n    if (!data.product_id || !data.quantity || data.quantity <= 0 || !data.from_store_id || !data.to_store_id) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Thi\u1EBFu th\u00F4ng tin b\u1EAFt bu\u1ED9c cho chuy\u1EC3n kho'\n      }, 400);\n    }\n\n    if (data.from_store_id === data.to_store_id) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng th\u1EC3 chuy\u1EC3n kho trong c\u00F9ng m\u1ED9t chi nh\u00E1nh'\n      }, 400);\n    }\n\n    // Check if product exists and has enough stock\n    const product = await c.env.DB.prepare(\n      'SELECT id, name, sku, stock_quantity FROM products WHERE id = ? AND is_active = 1'\n    ).bind(data.product_id).first<{\n      id: number;\n      name: string;\n      sku: string;\n      stock_quantity: number;\n    }>();\n\n    if (!product) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'S\u1EA3n ph\u1EA9m kh\u00F4ng t\u1ED3n t\u1EA1i ho\u1EB7c \u0111\u00E3 b\u1ECB v\u00F4 hi\u1EC7u h\u00F3a'\n      }, 400);\n    }\n\n    if (product.stock_quantity < data.quantity) {\n      return c.json({\n        success: false,\n        data: null,\n        message: `Kh\u00F4ng \u0111\u1EE7 t\u1ED3n kho. C\u00F2n l\u1EA1i: ${product.stock_quantity}`\n      }, 400);\n    }\n\n    // Generate reference number\n    const referenceNumber = data.reference_number ||\n      `ST-${Date.now()}-${Math.random().toString(36).substring(2, 8)}`;\n\n    try {\n      // Use batch operations for atomic transactions\n      const statements = [\n        // Insert transfer out transaction\n        c.env.DB.prepare(`\n          INSERT INTO inventory_transactions (\n            product_id, transaction_type, quantity,\n            reference_number, from_store_id, to_store_id, notes, created_at\n          ) VALUES (?, 'transfer_out', ?, ?, ?, ?, ?, datetime('now'))\n        `).bind(\n          data.product_id,\n          data.quantity,\n          referenceNumber,\n          data.from_store_id,\n          data.to_store_id,\n          data.notes || null\n        ),\n\n        // Insert transfer in transaction\n        c.env.DB.prepare(`\n          INSERT INTO inventory_transactions (\n            product_id, transaction_type, quantity,\n            reference_number, from_store_id, to_store_id, notes, created_at\n          ) VALUES (?, 'transfer_in', ?, ?, ?, ?, ?, datetime('now'))\n        `).bind(\n          data.product_id,\n          data.quantity,\n          referenceNumber,\n          data.from_store_id,\n          data.to_store_id,\n          data.notes || null\n        )\n      ];\n\n      // Execute all statements in batch for atomicity\n      await c.env.DB.batch(statements);\n\n      return c.json({\n        success: true,\n        data: {\n          product: {\n            id: product.id,\n            name: product.name,\n            sku: product.sku\n          },\n          quantity_transferred: data.quantity,\n          from_store_id: data.from_store_id,\n          to_store_id: data.to_store_id,\n          reference_number: referenceNumber\n        },\n        message: 'Chuy\u1EC3n kho th\u00E0nh c\u00F4ng'\n      });\n    } catch (error) {\n      console.error('Batch operation error:', error);\n      throw error;\n    }\n  } catch (error) {\n    console.error('Stock transfer error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi chuy\u1EC3n kho: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// GET /inventory/stock-check - Stock Check Page (Trang ki\u1EC3m k\u00EA)\napp.get('/stock-check', authenticate, async (c) => {\n  try {\n    // Get products for stock checking\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '20');\n    const search = c.req.query('search') || '';\n\n    const offset = (page - 1) * limit;\n\n    // Build WHERE conditions\n    const conditions: string[] = [];\n    const params: any[] = [];\n\n    if (search) {\n      conditions.push('(p.name LIKE ? OR p.sku LIKE ?)');\n      params.push(`%${search}%`, `%${search}%`);\n    }\n\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : '';\n\n    // Get products with stock info\n    const productsQuery = `\n      SELECT\n        p.id, p.name, p.sku, p.stock_quantity, p.cost_price, p.selling_price,\n        c.name as category_name\n      FROM products p\n      LEFT JOIN categories c ON p.category_id = c.id\n      ${whereClause}\n      ORDER BY p.name ASC\n      LIMIT ? OFFSET ?\n    `;\n\n    const products = await c.env.DB.prepare(productsQuery)\n      .bind(...params, limit, offset)\n      .all();\n\n    // Get total count\n    const countQuery = `\n      SELECT COUNT(*) as total\n      FROM products p\n      LEFT JOIN categories c ON p.category_id = c.id\n      ${whereClause}\n    `;\n\n    const countResult = await c.env.DB.prepare(countQuery)\n      .bind(...params)\n      .first();\n\n    const total = (countResult as any)?.total || 0;\n\n    return c.json({\n      success: true,\n      data: {\n        products: products.results,\n        pagination: {\n          page,\n          limit,\n          total,\n          totalPages: Math.ceil(total / limit)\n        }\n      },\n      message: 'Danh s\u00E1ch s\u1EA3n ph\u1EA9m \u0111\u1EC3 ki\u1EC3m k\u00EA'\n    });\n  } catch (error) {\n    console.error('Stock check page error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi t\u1EA3i trang ki\u1EC3m k\u00EA: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// POST /inventory/stock-count - Stock Count (Ki\u1EC3m k\u00EA)\napp.post('/stock-count', authenticate, async (c) => {\n  try {\n    const data = await c.req.json();\n    const user = c.get('user');\n\n    // Validate required fields\n    if (!data.product_id || data.counted_quantity === undefined || data.counted_quantity < 0) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Thi\u1EBFu th\u00F4ng tin s\u1EA3n ph\u1EA9m ho\u1EB7c s\u1ED1 l\u01B0\u1EE3ng ki\u1EC3m k\u00EA kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    // Begin transaction\n    await c.env.DB.prepare('BEGIN TRANSACTION').run();\n\n    try {\n      // Check if product exists\n      const product = await c.env.DB.prepare(\n        'SELECT id, name, sku, stock_quantity FROM products WHERE id = ? AND is_active = 1'\n      ).bind(data.product_id).first<{\n        id: number;\n        name: string;\n        sku: string;\n        stock_quantity: number;\n      }>();\n\n      if (!product) {\n        await c.env.DB.prepare('ROLLBACK').run();\n        return c.json({\n          success: false,\n          data: null,\n          message: 'S\u1EA3n ph\u1EA9m kh\u00F4ng t\u1ED3n t\u1EA1i ho\u1EB7c \u0111\u00E3 b\u1ECB v\u00F4 hi\u1EC7u h\u00F3a'\n        }, 400);\n      }\n\n      const difference = data.counted_quantity - product.stock_quantity;\n\n      if (difference !== 0) {\n        // Generate reference number\n        const referenceNumber = data.reference_number ||\n          `SC-${Date.now()}-${Math.random().toString(36).substring(2, 8)}`;\n\n        // Insert adjustment transaction\n        await c.env.DB.prepare(`\n          INSERT INTO inventory_transactions (\n            product_id, transaction_type, quantity,\n            reference_number, notes, created_at\n          ) VALUES (?, 'adjustment', ?, ?, ?, datetime('now'))\n        `).bind(\n          data.product_id,\n          difference,\n          referenceNumber,\n          `Ki\u1EC3m k\u00EA: ${product.stock_quantity} \u2192 ${data.counted_quantity}. ${data.notes || ''}`\n        ).run();\n\n        // Update product stock quantity\n        await c.env.DB.prepare(`\n          UPDATE products\n          SET stock_quantity = ?, updated_at = datetime('now')\n          WHERE id = ?\n        `).bind(data.counted_quantity, data.product_id).run();\n      }\n\n      await c.env.DB.prepare('COMMIT').run();\n\n      return c.json({\n        success: true,\n        data: {\n          product: {\n            id: product.id,\n            name: product.name,\n            sku: product.sku\n          },\n          system_quantity: product.stock_quantity,\n          counted_quantity: data.counted_quantity,\n          difference: difference,\n          adjustment_made: difference !== 0\n        },\n        message: difference === 0 ? 'Ki\u1EC3m k\u00EA ch\u00EDnh x\u00E1c' : 'Ki\u1EC3m k\u00EA v\u00E0 \u0111i\u1EC1u ch\u1EC9nh th\u00E0nh c\u00F4ng'\n      });\n    } catch (error) {\n      await c.env.DB.prepare('ROLLBACK').run();\n      throw error;\n    }\n  } catch (error) {\n    console.error('Stock count error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi ki\u1EC3m k\u00EA: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\nexport default app;\n", "/**\n * Returns/Refunds Management Routes\n * \n * Qu\u1EA3n l\u00FD tr\u1EA3 h\u00E0ng/ho\u00E0n ti\u1EC1n cho ComputerPOS Pro\n * Tu\u00E2n th\u1EE7 100% rules.md - Real D1 database integration\n */\n\nimport { Hono } from 'hono';\nimport { authenticate } from '../middleware/auth';\nimport { Env, ApiResponse } from '../types';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// Initialize returns tables if needed\nasync function initializeReturnsTables(env: Env) {\n  try {\n    // Create returns table\n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS returns (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        original_sale_id INTEGER NOT NULL,\n        return_amount DECIMAL(10,2) NOT NULL DEFAULT 0,\n        return_reason TEXT,\n        return_status TEXT NOT NULL DEFAULT 'pending' CHECK (return_status IN ('pending', 'approved', 'rejected', 'completed')),\n        reference_number TEXT,\n        notes TEXT,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (original_sale_id) REFERENCES sales(id)\n      )\n    `).run();\n\n    // Create return_items table\n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS return_items (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        return_id INTEGER NOT NULL,\n        product_id INTEGER NOT NULL,\n        quantity INTEGER NOT NULL DEFAULT 0,\n        unit_price DECIMAL(10,2) NOT NULL DEFAULT 0,\n        total_amount DECIMAL(10,2) NOT NULL DEFAULT 0,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        FOREIGN KEY (return_id) REFERENCES returns(id) ON DELETE CASCADE,\n        FOREIGN KEY (product_id) REFERENCES products(id)\n      )\n    `).run();\n\n    console.log('Returns tables initialized successfully');\n  } catch (error) {\n    console.log('Returns tables initialization skipped:', error);\n  }\n}\n\n// Debug endpoint\napp.get('/debug', authenticate, async (c) => {\n  try {\n    // Initialize tables first\n    await initializeReturnsTables(c.env);\n\n    const returns = await c.env.DB.prepare(`\n      SELECT\n        id, original_sale_id, return_amount, return_reason, return_status, created_at\n      FROM returns\n      ORDER BY created_at DESC\n      LIMIT 10\n    `).all();\n\n    return c.json({\n      success: true,\n      data: returns.results,\n      message: 'Debug returns'\n    });\n  } catch (error) {\n    console.error('Debug returns error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Debug error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// GET /returns - Get returns history\napp.get('/', authenticate, async (c) => {\n  try {\n    // Initialize tables first\n    await initializeReturnsTables(c.env);\n    // Parse query params manually\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '20');\n    const search = c.req.query('search') || '';\n    const return_status = c.req.query('return_status') || '';\n    const date_from = c.req.query('date_from') || '';\n    const date_to = c.req.query('date_to') || '';\n    \n    const offset = (page - 1) * limit;\n\n    // Build WHERE conditions\n    const conditions: string[] = [];\n    const params: any[] = [];\n\n    if (search && search.trim()) {\n      conditions.push('(r.return_reason LIKE ? OR s.customer_name LIKE ? OR s.customer_phone LIKE ?)');\n      params.push(`%${search}%`, `%${search}%`, `%${search}%`);\n    }\n\n    if (return_status && return_status.trim()) {\n      conditions.push('r.return_status = ?');\n      params.push(return_status);\n    }\n\n    if (date_from && date_from.trim()) {\n      conditions.push('DATE(r.created_at) >= ?');\n      params.push(date_from);\n    }\n\n    if (date_to && date_to.trim()) {\n      conditions.push('DATE(r.created_at) <= ?');\n      params.push(date_to);\n    }\n\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : '';\n\n    // Get total count\n    const countQuery = `\n      SELECT COUNT(*) as total \n      FROM returns r\n      LEFT JOIN sales s ON r.original_sale_id = s.id\n      ${whereClause}\n    `;\n    const countResult = await c.env.DB.prepare(countQuery).bind(...params).first<{ total: number }>();\n    const total = countResult?.total || 0;\n\n    // Get returns\n    const returnsQuery = `\n      SELECT \n        r.id, r.original_sale_id, r.return_amount, r.return_reason, \n        r.return_status, r.notes, r.created_at,\n        s.customer_name, s.customer_phone, s.total_amount as original_amount\n      FROM returns r\n      LEFT JOIN sales s ON r.original_sale_id = s.id\n      ${whereClause}\n      ORDER BY r.created_at DESC\n      LIMIT ? OFFSET ?\n    `;\n\n    const returnsResult = await c.env.DB.prepare(returnsQuery)\n      .bind(...params, limit, offset)\n      .all();\n\n    const totalPages = Math.ceil(total / limit);\n\n    return c.json({\n      success: true,\n      data: {\n        data: returnsResult.results,\n        pagination: {\n          page,\n          limit,\n          total,\n          totalPages\n        }\n      },\n      message: 'L\u1EA5y l\u1ECBch s\u1EED tr\u1EA3 h\u00E0ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Get returns error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi l\u1EA5y l\u1ECBch s\u1EED tr\u1EA3 h\u00E0ng'\n    }, 500);\n  }\n});\n\n// POST /returns - Create return/refund\napp.post('/', authenticate, async (c) => {\n  try {\n    const data = await c.req.json();\n    const user = c.get('user');\n\n    // Validate required fields\n    if (!data.original_sale_id || !data.items || !Array.isArray(data.items) || data.items.length === 0) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Thi\u1EBFu th\u00F4ng tin \u0111\u01A1n h\u00E0ng g\u1ED1c ho\u1EB7c s\u1EA3n ph\u1EA9m tr\u1EA3 h\u00E0ng'\n      }, 400);\n    }\n\n    // Begin transaction\n    await c.env.DB.prepare('BEGIN TRANSACTION').run();\n\n    try {\n      // Check if original sale exists and is paid\n      const originalSale = await c.env.DB.prepare(\n        'SELECT id, total_amount, payment_status FROM sales WHERE id = ?'\n      ).bind(data.original_sale_id).first<{ \n        id: number; \n        total_amount: number; \n        payment_status: string; \n      }>();\n\n      if (!originalSale) {\n        await c.env.DB.prepare('ROLLBACK').run();\n        return c.json({\n          success: false,\n          data: null,\n          message: 'Kh\u00F4ng t\u00ECm th\u1EA5y \u0111\u01A1n h\u00E0ng g\u1ED1c'\n        }, 400);\n      }\n\n      if (originalSale.payment_status !== 'paid') {\n        await c.env.DB.prepare('ROLLBACK').run();\n        return c.json({\n          success: false,\n          data: null,\n          message: 'Ch\u1EC9 c\u00F3 th\u1EC3 tr\u1EA3 h\u00E0ng cho \u0111\u01A1n h\u00E0ng \u0111\u00E3 thanh to\u00E1n'\n        }, 400);\n      }\n\n      // Calculate return amount and validate items\n      let totalReturnAmount = 0;\n      const validatedItems = [];\n\n      for (const item of data.items) {\n        // Check if item exists in original sale\n        const originalItem = await c.env.DB.prepare(`\n          SELECT id, quantity, unit_price, total_price \n          FROM sale_items \n          WHERE sale_id = ? AND product_id = ?\n        `).bind(data.original_sale_id, item.product_id).first<{\n          id: number;\n          quantity: number;\n          unit_price: number;\n          total_price: number;\n        }>();\n\n        if (!originalItem) {\n          await c.env.DB.prepare('ROLLBACK').run();\n          return c.json({\n            success: false,\n            data: null,\n            message: `S\u1EA3n ph\u1EA9m ID ${item.product_id} kh\u00F4ng c\u00F3 trong \u0111\u01A1n h\u00E0ng g\u1ED1c`\n          }, 400);\n        }\n\n        if (item.return_quantity > originalItem.quantity) {\n          await c.env.DB.prepare('ROLLBACK').run();\n          return c.json({\n            success: false,\n            data: null,\n            message: `S\u1ED1 l\u01B0\u1EE3ng tr\u1EA3 h\u00E0ng v\u01B0\u1EE3t qu\u00E1 s\u1ED1 l\u01B0\u1EE3ng \u0111\u00E3 mua cho s\u1EA3n ph\u1EA9m ID ${item.product_id}`\n          }, 400);\n        }\n\n        const itemReturnAmount = (originalItem.unit_price * item.return_quantity);\n        totalReturnAmount += itemReturnAmount;\n\n        validatedItems.push({\n          ...item,\n          unit_price: originalItem.unit_price,\n          return_amount: itemReturnAmount\n        });\n      }\n\n      // Generate return reference number\n      const returnReference = `RET-${Date.now()}-${Math.random().toString(36).substring(2, 8)}`;\n\n      // Create return record\n      const returnResult = await c.env.DB.prepare(`\n        INSERT INTO returns (\n          original_sale_id, return_amount, return_reason, return_status,\n          reference_number, notes, created_at\n        ) VALUES (?, ?, ?, 'pending', ?, ?, datetime('now'))\n      `).bind(\n        data.original_sale_id,\n        totalReturnAmount,\n        data.return_reason || 'Tr\u1EA3 h\u00E0ng',\n        returnReference,\n        data.notes || null\n      ).run();\n\n      const returnId = returnResult.meta.last_row_id as number;\n\n      // Create return items and restore stock\n      for (const item of validatedItems) {\n        // Create return item record\n        await c.env.DB.prepare(`\n          INSERT INTO return_items (\n            return_id, product_id, quantity, unit_price, total_amount, created_at\n          ) VALUES (?, ?, ?, ?, ?, datetime('now'))\n        `).bind(\n          returnId,\n          item.product_id,\n          item.return_quantity,\n          item.unit_price,\n          item.return_amount\n        ).run();\n\n        // Restore stock\n        await c.env.DB.prepare(`\n          UPDATE products \n          SET stock_quantity = stock_quantity + ?, updated_at = datetime('now')\n          WHERE id = ?\n        `).bind(item.return_quantity, item.product_id).run();\n\n        // Create inventory transaction for stock restoration\n        await c.env.DB.prepare(`\n          INSERT INTO inventory_transactions (\n            product_id, transaction_type, quantity, reference_number, notes, created_at\n          ) VALUES (?, 'stock_in', ?, ?, ?, datetime('now'))\n        `).bind(\n          item.product_id,\n          item.return_quantity,\n          returnReference,\n          `Tr\u1EA3 h\u00E0ng - ${returnReference}`\n        ).run();\n      }\n\n      await c.env.DB.prepare('COMMIT').run();\n\n      return c.json({\n        success: true,\n        data: {\n          return_id: returnId,\n          reference_number: returnReference,\n          return_amount: totalReturnAmount,\n          items_count: validatedItems.length\n        },\n        message: 'T\u1EA1o phi\u1EBFu tr\u1EA3 h\u00E0ng th\u00E0nh c\u00F4ng'\n      });\n    } catch (error) {\n      await c.env.DB.prepare('ROLLBACK').run();\n      throw error;\n    }\n  } catch (error) {\n    console.error('Create return error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi t\u1EA1o phi\u1EBFu tr\u1EA3 h\u00E0ng: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// PUT /returns/:id/status - Update return status\napp.put('/:id/status', authenticate, async (c) => {\n  try {\n    const returnId = parseInt(c.req.param('id'));\n    const data = await c.req.json();\n    \n    if (isNaN(returnId)) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'ID phi\u1EBFu tr\u1EA3 h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    const { return_status, notes } = data;\n\n    if (!return_status || !['pending', 'approved', 'rejected', 'completed'].includes(return_status)) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Tr\u1EA1ng th\u00E1i tr\u1EA3 h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    // Check if return exists\n    const existingReturn = await c.env.DB.prepare(\n      'SELECT id, return_status FROM returns WHERE id = ?'\n    ).bind(returnId).first();\n\n    if (!existingReturn) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y phi\u1EBFu tr\u1EA3 h\u00E0ng'\n      }, 404);\n    }\n\n    // Update return status\n    await c.env.DB.prepare(`\n      UPDATE returns \n      SET return_status = ?, notes = ?, updated_at = datetime('now')\n      WHERE id = ?\n    `).bind(return_status, notes || null, returnId).run();\n\n    return c.json({\n      success: true,\n      data: {\n        id: returnId,\n        old_status: existingReturn.return_status,\n        new_status: return_status\n      },\n      message: 'C\u1EADp nh\u1EADt tr\u1EA1ng th\u00E1i tr\u1EA3 h\u00E0ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Update return status error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi c\u1EADp nh\u1EADt tr\u1EA1ng th\u00E1i tr\u1EA3 h\u00E0ng'\n    }, 500);\n  }\n});\n\nexport default app;\n", "/**\n * Customer Management Routes\n * \n * Qu\u1EA3n l\u00FD kh\u00E1ch h\u00E0ng cho ComputerPOS Pro\n * Tu\u00E2n th\u1EE7 100% rules.md - Real D1 database integration\n */\n\nimport { Hono } from 'hono';\nimport { authenticate } from '../middleware/auth';\nimport { Env, ApiResponse } from '../types';\nimport { customerCreateSchema, customerUpdateSchema } from '../schemas';\nimport { z } from 'zod';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// Validation middleware\nconst validate = (schema: z.ZodSchema) => async (c: any, next: any) => {\n  try {\n    const data = await c.req.json();\n    const validatedData = schema.parse(data);\n    c.set('validatedData', validatedData);\n    await next();\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'D\u1EEF li\u1EC7u kh\u00F4ng h\u1EE3p l\u1EC7',\n        errors: error.errors\n      }, 400);\n    }\n    throw error;\n  }\n};\n\n// Test endpoint without auth\napp.get('/test', async (c) => {\n  try {\n    // Check if customers table exists\n    const tableExists = await c.env.DB.prepare(`\n      SELECT name FROM sqlite_master WHERE type='table' AND name='customers'\n    `).first();\n\n    if (!tableExists) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Customers table does not exist'\n      }, 500);\n    }\n\n    // Check table schema\n    const schema = await c.env.DB.prepare(`\n      PRAGMA table_info(customers)\n    `).all();\n\n    // Try to get customers with flexible query\n    let customers;\n    try {\n      // First try with full_name\n      customers = await c.env.DB.prepare(`\n        SELECT\n          id, full_name, phone, email, loyalty_points, created_at\n        FROM customers\n        ORDER BY created_at DESC\n        LIMIT 5\n      `).all();\n    } catch (fullNameError) {\n      try {\n        // If that fails, try with first_name, last_name and combine them\n        const result = await c.env.DB.prepare(`\n          SELECT\n            id, first_name || ' ' || last_name as full_name, phone, email, loyalty_points, created_at\n          FROM customers\n          ORDER BY created_at DESC\n          LIMIT 5\n        `).all();\n        customers = result;\n      } catch (firstLastError) {\n        return c.json({\n          success: false,\n          data: null,\n          message: 'Schema error - neither full_name nor first_name/last_name found',\n          schema: schema.results\n        }, 500);\n      }\n    }\n\n    return c.json({\n      success: true,\n      data: customers.results,\n      message: 'Test customers query successful',\n      schema: schema.results\n    });\n  } catch (error) {\n    console.error('Test customers error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Test error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Debug endpoint\napp.get('/debug', authenticate, async (c) => {\n  try {\n    // Check table structure\n    const tableInfo = await c.env.DB.prepare(`\n      PRAGMA table_info(customers)\n    `).all();\n\n    // Get sample customers\n    const customers = await c.env.DB.prepare(`\n      SELECT\n        id, full_name, phone, email, loyalty_points, created_at, deleted_at\n      FROM customers\n      ORDER BY created_at DESC\n      LIMIT 10\n    `).all();\n\n    // Check if there are any customers with deleted_at\n    const deletedCustomers = await c.env.DB.prepare(`\n      SELECT COUNT(*) as count FROM customers WHERE deleted_at IS NOT NULL\n    `).first();\n\n    return c.json({\n      success: true,\n      data: {\n        tableStructure: tableInfo.results,\n        customers: customers.results,\n        deletedCount: deletedCustomers\n      },\n      message: 'Debug customers'\n    });\n  } catch (error) {\n    console.error('Debug customers error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Debug error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// GET /customers - Get customers list with pagination\napp.get('/', authenticate, async (c) => {\n  try {\n    // Parse query params manually\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '20');\n    const search = c.req.query('search') || '';\n    const customer_group = c.req.query('customer_group') || '';\n\n    const offset = (page - 1) * limit;\n\n    // Build WHERE conditions - include deleted_at filter\n    const conditions: string[] = ['deleted_at IS NULL']; // Only show non-deleted customers\n    const params: any[] = [];\n\n    if (search && search.trim()) {\n      // Search in first_name, last_name, full_name, phone, email\n      conditions.push('(first_name LIKE ? OR last_name LIKE ? OR full_name LIKE ? OR phone LIKE ? OR email LIKE ?)');\n      params.push(`%${search}%`, `%${search}%`, `%${search}%`, `%${search}%`, `%${search}%`);\n    }\n\n    const whereClause = `WHERE ${conditions.join(' AND ')}`;\n\n    // Get total count\n    const countQuery = `SELECT COUNT(*) as total FROM customers ${whereClause}`;\n    const countResult = await c.env.DB.prepare(countQuery).bind(...params).first<{ total: number }>();\n    const total = countResult?.total || 0;\n\n    // Get customers with proper formatting\n    const customersQuery = `\n      SELECT\n        id,\n        COALESCE(full_name, first_name || ' ' || last_name) as full_name,\n        phone,\n        email,\n        address_line1 as address,\n        loyalty_points,\n        'regular' as customer_group,\n        notes,\n        created_at,\n        updated_at,\n        0 as total_orders,\n        0 as total_spent,\n        NULL as last_purchase\n      FROM customers\n      ${whereClause}\n      ORDER BY created_at DESC\n      LIMIT ? OFFSET ?\n    `;\n\n    const customersResult = await c.env.DB.prepare(customersQuery)\n      .bind(...params, limit, offset)\n      .all();\n\n    const totalPages = Math.ceil(total / limit);\n\n    return c.json({\n      success: true,\n      data: {\n        data: customersResult.results,\n        pagination: {\n          page,\n          limit,\n          total,\n          totalPages\n        }\n      },\n      message: 'L\u1EA5y danh s\u00E1ch kh\u00E1ch h\u00E0ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Get customers error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi l\u1EA5y danh s\u00E1ch kh\u00E1ch h\u00E0ng'\n    }, 500);\n  }\n});\n\n// GET /customers/:id - Get customer details\napp.get('/:id', authenticate, async (c) => {\n  try {\n    const customerId = parseInt(c.req.param('id'));\n    \n    if (isNaN(customerId)) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'ID kh\u00E1ch h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    // Get customer details with sales statistics\n    const customerResult = await c.env.DB.prepare(`\n      SELECT\n        c.id,\n        COALESCE(c.full_name, c.first_name || ' ' || c.last_name) as full_name,\n        c.phone, c.email,\n        COALESCE(c.address, c.address_line1) as address,\n        COALESCE(c.birthday, c.date_of_birth) as birthday,\n        c.loyalty_points, c.notes, c.created_at, c.updated_at,\n        COUNT(s.id) as total_orders,\n        COALESCE(SUM(s.total_amount), 0) as total_spent,\n        MAX(s.created_at) as last_purchase\n      FROM customers c\n      LEFT JOIN sales s ON c.id = s.customer_id AND s.payment_status = 'paid'\n      WHERE c.id = ? AND c.deleted_at IS NULL\n      GROUP BY c.id\n    `).bind(customerId).first();\n\n    if (!customerResult) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y kh\u00E1ch h\u00E0ng'\n      }, 404);\n    }\n\n    // Get recent orders\n    const recentOrdersResult = await c.env.DB.prepare(`\n      SELECT \n        id, total_amount, payment_method, payment_status, created_at\n      FROM sales\n      WHERE customer_id = ? AND payment_status = 'paid'\n      ORDER BY created_at DESC\n      LIMIT 10\n    `).bind(customerId).all();\n\n    return c.json({\n      success: true,\n      data: {\n        customer: customerResult,\n        recent_orders: recentOrdersResult.results\n      },\n      message: 'L\u1EA5y chi ti\u1EBFt kh\u00E1ch h\u00E0ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Get customer details error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi l\u1EA5y chi ti\u1EBFt kh\u00E1ch h\u00E0ng'\n    }, 500);\n  }\n});\n\n// POST /customers - Create new customer\napp.post('/', authenticate, validate(customerCreateSchema), async (c) => {\n  try {\n    const data = c.get('validatedData');\n\n    // Check if phone or email already exists (only in non-deleted records)\n    if (data.phone) {\n      const existingPhone = await c.env.DB.prepare(\n        'SELECT id FROM customers WHERE phone = ? AND deleted_at IS NULL'\n      ).bind(data.phone).first();\n\n      if (existingPhone) {\n        return c.json({\n          success: false,\n          data: null,\n          message: 'S\u1ED1 \u0111i\u1EC7n tho\u1EA1i \u0111\u00E3 t\u1ED3n t\u1EA1i'\n        }, 400);\n      }\n    }\n\n    if (data.email) {\n      const existingEmail = await c.env.DB.prepare(\n        'SELECT id FROM customers WHERE email = ? AND deleted_at IS NULL'\n      ).bind(data.email).first();\n\n      if (existingEmail) {\n        return c.json({\n          success: false,\n          data: null,\n          message: 'Email \u0111\u00E3 t\u1ED3n t\u1EA1i'\n        }, 400);\n      }\n    }\n\n    // Create customer with actual table column names\n    const nameParts = (data.full_name || '').trim().split(' ');\n    const firstName = nameParts[0] || '';\n    const lastName = nameParts.slice(1).join(' ') || '';\n\n    const result = await c.env.DB.prepare(`\n      INSERT INTO customers (\n        first_name, last_name, full_name, phone, email, address_line1,\n        date_of_birth, loyalty_points, notes, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))\n    `).bind(\n      firstName,\n      lastName,\n      data.full_name,\n      data.phone || null,\n      data.email || null,\n      data.address || null,\n      data.birthday || null,\n      data.loyalty_points || 0,\n      data.notes || null\n    ).run();\n\n    const customerId = result.meta.last_row_id as number;\n\n    return c.json({\n      success: true,\n      data: {\n        id: customerId,\n        ...data\n      },\n      message: 'T\u1EA1o kh\u00E1ch h\u00E0ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Create customer error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi t\u1EA1o kh\u00E1ch h\u00E0ng'\n    }, 500);\n  }\n});\n\n// PUT /customers/:id - Update customer\napp.put('/:id', authenticate, validate(customerUpdateSchema), async (c) => {\n  try {\n    const customerId = parseInt(c.req.param('id'));\n    const data = c.get('validatedData');\n    \n    if (isNaN(customerId)) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'ID kh\u00E1ch h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    // Check if customer exists\n    const existingCustomer = await c.env.DB.prepare(\n      'SELECT id FROM customers WHERE id = ?'\n    ).bind(customerId).first();\n\n    if (!existingCustomer) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y kh\u00E1ch h\u00E0ng'\n      }, 404);\n    }\n\n    // Check for duplicate phone/email (excluding current customer and deleted records)\n    if (data.phone) {\n      const existingPhone = await c.env.DB.prepare(\n        'SELECT id FROM customers WHERE phone = ? AND id != ? AND deleted_at IS NULL'\n      ).bind(data.phone, customerId).first();\n\n      if (existingPhone) {\n        return c.json({\n          success: false,\n          data: null,\n          message: 'S\u1ED1 \u0111i\u1EC7n tho\u1EA1i \u0111\u00E3 t\u1ED3n t\u1EA1i'\n        }, 400);\n      }\n    }\n\n    if (data.email) {\n      const existingEmail = await c.env.DB.prepare(\n        'SELECT id FROM customers WHERE email = ? AND id != ? AND deleted_at IS NULL'\n      ).bind(data.email, customerId).first();\n\n      if (existingEmail) {\n        return c.json({\n          success: false,\n          data: null,\n          message: 'Email \u0111\u00E3 t\u1ED3n t\u1EA1i'\n        }, 400);\n      }\n    }\n\n    // Build update query dynamically - use actual table column names\n    const updateFields = [];\n    const updateParams = [];\n\n    if (data.full_name !== undefined) {\n      // Update both full_name and split into first_name/last_name\n      const nameParts = (data.full_name || '').trim().split(' ');\n      const firstName = nameParts[0] || '';\n      const lastName = nameParts.slice(1).join(' ') || '';\n\n      updateFields.push('full_name = ?', 'first_name = ?', 'last_name = ?');\n      updateParams.push(data.full_name, firstName, lastName);\n    }\n    if (data.phone !== undefined) {\n      updateFields.push('phone = ?');\n      updateParams.push(data.phone);\n    }\n    if (data.email !== undefined) {\n      updateFields.push('email = ?');\n      updateParams.push(data.email);\n    }\n    if (data.address !== undefined) {\n      updateFields.push('address_line1 = ?');\n      updateParams.push(data.address);\n    }\n    if (data.birthday !== undefined) {\n      updateFields.push('date_of_birth = ?');\n      updateParams.push(data.birthday);\n    }\n    if (data.loyalty_points !== undefined) {\n      updateFields.push('loyalty_points = ?');\n      updateParams.push(data.loyalty_points);\n    }\n    if (data.notes !== undefined) {\n      updateFields.push('notes = ?');\n      updateParams.push(data.notes);\n    }\n\n    updateFields.push('updated_at = datetime(\\'now\\')');\n    updateParams.push(customerId);\n\n    const updateQuery = `\n      UPDATE customers \n      SET ${updateFields.join(', ')}\n      WHERE id = ?\n    `;\n\n    await c.env.DB.prepare(updateQuery).bind(...updateParams).run();\n\n    return c.json({\n      success: true,\n      data: {\n        id: customerId,\n        ...data\n      },\n      message: 'C\u1EADp nh\u1EADt kh\u00E1ch h\u00E0ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Update customer error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi c\u1EADp nh\u1EADt kh\u00E1ch h\u00E0ng'\n    }, 500);\n  }\n});\n\n\n\n// DELETE /customers/:id - Soft delete customer\napp.delete('/:id', authenticate, async (c) => {\n  try {\n    const customerId = parseInt(c.req.param('id'));\n\n    if (isNaN(customerId)) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'ID kh\u00E1ch h\u00E0ng kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    // Check if customer exists\n    const existingCustomer = await c.env.DB.prepare(\n      'SELECT id, full_name, deleted_at FROM customers WHERE id = ?'\n    ).bind(customerId).first();\n\n    if (!existingCustomer) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Kh\u00E1ch h\u00E0ng kh\u00F4ng t\u1ED3n t\u1EA1i'\n      }, 404);\n    }\n\n    // Check if customer is already deleted\n    if (existingCustomer.deleted_at) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Kh\u00E1ch h\u00E0ng \u0111\u00E3 b\u1ECB x\u00F3a tr\u01B0\u1EDBc \u0111\u00F3'\n      }, 404);\n    }\n\n    // Soft delete customer\n    const deleteResult = await c.env.DB.prepare(`\n      UPDATE customers\n      SET deleted_at = datetime('now'), updated_at = datetime('now')\n      WHERE id = ? AND deleted_at IS NULL\n    `).bind(customerId).run();\n\n    if (deleteResult.meta.changes === 0) {\n      return c.json({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng th\u1EC3 x\u00F3a kh\u00E1ch h\u00E0ng'\n      }, 400);\n    }\n\n    return c.json({\n      success: true,\n      data: { id: customerId },\n      message: 'X\u00F3a kh\u00E1ch h\u00E0ng th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Delete customer error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi x\u00F3a kh\u00E1ch h\u00E0ng'\n    }, 500);\n  }\n});\n\nexport default app;\n", "/**\n * Enterprise-Level Validation Middleware\n *\n * Comprehensive validation middleware cho ComputerPOS Pro\n * Tu\u00E2n th\u1EE7 100% rules.md - Advanced Zod schemas with business logic\n */\n\nimport { Context, Next } from 'hono';\nimport { z } from 'zod';\nimport { HonoEnv, ApiResponse } from '../types';\n\n// Advanced validation error interface\ninterface ValidationError {\n  field: string;\n  code: string;\n  message: string;\n  value?: any;\n  expected?: any;\n  business_rule?: string;\n}\n\n// Comprehensive validation result\ninterface ValidationResult<T> {\n  success: boolean;\n  data?: T;\n  errors?: ValidationError[];\n  warnings?: ValidationError[];\n  metadata?: {\n    validation_time: number;\n    schema_version: string;\n    business_rules_applied: string[];\n  };\n}\n\n/**\n * Enterprise-level query validation with business logic\n */\nexport const validateQuery = <T extends z.ZodSchema>(schema: T) => {\n  return async (c: Context<HonoEnv>, next: Next) => {\n    const startTime = Date.now();\n\n    try {\n      const query = c.req.query();\n\n      // Advanced type conversion with business logic\n      const processedQuery: any = {};\n      const warnings: ValidationError[] = [];\n\n      for (const [key, value] of Object.entries(query)) {\n        // Boolean conversion\n        if (value === 'true' || value === '1') {\n          processedQuery[key] = true;\n        } else if (value === 'false' || value === '0') {\n          processedQuery[key] = false;\n        }\n        // Number conversion with range validation\n        else if (!isNaN(Number(value)) && value !== '') {\n          const numValue = Number(value);\n\n          // Business rule: Pagination limits\n          if (key === 'limit' && numValue > 1000) {\n            warnings.push({\n              field: key,\n              code: 'LIMIT_TOO_HIGH',\n              message: 'Gi\u1EDBi h\u1EA1n qu\u00E1 cao, \u0111\u00E3 \u0111i\u1EC1u ch\u1EC9nh xu\u1ED1ng 1000',\n              value: numValue,\n              expected: 1000,\n              business_rule: 'MAX_PAGINATION_LIMIT'\n            });\n            processedQuery[key] = 1000;\n          } else if (key === 'page' && numValue < 1) {\n            warnings.push({\n              field: key,\n              code: 'INVALID_PAGE',\n              message: 'S\u1ED1 trang kh\u00F4ng h\u1EE3p l\u1EC7, \u0111\u00E3 \u0111i\u1EC1u ch\u1EC9nh v\u1EC1 1',\n              value: numValue,\n              expected: 1,\n              business_rule: 'MIN_PAGE_NUMBER'\n            });\n            processedQuery[key] = 1;\n          } else {\n            processedQuery[key] = numValue;\n          }\n        }\n        // Date validation\n        else if (key.includes('date') || key.includes('_at')) {\n          const dateValue = new Date(value);\n          if (isNaN(dateValue.getTime())) {\n            warnings.push({\n              field: key,\n              code: 'INVALID_DATE_FORMAT',\n              message: '\u0110\u1ECBnh d\u1EA1ng ng\u00E0y kh\u00F4ng h\u1EE3p l\u1EC7',\n              value: value,\n              business_rule: 'DATE_FORMAT_VALIDATION'\n            });\n          } else {\n            processedQuery[key] = value;\n          }\n        }\n        // String sanitization\n        else {\n          // Remove potential XSS and SQL injection patterns\n          const sanitized = value\n            .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n            .replace(/['\"`;]/g, '')\n            .trim();\n\n          if (sanitized !== value) {\n            warnings.push({\n              field: key,\n              code: 'VALUE_SANITIZED',\n              message: 'Gi\u00E1 tr\u1ECB \u0111\u00E3 \u0111\u01B0\u1EE3c l\u00E0m s\u1EA1ch \u0111\u1EC3 b\u1EA3o m\u1EADt',\n              business_rule: 'XSS_PROTECTION'\n            });\n          }\n\n          processedQuery[key] = sanitized;\n        }\n      }\n\n      // Apply Zod schema validation\n      const validatedQuery = schema.parse(processedQuery);\n\n      // Store validation results in context\n      c.set('validatedQuery', validatedQuery);\n      c.set('validationWarnings', warnings);\n      c.set('validationMetadata', {\n        validation_time: Date.now() - startTime,\n        schema_version: '1.0',\n        business_rules_applied: warnings.map(w => w.business_rule).filter(Boolean)\n      });\n\n      await next();\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const validationErrors: ValidationError[] = error.errors.map(err => ({\n          field: err.path.join('.'),\n          code: err.code,\n          message: getVietnameseErrorMessage(err),\n          value: err.input,\n          expected: err.expected\n        }));\n\n        return c.json<ApiResponse<null>>({\n          success: false,\n          data: null,\n          message: 'D\u1EEF li\u1EC7u query kh\u00F4ng h\u1EE3p l\u1EC7',\n          errors: validationErrors\n        }, 400);\n      }\n\n      console.error('Query validation error:', error);\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'L\u1ED7i validate query parameters'\n      }, 500);\n    }\n  };\n};\n\n/**\n * Enterprise-level body validation with business rules\n */\nexport const validateBody = <T extends z.ZodSchema>(schema: T) => {\n  return async (c: Context<HonoEnv>, next: Next) => {\n    const startTime = Date.now();\n\n    try {\n      const contentType = c.req.header('content-type');\n      let body: any;\n\n      // Handle different content types\n      if (contentType?.includes('application/json')) {\n        body = await c.req.json();\n      } else if (contentType?.includes('application/x-www-form-urlencoded')) {\n        const formData = await c.req.formData();\n        body = Object.fromEntries(formData.entries());\n      } else {\n        return c.json<ApiResponse<null>>({\n          success: false,\n          data: null,\n          message: 'Content-Type kh\u00F4ng \u0111\u01B0\u1EE3c h\u1ED7 tr\u1EE3'\n        }, 400);\n      }\n\n      // Apply business logic preprocessing\n      const processedBody = await applyBusinessLogicPreprocessing(body, c);\n\n      // Validate with Zod schema\n      const validatedBody = schema.parse(processedBody.data);\n\n      // Store validation results\n      c.set('validatedBody', validatedBody);\n      c.set('validationWarnings', processedBody.warnings);\n      c.set('validationMetadata', {\n        validation_time: Date.now() - startTime,\n        schema_version: '1.0',\n        business_rules_applied: processedBody.businessRulesApplied\n      });\n\n      await next();\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const validationErrors: ValidationError[] = error.errors.map(err => ({\n          field: err.path.join('.'),\n          code: err.code,\n          message: getVietnameseErrorMessage(err),\n          value: err.input,\n          expected: err.expected\n        }));\n\n        return c.json<ApiResponse<null>>({\n          success: false,\n          data: null,\n          message: 'D\u1EEF li\u1EC7u request kh\u00F4ng h\u1EE3p l\u1EC7',\n          errors: validationErrors\n        }, 400);\n      }\n\n      console.error('Body validation error:', error);\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'L\u1ED7i validate request body'\n      }, 500);\n    }\n  };\n};\n\n/**\n * Enterprise-level path parameters validation\n */\nexport const validateParams = <T extends z.ZodSchema>(schema: T) => {\n  return async (c: Context<HonoEnv>, next: Next) => {\n    const startTime = Date.now();\n\n    try {\n      const params = c.req.param();\n\n      // Advanced parameter processing with business rules\n      const processedParams: any = {};\n      const warnings: ValidationError[] = [];\n\n      for (const [key, value] of Object.entries(params)) {\n        // ID validation with business rules\n        if (key.endsWith('_id') || key === 'id') {\n          const numValue = Number(value);\n          if (isNaN(numValue) || numValue <= 0) {\n            throw new z.ZodError([{\n              code: z.ZodIssueCode.invalid_type,\n              expected: 'number',\n              received: 'string',\n              path: [key],\n              message: `${key} ph\u1EA3i l\u00E0 s\u1ED1 nguy\u00EAn d\u01B0\u01A1ng`\n            }]);\n          }\n\n          // Business rule: Check for reasonable ID ranges\n          if (numValue > 2147483647) { // Max INT in most databases\n            warnings.push({\n              field: key,\n              code: 'ID_TOO_LARGE',\n              message: 'ID c\u00F3 th\u1EC3 qu\u00E1 l\u1EDBn',\n              value: numValue,\n              business_rule: 'MAX_ID_VALIDATION'\n            });\n          }\n\n          processedParams[key] = numValue;\n        }\n        // String parameters with sanitization\n        else {\n          const sanitized = value\n            .replace(/[<>'\"]/g, '')\n            .trim();\n\n          if (sanitized !== value) {\n            warnings.push({\n              field: key,\n              code: 'PARAM_SANITIZED',\n              message: 'Tham s\u1ED1 \u0111\u00E3 \u0111\u01B0\u1EE3c l\u00E0m s\u1EA1ch',\n              business_rule: 'PARAM_SANITIZATION'\n            });\n          }\n\n          processedParams[key] = sanitized;\n        }\n      }\n\n      const validatedParams = schema.parse(processedParams);\n\n      // Store results in context\n      c.set('validatedParams', validatedParams);\n      c.set('validationWarnings', warnings);\n      c.set('validationMetadata', {\n        validation_time: Date.now() - startTime,\n        schema_version: '1.0',\n        business_rules_applied: warnings.map(w => w.business_rule).filter(Boolean)\n      });\n\n      await next();\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const validationErrors: ValidationError[] = error.errors.map(err => ({\n          field: err.path.join('.'),\n          code: err.code,\n          message: getVietnameseErrorMessage(err),\n          value: err.input,\n          expected: err.expected\n        }));\n\n        return c.json<ApiResponse<null>>({\n          success: false,\n          data: null,\n          message: 'Tham s\u1ED1 \u0111\u01B0\u1EDDng d\u1EABn kh\u00F4ng h\u1EE3p l\u1EC7',\n          errors: validationErrors\n        }, 400);\n      }\n\n      console.error('Params validation error:', error);\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'L\u1ED7i validate path parameters'\n      }, 500);\n    }\n  };\n};\n\n/**\n * Business logic preprocessing for request data\n */\nasync function applyBusinessLogicPreprocessing(data: any, c: Context<HonoEnv>) {\n  const warnings: ValidationError[] = [];\n  const businessRulesApplied: string[] = [];\n  const processedData = { ...data };\n\n  // Price validation and formatting\n  if (processedData.price !== undefined) {\n    if (typeof processedData.price === 'string') {\n      processedData.price = parseFloat(processedData.price.replace(/[^\\d.-]/g, ''));\n    }\n\n    if (processedData.price < 0) {\n      warnings.push({\n        field: 'price',\n        code: 'NEGATIVE_PRICE',\n        message: 'Gi\u00E1 kh\u00F4ng th\u1EC3 \u00E2m, \u0111\u00E3 \u0111i\u1EC1u ch\u1EC9nh v\u1EC1 0',\n        value: processedData.price,\n        expected: 0,\n        business_rule: 'NON_NEGATIVE_PRICE'\n      });\n      processedData.price = 0;\n      businessRulesApplied.push('NON_NEGATIVE_PRICE');\n    }\n  }\n\n  // Quantity validation\n  if (processedData.quantity !== undefined) {\n    if (processedData.quantity <= 0) {\n      warnings.push({\n        field: 'quantity',\n        code: 'INVALID_QUANTITY',\n        message: 'S\u1ED1 l\u01B0\u1EE3ng ph\u1EA3i l\u1EDBn h\u01A1n 0',\n        value: processedData.quantity,\n        business_rule: 'POSITIVE_QUANTITY'\n      });\n    }\n    businessRulesApplied.push('POSITIVE_QUANTITY');\n  }\n\n  // Email normalization\n  if (processedData.email) {\n    processedData.email = processedData.email.toLowerCase().trim();\n    businessRulesApplied.push('EMAIL_NORMALIZATION');\n  }\n\n  // Phone number formatting (Vietnamese format)\n  if (processedData.phone) {\n    let phone = processedData.phone.replace(/\\D/g, '');\n    if (phone.startsWith('84')) {\n      phone = '0' + phone.substring(2);\n    }\n    processedData.phone = phone;\n    businessRulesApplied.push('PHONE_FORMATTING');\n  }\n\n  return {\n    data: processedData,\n    warnings,\n    businessRulesApplied\n  };\n}\n\n/**\n * Helper function to get validated data from context\n */\nexport function getValidated<T>(c: Context<HonoEnv>): T {\n  const validatedBody = c.get('validatedBody');\n  const validatedQuery = c.get('validatedQuery');\n  const validatedParams = c.get('validatedParams');\n\n  // Return the first available validated data\n  return (validatedBody || validatedQuery || validatedParams) as T;\n}\n\n/**\n * Convert Zod error messages to Vietnamese\n */\nfunction getVietnameseErrorMessage(error: z.ZodIssue): string {\n  switch (error.code) {\n    case z.ZodIssueCode.invalid_type:\n      return `Ki\u1EC3u d\u1EEF li\u1EC7u kh\u00F4ng h\u1EE3p l\u1EC7. Mong \u0111\u1EE3i ${error.expected}, nh\u1EADn \u0111\u01B0\u1EE3c ${error.received}`;\n    case z.ZodIssueCode.too_small:\n      if (error.type === 'string') {\n        return `Chu\u1ED7i qu\u00E1 ng\u1EAFn. T\u1ED1i thi\u1EC3u ${error.minimum} k\u00FD t\u1EF1`;\n      } else if (error.type === 'number') {\n        return `S\u1ED1 qu\u00E1 nh\u1ECF. T\u1ED1i thi\u1EC3u ${error.minimum}`;\n      }\n      return `Gi\u00E1 tr\u1ECB qu\u00E1 nh\u1ECF. T\u1ED1i thi\u1EC3u ${error.minimum}`;\n    case z.ZodIssueCode.too_big:\n      if (error.type === 'string') {\n        return `Chu\u1ED7i qu\u00E1 d\u00E0i. T\u1ED1i \u0111a ${error.maximum} k\u00FD t\u1EF1`;\n      } else if (error.type === 'number') {\n        return `S\u1ED1 qu\u00E1 l\u1EDBn. T\u1ED1i \u0111a ${error.maximum}`;\n      }\n      return `Gi\u00E1 tr\u1ECB qu\u00E1 l\u1EDBn. T\u1ED1i \u0111a ${error.maximum}`;\n    case z.ZodIssueCode.invalid_string:\n      if (error.validation === 'email') {\n        return '\u0110\u1ECBnh d\u1EA1ng email kh\u00F4ng h\u1EE3p l\u1EC7';\n      } else if (error.validation === 'url') {\n        return '\u0110\u1ECBnh d\u1EA1ng URL kh\u00F4ng h\u1EE3p l\u1EC7';\n      }\n      return '\u0110\u1ECBnh d\u1EA1ng chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7';\n    case z.ZodIssueCode.invalid_enum_value:\n      return `Gi\u00E1 tr\u1ECB kh\u00F4ng h\u1EE3p l\u1EC7. C\u00E1c gi\u00E1 tr\u1ECB cho ph\u00E9p: ${error.options.join(', ')}`;\n    default:\n      return error.message || 'D\u1EEF li\u1EC7u kh\u00F4ng h\u1EE3p l\u1EC7';\n  }\n}\n", "import { Hono } from 'hono';\nimport { getValidated, validateBody, validateQuery } from '../middleware/validation';\nimport { supplierCreateSchema, supplierUpdateSchema, supplierQuerySchema } from '../schemas';\nimport { runMigrations } from '../db/migrations';\n\nconst app = new Hono<{\n  Bindings: {\n    DB: D1Database;\n  };\n}>();\n\n// Test route\napp.get('/test', async (c) => {\n  return c.json({\n    success: true,\n    message: 'Suppliers route is working',\n    data: null,\n  });\n});\n\n// Force migration route\napp.get('/migrate', async (c) => {\n  try {\n    await runMigrations(c.env);\n    return c.json({\n      success: true,\n      message: 'Migrations completed successfully',\n      data: null,\n    });\n  } catch (error) {\n    console.error('Migration error:', error);\n    return c.json({\n      success: false,\n      message: 'Migration failed',\n      error: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// Create suppliers table directly\napp.get('/create-table', async (c) => {\n  try {\n    await c.env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS suppliers (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        contact_person TEXT,\n        email TEXT,\n        phone TEXT,\n        address TEXT,\n        is_active INTEGER NOT NULL DEFAULT 1,\n        created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n        updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\n      )\n    `).run();\n\n    // Insert sample data\n    await c.env.DB.prepare(`\n      INSERT OR IGNORE INTO suppliers (name, contact_person, email, phone, address, is_active) VALUES\n      ('C\u00F4ng ty TNHH ABC', 'Nguy\u1EC5n V\u0103n A', 'contact@abc.com', '0123456789', '123 \u0110\u01B0\u1EDDng ABC, TP.HCM', 1),\n      ('Nh\u00E0 ph\u00E2n ph\u1ED1i XYZ', 'Tr\u1EA7n Th\u1ECB B', 'info@xyz.com', '0987654321', '456 \u0110\u01B0\u1EDDng XYZ, H\u00E0 N\u1ED9i', 1),\n      ('C\u00F4ng ty Linh ki\u1EC7n DEF', 'L\u00EA V\u0103n C', 'sales@def.com', '0369852147', '789 \u0110\u01B0\u1EDDng DEF, \u0110\u00E0 N\u1EB5ng', 1)\n    `).run();\n\n    return c.json({\n      success: true,\n      message: 'Suppliers table created successfully',\n      data: null,\n    });\n  } catch (error) {\n    console.error('Create table error:', error);\n    return c.json({\n      success: false,\n      message: 'Failed to create suppliers table',\n      error: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// Get all suppliers with pagination and search\napp.get('/', async (c) => {\n  try {\n    const query = {\n      page: parseInt(c.req.query('page') || '1'),\n      limit: Math.min(parseInt(c.req.query('limit') || '10'), 100),\n      search: c.req.query('search'),\n      is_active: c.req.query('is_active') === 'true' ? true : c.req.query('is_active') === 'false' ? false : undefined\n    };\n\n    const page = query.page || 1;\n    const limit = Math.min(query.limit || 10, 100); // Max 100 items per page\n    const offset = (page - 1) * limit;\n    const search = query.search?.trim();\n    const isActive = query.is_active;\n\n    // Build WHERE clause\n    let whereClause = 'WHERE 1=1';\n    const params: any[] = [];\n\n    if (search) {\n      whereClause += ' AND (name LIKE ? OR contact_person LIKE ? OR email LIKE ? OR phone LIKE ?)';\n      const searchPattern = `%${search}%`;\n      params.push(searchPattern, searchPattern, searchPattern, searchPattern);\n    }\n\n    if (isActive !== undefined) {\n      whereClause += ' AND is_active = ?';\n      params.push(isActive ? 1 : 0);\n    }\n\n    // Get total count\n    const countQuery = `SELECT COUNT(*) as total FROM suppliers ${whereClause}`;\n    const countResult = await c.env.DB.prepare(countQuery).bind(...params).first();\n    const total = countResult?.total || 0;\n\n    // Get suppliers\n    const dataQuery = `\n      SELECT id, name, contact_person, email, phone, address, tax_number,\n             is_active, notes, created_at, updated_at\n      FROM suppliers\n      ${whereClause}\n      ORDER BY created_at DESC\n      LIMIT ? OFFSET ?\n    `;\n    const result = await c.env.DB.prepare(dataQuery).bind(...params, limit, offset).all();\n\n    const totalPages = Math.ceil(total / limit);\n\n    return c.json({\n      success: true,\n      data: result.results || [],\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages,\n        hasNext: page < totalPages,\n        hasPrev: page > 1,\n      },\n    });\n  } catch (error) {\n    console.error('Error fetching suppliers:', error);\n    return c.json({\n      success: false,\n      message: 'L\u1ED7i khi l\u1EA5y danh s\u00E1ch nh\u00E0 cung c\u1EA5p',\n      data: null,\n      error: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// Get supplier by ID\napp.get('/:id', async (c) => {\n  try {\n    const id = parseInt(c.req.param('id'));\n    \n    const supplier = await c.env.DB.prepare(`\n      SELECT id, name, contact_person, email, phone, address, tax_number,\n             is_active, notes, created_at, updated_at\n      FROM suppliers\n      WHERE id = ?\n    `).bind(id).first();\n    \n    if (!supplier) {\n      return c.json({\n        success: false,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y nh\u00E0 cung c\u1EA5p',\n        data: null,\n      }, 404);\n    }\n    \n    return c.json({\n      success: true,\n      data: supplier,\n    });\n  } catch (error) {\n    console.error('Error fetching supplier:', error);\n    return c.json({\n      success: false,\n      message: 'L\u1ED7i khi l\u1EA5y th\u00F4ng tin nh\u00E0 cung c\u1EA5p',\n      data: null,\n    }, 500);\n  }\n});\n\n// Create new supplier\napp.post('/', async (c) => {\n  try {\n    const supplierData = await c.req.json();\n\n    const result = await c.env.DB.prepare(`\n      INSERT INTO suppliers (name, contact_person, email, phone, address, tax_number, notes, is_active, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))\n    `).bind(\n      supplierData.name,\n      supplierData.contact_person || null,\n      supplierData.email || null,\n      supplierData.phone || null,\n      supplierData.address || null,\n      supplierData.tax_number || null,\n      supplierData.notes || null,\n      supplierData.is_active !== false ? 1 : 0\n    ).run();\n    \n    if (!result.success) {\n      throw new Error('Failed to create supplier');\n    }\n    \n    return c.json({\n      success: true,\n      message: 'T\u1EA1o nh\u00E0 cung c\u1EA5p th\u00E0nh c\u00F4ng',\n      data: { id: result.meta.last_row_id },\n    }, 201);\n  } catch (error) {\n    console.error('Error creating supplier:', error);\n    return c.json({\n      success: false,\n      message: 'L\u1ED7i khi t\u1EA1o nh\u00E0 cung c\u1EA5p',\n      data: null,\n    }, 500);\n  }\n});\n\n// Update supplier\napp.put('/:id', validateBody(supplierUpdateSchema), async (c) => {\n  try {\n    const id = parseInt(c.req.param('id'));\n    const supplierData = getValidated<{\n      name?: string;\n      contact_person?: string;\n      email?: string;\n      phone?: string;\n      address?: string;\n      tax_number?: string;\n      notes?: string;\n      is_active?: boolean;\n    }>(c);\n\n    // Build dynamic update query\n    const updateFields: string[] = [];\n    const params: any[] = [];\n\n    if (supplierData.name !== undefined) {\n      updateFields.push('name = ?');\n      params.push(supplierData.name);\n    }\n    if (supplierData.contact_person !== undefined) {\n      updateFields.push('contact_person = ?');\n      params.push(supplierData.contact_person);\n    }\n    if (supplierData.email !== undefined) {\n      updateFields.push('email = ?');\n      params.push(supplierData.email);\n    }\n    if (supplierData.phone !== undefined) {\n      updateFields.push('phone = ?');\n      params.push(supplierData.phone);\n    }\n    if (supplierData.address !== undefined) {\n      updateFields.push('address = ?');\n      params.push(supplierData.address);\n    }\n    if (supplierData.tax_number !== undefined) {\n      updateFields.push('tax_number = ?');\n      params.push(supplierData.tax_number);\n    }\n    if (supplierData.notes !== undefined) {\n      updateFields.push('notes = ?');\n      params.push(supplierData.notes);\n    }\n    if (supplierData.is_active !== undefined) {\n      updateFields.push('is_active = ?');\n      params.push(supplierData.is_active ? 1 : 0);\n    }\n\n    if (updateFields.length === 0) {\n      return c.json({\n        success: false,\n        message: 'Kh\u00F4ng c\u00F3 d\u1EEF li\u1EC7u \u0111\u1EC3 c\u1EADp nh\u1EADt',\n        data: null,\n      }, 400);\n    }\n\n    updateFields.push('updated_at = datetime(\\'now\\')');\n    params.push(id);\n\n    const result = await c.env.DB.prepare(`\n      UPDATE suppliers\n      SET ${updateFields.join(', ')}\n      WHERE id = ?\n    `).bind(...params).run();\n    \n    if (result.changes === 0) {\n      return c.json({\n        success: false,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y nh\u00E0 cung c\u1EA5p',\n        data: null,\n      }, 404);\n    }\n    \n    return c.json({\n      success: true,\n      message: 'C\u1EADp nh\u1EADt nh\u00E0 cung c\u1EA5p th\u00E0nh c\u00F4ng',\n      data: null,\n    });\n  } catch (error) {\n    console.error('Error updating supplier:', error);\n    return c.json({\n      success: false,\n      message: 'L\u1ED7i khi c\u1EADp nh\u1EADt nh\u00E0 cung c\u1EA5p',\n      data: null,\n    }, 500);\n  }\n});\n\n// Delete supplier\napp.delete('/:id', async (c) => {\n  try {\n    const id = parseInt(c.req.param('id'));\n    \n    const result = await c.env.DB.prepare(`\n      DELETE FROM suppliers WHERE id = ?\n    `).bind(id).run();\n    \n    if (result.changes === 0) {\n      return c.json({\n        success: false,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y nh\u00E0 cung c\u1EA5p',\n        data: null,\n      }, 404);\n    }\n    \n    return c.json({\n      success: true,\n      message: 'X\u00F3a nh\u00E0 cung c\u1EA5p th\u00E0nh c\u00F4ng',\n      data: null,\n    });\n  } catch (error) {\n    console.error('Error deleting supplier:', error);\n    return c.json({\n      success: false,\n      message: 'L\u1ED7i khi x\u00F3a nh\u00E0 cung c\u1EA5p',\n      data: null,\n    }, 500);\n  }\n});\n\nexport default app;\n", "/**\n * Promotions Management Routes\n */\n\nimport { Hono } from 'hono';\nimport { authenticate } from '../middleware/auth';\nimport { Env, ApiResponse } from '../types';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// Initialize promotions tables if they don't exist\nasync function initializePromotionsTables(env: Env) {\n  try {\n    // Check if promotions table exists\n    const tableInfo = await env.DB.prepare(`\n      SELECT name FROM sqlite_master WHERE type='table' AND name='promotions'\n    `).first();\n\n    if (!tableInfo) {\n      console.log('Creating promotions tables...');\n      \n      // Create promotions table\n      await env.DB.prepare(`\n        CREATE TABLE promotions (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          name TEXT NOT NULL,\n          description TEXT,\n          promotion_type TEXT NOT NULL CHECK (promotion_type IN ('percentage', 'fixed_amount', 'buy_x_get_y', 'free_shipping')),\n          discount_value REAL NOT NULL DEFAULT 0,\n          minimum_amount REAL DEFAULT 0,\n          maximum_discount REAL DEFAULT 0,\n          start_date DATETIME NOT NULL,\n          end_date DATETIME NOT NULL,\n          usage_limit INTEGER DEFAULT 0,\n          usage_count INTEGER NOT NULL DEFAULT 0,\n          is_active INTEGER NOT NULL DEFAULT 1,\n          applies_to TEXT NOT NULL DEFAULT 'all' CHECK (applies_to IN ('all', 'categories', 'products', 'customers')),\n          conditions TEXT,\n          created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n          updated_at DATETIME NOT NULL DEFAULT (datetime('now'))\n        )\n      `).run();\n\n      // Create promotion_products table\n      await env.DB.prepare(`\n        CREATE TABLE promotion_products (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          promotion_id INTEGER NOT NULL,\n          product_id INTEGER NOT NULL,\n          created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n          FOREIGN KEY (promotion_id) REFERENCES promotions(id) ON DELETE CASCADE,\n          FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,\n          UNIQUE(promotion_id, product_id)\n        )\n      `).run();\n\n      // Create promotion_categories table\n      await env.DB.prepare(`\n        CREATE TABLE promotion_categories (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          promotion_id INTEGER NOT NULL,\n          category_id INTEGER NOT NULL,\n          created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n          FOREIGN KEY (promotion_id) REFERENCES promotions(id) ON DELETE CASCADE,\n          FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE,\n          UNIQUE(promotion_id, category_id)\n        )\n      `).run();\n\n      // Create promotion_usage table\n      await env.DB.prepare(`\n        CREATE TABLE promotion_usage (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          promotion_id INTEGER NOT NULL,\n          sale_id INTEGER NOT NULL,\n          discount_amount REAL NOT NULL DEFAULT 0,\n          created_at DATETIME NOT NULL DEFAULT (datetime('now')),\n          FOREIGN KEY (promotion_id) REFERENCES promotions(id) ON DELETE CASCADE,\n          FOREIGN KEY (sale_id) REFERENCES sales(id) ON DELETE CASCADE\n        )\n      `).run();\n\n      // Insert sample promotions\n      const samplePromotions = [\n        {\n          name: 'Gi\u1EA3m gi\u00E1 10%',\n          description: 'Gi\u1EA3m gi\u00E1 10% cho t\u1EA5t c\u1EA3 s\u1EA3n ph\u1EA9m',\n          promotion_type: 'percentage',\n          discount_value: 10,\n          minimum_amount: 100000,\n          maximum_discount: 50000,\n          start_date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n          end_date: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n          usage_limit: 100,\n          is_active: 1,\n          applies_to: 'all'\n        },\n        {\n          name: 'Gi\u1EA3m 50k cho \u0111\u01A1n t\u1EEB 500k',\n          description: 'Gi\u1EA3m 50.000\u0111 cho \u0111\u01A1n h\u00E0ng t\u1EEB 500.000\u0111',\n          promotion_type: 'fixed_amount',\n          discount_value: 50000,\n          minimum_amount: 500000,\n          maximum_discount: 50000,\n          start_date: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n          end_date: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000).toISOString(),\n          usage_limit: 200,\n          is_active: 1,\n          applies_to: 'all'\n        },\n        {\n          name: 'Mua 2 t\u1EB7ng 1',\n          description: 'Mua 2 s\u1EA3n ph\u1EA9m t\u1EB7ng 1 s\u1EA3n ph\u1EA9m c\u00F9ng lo\u1EA1i',\n          promotion_type: 'buy_x_get_y',\n          discount_value: 0,\n          minimum_amount: 0,\n          maximum_discount: 0,\n          start_date: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n          end_date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(),\n          usage_limit: 50,\n          is_active: 1,\n          applies_to: 'products'\n        }\n      ];\n\n      for (const promotion of samplePromotions) {\n        await env.DB.prepare(`\n          INSERT INTO promotions (\n            name, description, promotion_type, discount_value,\n            minimum_amount, maximum_discount, start_date, end_date,\n            usage_limit, is_active, applies_to\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          promotion.name, promotion.description, promotion.promotion_type,\n          promotion.discount_value, promotion.minimum_amount, promotion.maximum_discount,\n          promotion.start_date, promotion.end_date, promotion.usage_limit,\n          promotion.is_active, promotion.applies_to\n        ).run();\n      }\n\n      console.log('Promotions tables created and sample data inserted');\n    }\n\n    console.log('Promotions tables checked/initialized successfully');\n  } catch (error) {\n    console.log('Promotions tables initialization error:', error);\n    throw error;\n  }\n}\n\n// Public endpoint to initialize promotions tables\napp.get('/init-tables', async (c) => {\n  try {\n    await initializePromotionsTables(c.env);\n\n    return c.json({\n      success: true,\n      data: null,\n      message: 'Promotions tables initialized'\n    });\n  } catch (error) {\n    console.error('Init promotions tables error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Init error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// Test endpoint without auth\napp.get('/test', async (c) => {\n  try {\n    await initializePromotionsTables(c.env);\n\n    const promotions = await c.env.DB.prepare(`\n      SELECT id, name, description, promotion_type, discount_value, \n             minimum_amount, is_active, start_date, end_date, usage_count, usage_limit\n      FROM promotions\n      ORDER BY created_at DESC\n      LIMIT 5\n    `).all();\n\n    return c.json({\n      success: true,\n      data: promotions.results,\n      message: 'Test promotions query successful'\n    });\n  } catch (error) {\n    console.error('Test promotions error:', error);\n    return c.json({\n      success: false,\n      data: null,\n      message: 'Test error: ' + (error instanceof Error ? error.message : String(error))\n    }, 500);\n  }\n});\n\n// GET /promotions - Get all promotions with pagination and filters\napp.get('/', async (c) => {\n  try {\n    await initializePromotionsTables(c.env);\n\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '10');\n    const search = c.req.query('search') || '';\n    const status = c.req.query('status') || '';\n    const type = c.req.query('type') || '';\n\n    const offset = (page - 1) * limit;\n\n    // Build WHERE conditions\n    const conditions = [];\n    const params = [];\n\n    if (search) {\n      conditions.push('(name LIKE ? OR description LIKE ?)');\n      params.push(`%${search}%`, `%${search}%`);\n    }\n\n    if (status === 'active') {\n      conditions.push('is_active = 1 AND start_date <= datetime(\"now\") AND end_date >= datetime(\"now\")');\n    } else if (status === 'inactive') {\n      conditions.push('is_active = 0');\n    } else if (status === 'expired') {\n      conditions.push('end_date < datetime(\"now\")');\n    } else if (status === 'upcoming') {\n      conditions.push('start_date > datetime(\"now\")');\n    }\n\n    if (type) {\n      conditions.push('promotion_type = ?');\n      params.push(type);\n    }\n\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : '';\n\n    // Get total count\n    const countQuery = `SELECT COUNT(*) as total FROM promotions ${whereClause}`;\n    const countResult = await c.env.DB.prepare(countQuery).bind(...params).first<{ total: number }>();\n    const total = countResult?.total || 0;\n\n    // Get promotions data\n    const promotionsQuery = `\n      SELECT\n        id, name, description, promotion_type, discount_value,\n        minimum_amount, maximum_discount, start_date, end_date,\n        usage_limit, usage_count, is_active, applies_to,\n        created_at, updated_at\n      FROM promotions\n      ${whereClause}\n      ORDER BY created_at DESC\n      LIMIT ? OFFSET ?\n    `;\n\n    const promotionsResult = await c.env.DB.prepare(promotionsQuery)\n      .bind(...params, limit, offset)\n      .all();\n\n    return c.json<ApiResponse<{\n      data: any[];\n      pagination: {\n        total: number;\n        page: number;\n        limit: number;\n        totalPages: number;\n      };\n    }>>({\n      success: true,\n      data: {\n        data: promotionsResult.results || [],\n        pagination: {\n          total,\n          page,\n          limit,\n          totalPages: Math.ceil(total / limit)\n        }\n      },\n      message: 'L\u1EA5y danh s\u00E1ch khuy\u1EBFn m\u00E3i th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Get promotions error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi l\u1EA5y danh s\u00E1ch khuy\u1EBFn m\u00E3i'\n    }, 500);\n  }\n});\n\n// POST /promotions - Create new promotion\napp.post('/', async (c) => {\n  try {\n    const data = await c.req.json();\n\n    // Validate required fields\n    if (!data.name || !data.promotion_type || !data.start_date || !data.end_date) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Thi\u1EBFu th\u00F4ng tin b\u1EAFt bu\u1ED9c'\n      }, 400);\n    }\n\n    // Validate dates\n    const startDate = new Date(data.start_date);\n    const endDate = new Date(data.end_date);\n\n    if (startDate >= endDate) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Ng\u00E0y k\u1EBFt th\u00FAc ph\u1EA3i sau ng\u00E0y b\u1EAFt \u0111\u1EA7u'\n      }, 400);\n    }\n\n    await initializePromotionsTables(c.env);\n\n    // Insert promotion\n    const result = await c.env.DB.prepare(`\n      INSERT INTO promotions (\n        name, description, promotion_type, discount_value,\n        minimum_amount, maximum_discount, start_date, end_date,\n        usage_limit, is_active, applies_to, conditions\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      data.name,\n      data.description || null,\n      data.promotion_type,\n      data.discount_value || 0,\n      data.minimum_amount || 0,\n      data.maximum_discount || 0,\n      data.start_date,\n      data.end_date,\n      data.usage_limit || 0,\n      data.is_active !== undefined ? data.is_active : 1,\n      data.applies_to || 'all',\n      data.conditions ? JSON.stringify(data.conditions) : null\n    ).run();\n\n    const promotionId = result.meta.last_row_id as number;\n\n    // Handle product associations\n    if (data.applies_to === 'products' && data.product_ids && Array.isArray(data.product_ids)) {\n      for (const productId of data.product_ids) {\n        await c.env.DB.prepare(`\n          INSERT INTO promotion_products (promotion_id, product_id)\n          VALUES (?, ?)\n        `).bind(promotionId, productId).run();\n      }\n    }\n\n    // Handle category associations\n    if (data.applies_to === 'categories' && data.category_ids && Array.isArray(data.category_ids)) {\n      for (const categoryId of data.category_ids) {\n        await c.env.DB.prepare(`\n          INSERT INTO promotion_categories (promotion_id, category_id)\n          VALUES (?, ?)\n        `).bind(promotionId, categoryId).run();\n      }\n    }\n\n    return c.json<ApiResponse<{ id: number }>>({\n      success: true,\n      data: { id: promotionId },\n      message: 'T\u1EA1o khuy\u1EBFn m\u00E3i th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Create promotion error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi t\u1EA1o khuy\u1EBFn m\u00E3i'\n    }, 500);\n  }\n});\n\n// GET /promotions/:id - Get promotion details\napp.get('/:id', async (c) => {\n  try {\n    const promotionId = parseInt(c.req.param('id'));\n\n    if (isNaN(promotionId)) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'ID khuy\u1EBFn m\u00E3i kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    await initializePromotionsTables(c.env);\n\n    // Get promotion details\n    const promotion = await c.env.DB.prepare(`\n      SELECT * FROM promotions WHERE id = ?\n    `).bind(promotionId).first();\n\n    if (!promotion) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y khuy\u1EBFn m\u00E3i'\n      }, 404);\n    }\n\n    // Get associated products if applicable\n    let products = [];\n    if (promotion.applies_to === 'products') {\n      const productResult = await c.env.DB.prepare(`\n        SELECT p.id, p.name, p.sku, p.price\n        FROM promotion_products pp\n        JOIN products p ON pp.product_id = p.id\n        WHERE pp.promotion_id = ?\n      `).bind(promotionId).all();\n      products = productResult.results || [];\n    }\n\n    // Get associated categories if applicable\n    let categories = [];\n    if (promotion.applies_to === 'categories') {\n      const categoryResult = await c.env.DB.prepare(`\n        SELECT c.id, c.name\n        FROM promotion_categories pc\n        JOIN categories c ON pc.category_id = c.id\n        WHERE pc.promotion_id = ?\n      `).bind(promotionId).all();\n      categories = categoryResult.results || [];\n    }\n\n    return c.json<ApiResponse<any>>({\n      success: true,\n      data: {\n        ...promotion,\n        products,\n        categories,\n        conditions: promotion.conditions ? JSON.parse(promotion.conditions) : null\n      },\n      message: 'L\u1EA5y chi ti\u1EBFt khuy\u1EBFn m\u00E3i th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Get promotion details error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi l\u1EA5y chi ti\u1EBFt khuy\u1EBFn m\u00E3i'\n    }, 500);\n  }\n});\n\n// PUT /promotions/:id - Update promotion\napp.put('/:id', async (c) => {\n  try {\n    const promotionId = parseInt(c.req.param('id'));\n    const data = await c.req.json();\n\n    if (isNaN(promotionId)) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'ID khuy\u1EBFn m\u00E3i kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    await initializePromotionsTables(c.env);\n\n    // Check if promotion exists\n    const existingPromotion = await c.env.DB.prepare(\n      'SELECT id FROM promotions WHERE id = ?'\n    ).bind(promotionId).first();\n\n    if (!existingPromotion) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y khuy\u1EBFn m\u00E3i'\n      }, 404);\n    }\n\n    // Validate dates if provided\n    if (data.start_date && data.end_date) {\n      const startDate = new Date(data.start_date);\n      const endDate = new Date(data.end_date);\n\n      if (startDate >= endDate) {\n        return c.json<ApiResponse<null>>({\n          success: false,\n          data: null,\n          message: 'Ng\u00E0y k\u1EBFt th\u00FAc ph\u1EA3i sau ng\u00E0y b\u1EAFt \u0111\u1EA7u'\n        }, 400);\n      }\n    }\n\n    // Update promotion\n    await c.env.DB.prepare(`\n      UPDATE promotions SET\n        name = COALESCE(?, name),\n        description = COALESCE(?, description),\n        promotion_type = COALESCE(?, promotion_type),\n        discount_value = COALESCE(?, discount_value),\n        minimum_amount = COALESCE(?, minimum_amount),\n        maximum_discount = COALESCE(?, maximum_discount),\n        start_date = COALESCE(?, start_date),\n        end_date = COALESCE(?, end_date),\n        usage_limit = COALESCE(?, usage_limit),\n        is_active = COALESCE(?, is_active),\n        applies_to = COALESCE(?, applies_to),\n        conditions = COALESCE(?, conditions),\n        updated_at = datetime('now')\n      WHERE id = ?\n    `).bind(\n      data.name || null,\n      data.description || null,\n      data.promotion_type || null,\n      data.discount_value !== undefined ? data.discount_value : null,\n      data.minimum_amount !== undefined ? data.minimum_amount : null,\n      data.maximum_discount !== undefined ? data.maximum_discount : null,\n      data.start_date || null,\n      data.end_date || null,\n      data.usage_limit !== undefined ? data.usage_limit : null,\n      data.is_active !== undefined ? data.is_active : null,\n      data.applies_to || null,\n      data.conditions ? JSON.stringify(data.conditions) : null,\n      promotionId\n    ).run();\n\n    // Update product associations if provided\n    if (data.product_ids !== undefined) {\n      // Remove existing associations\n      await c.env.DB.prepare(\n        'DELETE FROM promotion_products WHERE promotion_id = ?'\n      ).bind(promotionId).run();\n\n      // Add new associations\n      if (Array.isArray(data.product_ids)) {\n        for (const productId of data.product_ids) {\n          await c.env.DB.prepare(`\n            INSERT INTO promotion_products (promotion_id, product_id)\n            VALUES (?, ?)\n          `).bind(promotionId, productId).run();\n        }\n      }\n    }\n\n    // Update category associations if provided\n    if (data.category_ids !== undefined) {\n      // Remove existing associations\n      await c.env.DB.prepare(\n        'DELETE FROM promotion_categories WHERE promotion_id = ?'\n      ).bind(promotionId).run();\n\n      // Add new associations\n      if (Array.isArray(data.category_ids)) {\n        for (const categoryId of data.category_ids) {\n          await c.env.DB.prepare(`\n            INSERT INTO promotion_categories (promotion_id, category_id)\n            VALUES (?, ?)\n          `).bind(promotionId, categoryId).run();\n        }\n      }\n    }\n\n    return c.json<ApiResponse<null>>({\n      success: true,\n      data: null,\n      message: 'C\u1EADp nh\u1EADt khuy\u1EBFn m\u00E3i th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Update promotion error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi c\u1EADp nh\u1EADt khuy\u1EBFn m\u00E3i'\n    }, 500);\n  }\n});\n\n// DELETE /promotions/:id - Delete promotion\napp.delete('/:id', async (c) => {\n  try {\n    const promotionId = parseInt(c.req.param('id'));\n\n    if (isNaN(promotionId)) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'ID khuy\u1EBFn m\u00E3i kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    await initializePromotionsTables(c.env);\n\n    // Check if promotion exists\n    const existingPromotion = await c.env.DB.prepare(\n      'SELECT id, usage_count FROM promotions WHERE id = ?'\n    ).bind(promotionId).first<{ id: number; usage_count: number }>();\n\n    if (!existingPromotion) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng t\u00ECm th\u1EA5y khuy\u1EBFn m\u00E3i'\n      }, 404);\n    }\n\n    // Check if promotion has been used\n    if (existingPromotion.usage_count > 0) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'Kh\u00F4ng th\u1EC3 x\u00F3a khuy\u1EBFn m\u00E3i \u0111\u00E3 \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng'\n      }, 400);\n    }\n\n    // Delete promotion (cascade will handle related tables)\n    await c.env.DB.prepare('DELETE FROM promotions WHERE id = ?').bind(promotionId).run();\n\n    return c.json<ApiResponse<null>>({\n      success: true,\n      data: null,\n      message: 'X\u00F3a khuy\u1EBFn m\u00E3i th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Delete promotion error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi x\u00F3a khuy\u1EBFn m\u00E3i'\n    }, 500);\n  }\n});\n\n// PUT /promotions/:id/toggle - Toggle promotion active status\napp.put('/:id/toggle', async (c) => {\n  try {\n    const promotionId = parseInt(c.req.param('id'));\n\n    if (isNaN(promotionId)) {\n      return c.json<ApiResponse<null>>({\n        success: false,\n        data: null,\n        message: 'ID khuy\u1EBFn m\u00E3i kh\u00F4ng h\u1EE3p l\u1EC7'\n      }, 400);\n    }\n\n    await initializePromotionsTables(c.env);\n\n    // Toggle active status\n    await c.env.DB.prepare(`\n      UPDATE promotions\n      SET is_active = CASE WHEN is_active = 1 THEN 0 ELSE 1 END,\n          updated_at = datetime('now')\n      WHERE id = ?\n    `).bind(promotionId).run();\n\n    return c.json<ApiResponse<null>>({\n      success: true,\n      data: null,\n      message: 'C\u1EADp nh\u1EADt tr\u1EA1ng th\u00E1i khuy\u1EBFn m\u00E3i th\u00E0nh c\u00F4ng'\n    });\n  } catch (error) {\n    console.error('Toggle promotion status error:', error);\n    return c.json<ApiResponse<null>>({\n      success: false,\n      data: null,\n      message: 'L\u1ED7i khi c\u1EADp nh\u1EADt tr\u1EA1ng th\u00E1i khuy\u1EBFn m\u00E3i'\n    }, 500);\n  }\n});\n\nexport default app;\n", "import { Hono } from 'hono';\nimport { securityHeaders, accessLogger, sqlInjectionProtection, corsSecurity, rateLimit } from './middleware/security';\nimport { Env } from './types';\nimport { checkAndRunMigrations } from './db/migrations';\nimport { NotificationObject } from './durable_objects/NotificationObject';\nimport { InventorySyncObject } from './durable_objects/InventorySyncObject';\nimport { POSSyncObject } from './durable_objects/POSSyncObject';\n\n// Import routes\nimport authRouter from './routes/auth';\nimport productsRouter from './routes/products';\nimport categoriesRouter from './routes/categories';\nimport salesRouter from './routes/sales';\nimport usersRouter from './routes/users';\nimport reportsRouter from './routes/reports';\nimport settingsRouter from './routes/settings';\nimport storesRouter from './routes/stores';\nimport inventoryRouter from './routes/inventory';\nimport returnsRouter from './routes/returns';\nimport customersRouter from './routes/customers';\nimport suppliersRouter from './routes/suppliers';\nimport promotionsRouter from './routes/promotions';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS middleware - ph\u1EA3i l\u00E0 middleware \u0111\u1EA7u ti\u00EAn\napp.use('*', corsSecurity);\n\n// Run migrations before worker starts\napp.use('*', async (c, next) => {\n  try {\n    const workerInitKey = 'worker_initialized';\n    const initialized = await c.env.CACHE.get(workerInitKey);\n\n    if (!initialized) {\n      console.log('Initializing worker and checking migrations');\n      await checkAndRunMigrations(c.env);\n      await c.env.CACHE.put(workerInitKey, 'true', { expirationTtl: 3600 });\n      console.log('Worker initialization complete');\n    }\n  } catch (error) {\n    console.error('Worker initialization error:', error);\n  }\n  await next();\n});\n\n// Global security middleware\napp.use('*', accessLogger);\napp.use('*', securityHeaders);\napp.use('*', sqlInjectionProtection);\n\n// API routes with versioning\nconst api = new Hono<{ Bindings: Env }>();\n\n// Auth routes\napi.use('/auth/*', rateLimit('auth'));\napi.route('/auth', authRouter);\n\n// Product routes\napi.use('/products/*', rateLimit('default'));\napi.route('/products', productsRouter);\n\n// Categories routes\napi.use('/categories/*', rateLimit('default'));\napi.route('/categories', categoriesRouter);\n\n// Sales routes\napi.use('/sales/*', rateLimit('default'));\napi.route('/sales', salesRouter);\n\n// Users routes\napi.use('/users/*', rateLimit('critical'));\napi.route('/users', usersRouter);\n\n// Reports routes\napi.use('/reports/*', rateLimit('default'));\napi.route('/reports', reportsRouter);\n\n// Settings routes\napi.use('/settings/*', rateLimit('critical'));\napi.route('/settings', settingsRouter);\n\n// Stores routes\napi.use('/stores/*', rateLimit('default'));\napi.route('/stores', storesRouter);\n\n// Inventory routes\napi.use('/inventory/*', rateLimit('default'));\napi.route('/inventory', inventoryRouter);\n\n// Returns routes\napi.use('/returns/*', rateLimit('default'));\napi.route('/returns', returnsRouter);\n\n// Customers routes\napi.use('/customers/*', rateLimit('default'));\napi.route('/customers', customersRouter);\n\n// Suppliers routes\napi.use('/suppliers/*', rateLimit('default'));\napi.route('/suppliers', suppliersRouter);\n\n// Promotions routes\napi.use('/promotions/*', rateLimit('default'));\napi.route('/promotions', promotionsRouter);\n\n// Mount API with version prefix\napp.route('/api/v1', api);\n\n// Default route\napp.get('/', (c) => c.text('SmartPOS API - S\u1EED d\u1EE5ng endpoint /api/v1 \u0111\u1EC3 truy c\u1EADp API'));\n\n// Not found handler - should not be reached due to catch-all above\napp.notFound((c) => {\n  return c.json({\n    success: false,\n    message: 'Endpoint kh\u00F4ng t\u1ED3n t\u1EA1i',\n    error: 'NOT_FOUND'\n  }, 404);\n});\n\n// Error handler\napp.onError((err, c) => {\n  console.error('Application error:', err);\n  return c.json({ \n    success: false, \n    message: '\u0110\u00E3 x\u1EA3y ra l\u1ED7i t\u1EEB h\u1EC7 th\u1ED1ng',\n    error: err.message\n  }, 500);\n});\n\nexport default app;\nexport { NotificationObject, InventorySyncObject, POSSyncObject }; ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\src\\\\index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\.wrangler\\\\tmp\\\\bundle-5T0opL\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\.wrangler\\\\tmp\\\\bundle-5T0opL\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pos\\\\.wrangler\\\\tmp\\\\bundle-5T0opL\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["options", "__accessCheck", "__privateGet", "__privateAdd", "__privateSet", "raw", "param", "__accessCheck", "__privateGet", "__privateAdd", "__privateSet", "app", "Node", "Node", "Hono", "verify", "decode", "sign", "verify", "util", "objectUtil", "errorUtil", "errorMap", "ctx", "result", "issues", "elements", "processed", "result", "r", "ZodFirstPartyTypeKind", "crypto", "Hono", "SESSION_TTL", "sign", "verify", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "validate", "getValidated", "app", "Hono", "getValidated", "app", "Hono", "app", "Hono"]
}
