import React, { useState } from 'react';
import {
  Container,
  Typography,
  Grid,
  Card,
  CardContent,
  CardActions,
  Button,
  Box,
  Chip,
  Avatar,
  Alert,
  Paper,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  Divider,
  IconButton,
  Tooltip,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions
} from '@mui/material';
import {
  Assessment as ReportsIcon,
  MonetizationOn as RevenueIcon,
  AccountBalance as FinanceIcon,
  Psychology as AIIcon,
  TrendingUp as TrendingIcon,
  Insights as InsightsIcon,
  Launch as LaunchIcon,
  Close as CloseIcon,
  CheckCircle as CheckIcon,
  NewReleases as NewIcon,
  Speed as SpeedIcon,
  Security as SecurityIcon,
  Analytics as AnalyticsIcon
} from '@mui/icons-material';
import { useNavigate } from 'react-router-dom';

interface SmartReport {
  id: string;
  title: string;
  description: string;
  route: string;
  icon: React.ReactNode;
  color: string;
  status: 'ready' | 'beta' | 'new';
  features: string[];
  aiEnabled: boolean;
}

const SmartReportsDemo: React.FC = () => {
  const navigate = useNavigate();
  const [selectedReport, setSelectedReport] = useState<SmartReport | null>(null);
  const [dialogOpen, setDialogOpen] = useState(false);

  const smartReports: SmartReport[] = [
    {
      id: 'revenue-report',
      title: 'B√°o c√°o Doanh thu Th√¥ng minh',
      description: 'Ph√¢n t√≠ch doanh thu v·ªõi AI insights, d·ª± b√°o xu h∆∞·ªõng v√† khuy·∫øn ngh·ªã kinh doanh',
      route: '/reports/revenue',
      icon: <RevenueIcon />,
      color: '#4CAF50',
      status: 'ready',
      features: [
        'AI ph√¢n t√≠ch xu h∆∞·ªõng doanh thu',
        'D·ª± b√°o tƒÉng tr∆∞·ªüng th√¥ng minh',
        'Khuy·∫øn ngh·ªã t·ªëi ∆∞u h√≥a',
        'Ph√¢n t√≠ch theo ng√†y trong tu·∫ßn',
        'Benchmarking v·ªõi ng√†nh',
        'Real-time data visualization'
      ],
      aiEnabled: true
    },
    {
      id: 'financial-analysis',
      title: 'Ph√¢n t√≠ch T√†i ch√≠nh AI',
      description: 'B√°o c√°o t√†i ch√≠nh to√†n di·ªán v·ªõi AI insights v√† ph√¢n t√≠ch r·ªßi ro',
      route: '/finance',
      icon: <FinanceIcon />,
      color: '#2196F3',
      status: 'ready',
      features: [
        'Ph√¢n t√≠ch t·ª∑ su·∫•t l·ª£i nhu·∫≠n',
        'AI ƒë√°nh gi√° r·ªßi ro t√†i ch√≠nh',
        'D·ª± b√°o cash flow',
        'So s√°nh v·ªõi k·ª≥ tr∆∞·ªõc',
        'Ch·ªâ s·ªë t√†i ch√≠nh chi ti·∫øt',
        'Khuy·∫øn ngh·ªã c·∫£i thi·ªán'
      ],
      aiEnabled: true
    },
    {
      id: 'reports-overview',
      title: 'T·ªïng quan B√°o c√°o',
      description: 'Dashboard t·ªïng h·ª£p t·∫•t c·∫£ b√°o c√°o v·ªõi AI-powered insights',
      route: '/reports',
      icon: <ReportsIcon />,
      color: '#FF9800',
      status: 'beta',
      features: [
        'Dashboard t·ªïng h·ª£p',
        'B√°o c√°o ƒëa d·∫°ng',
        'Filters th√¥ng minh',
        'Export multiple formats',
        'Scheduled reports',
        'Custom report builder'
      ],
      aiEnabled: true
    }
  ];

  const handleReportClick = (report: SmartReport) => {
    setSelectedReport(report);
    setDialogOpen(true);
  };

  const handleNavigateToReport = (route: string) => {
    setDialogOpen(false);
    navigate(route);
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'ready': return '#4CAF50';
      case 'beta': return '#FF9800';
      case 'new': return '#2196F3';
      default: return '#666';
    }
  };

  const getStatusLabel = (status: string) => {
    switch (status) {
      case 'ready': return 'S·∫µn s√†ng';
      case 'beta': return 'Beta';
      case 'new': return 'M·ªõi';
      default: return status;
    }
  };

  return (
    <Container maxWidth="xl" sx={{ py: 4 }}>
      {/* Header */}
      <Box sx={{ mb: 4, textAlign: 'center' }}>
        <Typography variant="h3" component="h1" gutterBottom>
          üìä Smart Reports System
        </Typography>
        <Typography variant="h6" color="text.secondary" sx={{ mb: 3 }}>
          H·ªá th·ªëng b√°o c√°o th√¥ng minh v·ªõi AI-powered insights
        </Typography>
        
        <Alert severity="success" sx={{ mb: 3 }}>
          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
            <CheckIcon />
            <Typography>
              T·∫•t c·∫£ b√°o c√°o ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p v·ªõi AI v√† s·∫µn s√†ng s·ª≠ d·ª•ng!
            </Typography>
          </Box>
        </Alert>
      </Box>

      {/* Smart Reports Grid */}
      <Grid container spacing={4} sx={{ mb: 6 }}>
        {smartReports.map((report) => (
          <Grid item xs={12} md={6} lg={4} key={report.id}>
            <Card 
              sx={{ 
                height: '100%',
                display: 'flex',
                flexDirection: 'column',
                transition: 'all 0.3s ease',
                '&:hover': {
                  transform: 'translateY(-4px)',
                  boxShadow: 6
                }
              }}
            >
              <CardContent sx={{ flexGrow: 1 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <Avatar 
                    sx={{ 
                      bgcolor: report.color, 
                      mr: 2,
                      width: 56,
                      height: 56
                    }}
                  >
                    {report.icon}
                  </Avatar>
                  <Box>
                    <Typography variant="h6" component="h2">
                      {report.title}
                    </Typography>
                    <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>
                      <Chip
                        label={getStatusLabel(report.status)}
                        size="small"
                        sx={{ 
                          bgcolor: getStatusColor(report.status),
                          color: 'white',
                          fontWeight: 'bold'
                        }}
                      />
                      {report.aiEnabled && (
                        <Chip
                          icon={<AIIcon />}
                          label="AI"
                          size="small"
                          color="primary"
                          variant="outlined"
                        />
                      )}
                    </Box>
                  </Box>
                </Box>
                
                <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
                  {report.description}
                </Typography>
                
                <Typography variant="subtitle2" gutterBottom>
                  T√≠nh nƒÉng n·ªïi b·∫≠t:
                </Typography>
                <List dense>
                  {report.features.slice(0, 3).map((feature, index) => (
                    <ListItem key={index} sx={{ py: 0.5 }}>
                      <ListItemIcon sx={{ minWidth: 32 }}>
                        <CheckIcon color="success" fontSize="small" />
                      </ListItemIcon>
                      <ListItemText 
                        primary={feature}
                        primaryTypographyProps={{ variant: 'body2' }}
                      />
                    </ListItem>
                  ))}
                  {report.features.length > 3 && (
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemText 
                        primary={`+${report.features.length - 3} t√≠nh nƒÉng kh√°c...`}
                        primaryTypographyProps={{ 
                          variant: 'body2',
                          color: 'text.secondary',
                          fontStyle: 'italic'
                        }}
                      />
                    </ListItem>
                  )}
                </List>
              </CardContent>
              
              <CardActions sx={{ p: 2, pt: 0 }}>
                <Button
                  size="small"
                  onClick={() => handleReportClick(report)}
                  startIcon={<LaunchIcon />}
                >
                  Chi ti·∫øt
                </Button>
                <Button
                  size="small"
                  variant="contained"
                  onClick={() => handleNavigateToReport(report.route)}
                  sx={{ bgcolor: report.color }}
                >
                  M·ªü b√°o c√°o
                </Button>
              </CardActions>
            </Card>
          </Grid>
        ))}
      </Grid>

      {/* Features Overview */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h5" gutterBottom>
          üöÄ T√≠nh nƒÉng n√¢ng cao
        </Typography>
        <Grid container spacing={3}>
          <Grid item xs={12} sm={6} md={3}>
            <Box sx={{ textAlign: 'center' }}>
              <Avatar sx={{ bgcolor: '#4CAF50', mx: 'auto', mb: 2 }}>
                <AIIcon />
              </Avatar>
              <Typography variant="h6">AI-Powered</Typography>
              <Typography variant="body2" color="text.secondary">
                Machine learning insights v√† d·ª± b√°o th√¥ng minh
              </Typography>
            </Box>
          </Grid>
          <Grid item xs={12} sm={6} md={3}>
            <Box sx={{ textAlign: 'center' }}>
              <Avatar sx={{ bgcolor: '#2196F3', mx: 'auto', mb: 2 }}>
                <SpeedIcon />
              </Avatar>
              <Typography variant="h6">Real-time</Typography>
              <Typography variant="body2" color="text.secondary">
                D·ªØ li·ªáu c·∫≠p nh·∫≠t theo th·ªùi gian th·ª±c
              </Typography>
            </Box>
          </Grid>
          <Grid item xs={12} sm={6} md={3}>
            <Box sx={{ textAlign: 'center' }}>
              <Avatar sx={{ bgcolor: '#FF9800', mx: 'auto', mb: 2 }}>
                <AnalyticsIcon />
              </Avatar>
              <Typography variant="h6">Advanced Analytics</Typography>
              <Typography variant="body2" color="text.secondary">
                Ph√¢n t√≠ch s√¢u v·ªõi visualizations ƒë·∫πp m·∫Øt
              </Typography>
            </Box>
          </Grid>
          <Grid item xs={12} sm={6} md={3}>
            <Box sx={{ textAlign: 'center' }}>
              <Avatar sx={{ bgcolor: '#9C27B0', mx: 'auto', mb: 2 }}>
                <SecurityIcon />
              </Avatar>
              <Typography variant="h6">Enterprise Ready</Typography>
              <Typography variant="body2" color="text.secondary">
                B·∫£o m·∫≠t cao v√† hi·ªáu su·∫•t t·ªëi ∆∞u
              </Typography>
            </Box>
          </Grid>
        </Grid>
      </Paper>

      {/* Report Detail Dialog */}
      <Dialog 
        open={dialogOpen} 
        onClose={() => setDialogOpen(false)}
        maxWidth="md"
        fullWidth
      >
        <DialogTitle>
          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
            <Box sx={{ display: 'flex', alignItems: 'center' }}>
              {selectedReport && (
                <Avatar sx={{ bgcolor: selectedReport.color, mr: 2 }}>
                  {selectedReport.icon}
                </Avatar>
              )}
              <Typography variant="h6">
                {selectedReport?.title}
              </Typography>
            </Box>
            <IconButton onClick={() => setDialogOpen(false)}>
              <CloseIcon />
            </IconButton>
          </Box>
        </DialogTitle>
        
        <DialogContent>
          {selectedReport && (
            <Box>
              <Typography variant="body1" sx={{ mb: 3 }}>
                {selectedReport.description}
              </Typography>
              
              <Typography variant="h6" gutterBottom>
                T·∫•t c·∫£ t√≠nh nƒÉng:
              </Typography>
              <List>
                {selectedReport.features.map((feature, index) => (
                  <ListItem key={index}>
                    <ListItemIcon>
                      <CheckIcon color="success" />
                    </ListItemIcon>
                    <ListItemText primary={feature} />
                  </ListItem>
                ))}
              </List>
              
              <Divider sx={{ my: 2 }} />
              
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                <Chip
                  label={`Tr·∫°ng th√°i: ${getStatusLabel(selectedReport.status)}`}
                  sx={{ 
                    bgcolor: getStatusColor(selectedReport.status),
                    color: 'white'
                  }}
                />
                {selectedReport.aiEnabled && (
                  <Chip
                    icon={<AIIcon />}
                    label="AI-Enabled"
                    color="primary"
                  />
                )}
              </Box>
            </Box>
          )}
        </DialogContent>
        
        <DialogActions>
          <Button onClick={() => setDialogOpen(false)}>
            ƒê√≥ng
          </Button>
          {selectedReport && (
            <Button
              variant="contained"
              onClick={() => handleNavigateToReport(selectedReport.route)}
              sx={{ bgcolor: selectedReport.color }}
            >
              M·ªü b√°o c√°o
            </Button>
          )}
        </DialogActions>
      </Dialog>

      {/* Footer Stats */}
      <Paper sx={{ p: 3, textAlign: 'center' }}>
        <Typography variant="h6" gutterBottom>
          üìà Th·ªëng k√™ Smart Reports
        </Typography>
        <Grid container spacing={3} sx={{ mt: 2 }}>
          <Grid item xs={12} sm={3}>
            <Box>
              <Typography variant="h4" color="primary">
                {smartReports.length}
              </Typography>
              <Typography variant="body2">
                Smart Reports
              </Typography>
            </Box>
          </Grid>
          <Grid item xs={12} sm={3}>
            <Box>
              <Typography variant="h4" color="success.main">
                {smartReports.filter(r => r.aiEnabled).length}
              </Typography>
              <Typography variant="body2">
                AI-Enabled
              </Typography>
            </Box>
          </Grid>
          <Grid item xs={12} sm={3}>
            <Box>
              <Typography variant="h4" color="warning.main">
                {smartReports.filter(r => r.status === 'ready').length}
              </Typography>
              <Typography variant="body2">
                Production Ready
              </Typography>
            </Box>
          </Grid>
          <Grid item xs={12} sm={3}>
            <Box>
              <Typography variant="h4" color="info.main">
                100%
              </Typography>
              <Typography variant="body2">
                Vietnamese Localized
              </Typography>
            </Box>
          </Grid>
        </Grid>
      </Paper>
    </Container>
  );
};

export default SmartReportsDemo;
